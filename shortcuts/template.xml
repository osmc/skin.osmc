<template>
	
	<submenu include="widgetControl" level="1">
		<property name="id" tag="mainmenuid" />
		<controls>
			<!-- List used to control movement between widgets -->
			<control type="list" id="1000$SKINSHORTCUTS[id]">
				<left>1300</left>
				<top>-10000</top>
				<width>100</width>
				<height>300</height>
				<scrolltime>200</scrolltime>
				<skinshortcuts>visibility</skinshortcuts>
				<defaultcontrol>1</defaultcontrol>
				<itemlayout width="100" height="100">
					<control type="label">
						<width>100</width>
						<height>100</height>
						<textcolor>TextColor2</textcolor>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
				<focusedlayout width="100" height="100">
					<control type="label">
						<width>100</width>
						<height>100</height>
						<label>$INFO[ListItem.Label]</label>
					</control>
					<skinshortcuts insert="onfocus">items</skinshortcuts>
				</focusedlayout>
				<content>
					<skinshortcuts insert="controlItems">items</skinshortcuts>
				</content>
			</control>

			<!-- Buttons used to move between widgets -->
			<control type="button" id="9005">
				<description>Select previous widget</description>
				<left>500</left>
				<top>-10000</top>
				<skinshortcuts>visibility</skinshortcuts>
				<label>Previous</label>
				<skinshortcuts insert="onclickPrevious">items</skinshortcuts>
				<onfocus>SetProperty(changeWidget-1000$SKINSHORTCUTS[id],True,10000)</onfocus>
				<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-1000$SKINSHORTCUTS[id],False,10000),00:03,silent)</onfocus>
				<onfocus>Control.Move(1000$SKINSHORTCUTS[id],-1)</onfocus>
				<onclick>noop</onclick>
			</control>
			<control type="button" id="9006">
				<description>Select current widget</description>
				<left>700</left>
				<top>-10000</top>
				<skinshortcuts>visibility</skinshortcuts>
				<label>Current</label>
				<skinshortcuts insert="onclickCurrent">items</skinshortcuts>
				<onfocus condition="Integer.IsEqual(Container(1000$SKINSHORTCUTS[id]).NumItems,0)">Control.SetFocus(9000)</onfocus>
				<onclick>noop</onclick>
			</control>
			<control type="button" id="9007">
				<description>Select next widget</description>
				<left>900</left>
				<top>-10000</top>
				<skinshortcuts>visibility</skinshortcuts>
				<label>Next</label>
				<skinshortcuts insert="onclickNext">items</skinshortcuts>
				<onfocus>SetProperty(changeWidget-1000$SKINSHORTCUTS[id],True,10000)</onfocus>
				<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-1000$SKINSHORTCUTS[id],False,10000),00:03,silent)</onfocus>
				<onfocus>Control.Move(1000$SKINSHORTCUTS[id],1)</onfocus>
				<onclick>noop</onclick>
			</control>

			<!-- Widget heading/details -->
			<control type="group">
				<skinshortcuts>visibility</skinshortcuts>
				<include content="widgetHeading">
					<param name="container">1000$SKINSHORTCUTS[id]</param>
				</include>
			</control>

		</controls>
		<items insert="controlItems">
			<!-- Items that will appear in the control list -->
			<property name="subid" tag="mainmenuid" />
			<property name="widgetName" tag="property" attribute="name|widgetName" />
			<controls>
				<item id="$SKINSHORTCUTS[subid]">
					<label>$SKINSHORTCUTS[widgetName]</label>
					<onclick>noop</onclick>
					<visible>Integer.IsGreater(Container(10$SKINSHORTCUTS[id]0$SKINSHORTCUTS[subid]).NumItems,0) | Container(10$SKINSHORTCUTS[id]0$SKINSHORTCUTS[subid]).IsUpdating</visible>
					<property name="widgetID">$SKINSHORTCUTS[id]-$SKINSHORTCUTS[subid]</property>
					<property name="widgetContainer">10$SKINSHORTCUTS[id]0$SKINSHORTCUTS[subid]</property>
				</item>
			</controls>
		</items>
		<items insert="onclickPrevious">
			<!-- Control that should be focused when going to the previous widget -->
			<property name="subid" tag="mainmenuid" />
			<property name="widgetName" tag="property" attribute="name|widgetName" />
			<controls>
				<onfocus condition="String.IsEqual(Container(1000$SKINSHORTCUTS[id]).ListItem(-1).Property(widgetID),$SKINSHORTCUTS[id]-$SKINSHORTCUTS[subid])">Control.SetFocus(10$SKINSHORTCUTS[id]0$SKINSHORTCUTS[subid])</onfocus>
			</controls>
		</items>
		<items insert="onclickCurrent">
			<!-- Control that should be focused when going to the current widget -->
			<property name="subid" tag="mainmenuid" />
			<property name="widgetName" tag="property" attribute="name|widgetName" />
			<controls>
				<onfocus condition="String.IsEqual(Container(1000$SKINSHORTCUTS[id]).ListItem.Property(widgetID),$SKINSHORTCUTS[id]-$SKINSHORTCUTS[subid])">Control.SetFocus(10$SKINSHORTCUTS[id]0$SKINSHORTCUTS[subid])</onfocus>
			</controls>
		</items>
		<items insert="onclickNext">
			<!-- Control that should be focused when going to the next widget -->
			<property name="subid" tag="mainmenuid" />
			<property name="widgetName" tag="property" attribute="name|widgetName" />
			<controls>
				<onfocus condition="String.IsEqual(Container(1000$SKINSHORTCUTS[id]).ListItem(1).Property(widgetID),$SKINSHORTCUTS[id]-$SKINSHORTCUTS[subid])">Control.SetFocus(10$SKINSHORTCUTS[id]0$SKINSHORTCUTS[subid])</onfocus>
			</controls>
		</items>
	</submenu>

	<other>
		<controls>
			<description>This is a fake template which is needed to trick Skin Shortcuts into building the submenuOther templates</description>
		</controls>
	</other>
 
	<submenuOther include="vertical" level="1">
		<!-- Weather widget, Vertical home -->
		<condition tag="property" attribute="name|widget">WeatherWidget</condition>
		
		<propertyGroup>mainmenuWidgets</propertyGroup>
		<propertyGroup>lumosLayout</propertyGroup>

		<controls>
			<control type="list" id="10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]">
				<viewtype label="">list</viewtype>
				<orientation>horizontal</orientation>
				<defaultcontrol always="true">0</defaultcontrol>
				<scrolltime tween="sine" easing="out">240</scrolltime>

				<!-- Widget layout -->
				<include>widgetLayout-tall</include>

				<!-- Widget oncontrol -->
				<include content="widgetOnControl">
					<param name="container">1000$SKINSHORTCUTS[auto-rootID]</param>
				</include>
				
				<!-- Widget layout slide -->
				<include content="widgetLayoutSlide-tall">
					<param name="container">10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]</param>
				</include>

				<!-- Widget animation -->
				<include content="widgetAnimation">
					<param name="container1">1000$SKINSHORTCUTS[auto-rootID]</param>
					<param name="container2">$SKINSHORTCUTS[auto-rootID]-$SKINSHORTCUTS[id]</param>
				</include>

				<itemlayout width="203" height="306">
					<control type="group">
						<control type="label">
							<top>2</top>
							<width>203</width>
							<height>33</height>
							<font>Font33</font>
							<align>center</align>
							<textcolor>TextColor2</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
						<control type="image">
							<left>13</left>
							<top>0</top>
							<width>183</width>
							<height>306</height>
							<texture colordiffuse="DiffusePosterNF" background="true">$INFO[ListItem.Icon]</texture>
							<aspectratio align="center">keep</aspectratio>
							<visible>!Skin.HasSetting(weatherIcons.multi)</visible>
						</control>
						<control type="multiimage">
							<left>13</left>
							<top>0</top>
							<width>183</width>
							<height>306</height>
							<imagepath>$INFO[ListItem.Property(weatherIconMulti)]</imagepath>
							<colordiffuse>DiffusePosterNF</colordiffuse>
							<timeperimage>200</timeperimage>
							<aspectratio align="center">keep</aspectratio>
							<visible>Skin.HasSetting(weatherIcons.multi)</visible>
						</control>
						<control type="label">
							<top>249</top>
							<width>203</width>
							<height>25</height>
							<font>Font25</font>
							<align>center</align>
							<textcolor>TextColor2</textcolor>
							<label>$INFO[ListItem.Label2]</label>
						</control>
					</control>
				</itemlayout>

				<focusedlayout width="203" height="306">
					<control type="group">
						<control type="label">
							<top>2</top>
							<width>203</width>
							<height>33</height>
							<font>Font33</font>
							<align>center</align>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>TextColor2</textcolor>
						</control>
						<control type="image">
							<left>13</left>
							<top>0</top>
							<width>183</width>
							<height>306</height>
							<texture colordiffuse="DiffusePosterNF" background="true">$INFO[ListItem.Icon]</texture>
							<aspectratio align="center">keep</aspectratio>
							<visible>!Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id])</visible>
							<visible>!Skin.HasSetting(weatherIcons.multi)</visible>
						</control>
						<control type="image">
							<left>13</left>
							<top>0</top>
							<width>183</width>
							<height>306</height>
							<texture background="true">$INFO[ListItem.Icon]</texture>
							<aspectratio align="center">keep</aspectratio>
							<visible>Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id])</visible>
							<visible>!Skin.HasSetting(weatherIcons.multi)</visible>
						</control>
						<control type="multiimage">
							<left>13</left>
							<top>0</top>
							<width>183</width>
							<height>306</height>
							<imagepath>$INFO[ListItem.Property(weatherIconMulti)]</imagepath>
							<colordiffuse>DiffusePosterNF</colordiffuse>
							<timeperimage>200</timeperimage>
							<aspectratio align="center">keep</aspectratio>
							<visible>!Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id])</visible>
							<visible>Skin.HasSetting(weatherIcons.multi)</visible>
						</control>
						<control type="multiimage">
							<left>13</left>
							<top>0</top>
							<width>183</width>
							<height>306</height>
							<imagepath>$INFO[ListItem.Property(weatherIconMulti)]</imagepath>
							<timeperimage>200</timeperimage>
							<aspectratio align="center">keep</aspectratio>
							<visible>Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id])</visible>
							<visible>Skin.HasSetting(weatherIcons.multi)</visible>
						</control>
						<control type="label">
							<top>249</top>
							<width>203</width>
							<height>25</height>
							<font>Font25</font>
							<align>center</align>
							<textcolor>TextColor2</textcolor>
							<label>$INFO[ListItem.Label2]</label>
						</control>
					</control>
				</focusedlayout>

				<content target="$SKINSHORTCUTS[target]">$SKINSHORTCUTS[path]</content>
			</control>
		</controls>

	</submenuOther>

	<submenuOther include="vertical" level="1">
		<!-- Non-weather widget, Vertical home -->
		<condition tag="property" attribute="name|widgetPath" />

		<property name="id" tag="mainmenuid" />
		
		<propertyGroup>mainmenuWidgets</propertyGroup>
		<propertyGroup>lumosLayout</propertyGroup>

		<controls>
			<control type="list" id="10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]">
				<viewtype label="">list</viewtype>
				<orientation>horizontal</orientation>
				<defaultcontrol always="true">0</defaultcontrol>
				<scrolltime tween="sine" easing="out">240</scrolltime>

				<!-- Widget layout -->
				<include condition="$PYTHON['True' if layout != 'wide' else 'False']">widgetLayout-tall</include>
				<include condition="$PYTHON['False' if layout != 'wide' else 'True']">widgetLayout-wide</include>

				<!-- Widget oncontrol -->
				<include content="widgetOnControl">
					<param name="container">1000$SKINSHORTCUTS[auto-rootID]</param>
				</include>
				
				<!-- Widget layout slide -->
				<include condition="$PYTHON['True' if layout != 'wide' else 'False']" content="widgetLayoutSlide-tall">
					<param name="container">10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]</param>
				</include>
				<include condition="$PYTHON['False' if layout != 'wide' else 'True']" content="widgetLayoutSlide-wide">
					<param name="container">10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]</param>
				</include>

				<!-- Widget animation -->
				<include content="widgetAnimation">
					<param name="container1">1000$SKINSHORTCUTS[auto-rootID]</param>
					<param name="container2">$SKINSHORTCUTS[auto-rootID]-$SKINSHORTCUTS[id]</param>
				</include>

				<itemlayout width="$SKINSHORTCUTS[layoutWidth]" height="$SKINSHORTCUTS[layoutHeight]">
					<include content="$PYTHON[$SKINSHORTCUTS[primary-art]]">
						<description>Primary art</description>
						<param name="width">$SKINSHORTCUTS[imageWidth]</param>
						<param name="height">$SKINSHORTCUTS[imageHeight]</param>
						<param name="colordiffuse">DiffusePosterNF</param>
						<param name="fallback">$SKINSHORTCUTS[artFallback]</param>
						<param name="art">$INFO[ListItem.$SKINSHORTCUTS[art]]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">$SKINSHORTCUTS[shadow]</param>
						<param name="visible">![$PYTHON[$SKINSHORTCUTS[secondary-visibility]]]</param>
					</include>
					<include content="$PYTHON[$SKINSHORTCUTS[secondary-art]]">
						<description>Fallback art</description>
						<param name="width">$SKINSHORTCUTS[imageWidth]</param>
						<param name="height">$SKINSHORTCUTS[imageHeight]</param>
						<param name="colordiffuse">DiffusePosterNF</param>
						<param name="fallback">$SKINSHORTCUTS[artFallback]</param>
						<param name="art">$INFO[ListItem.$SKINSHORTCUTS[art2]]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">$SKINSHORTCUTS[shadow]</param>
						<param name="visible">$PYTHON[$SKINSHORTCUTS[secondary-visibility]]</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="width">$SKINSHORTCUTS[imageWidth]</param>
						<param name="height">$SKINSHORTCUTS[imageHeight]</param>
						<param name="colordiffuse">DiffusePosterNF</param>
						<param name="fallback">$SKINSHORTCUTS[artFallback]</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">$SKINSHORTCUTS[shadow]</param>
						<param name="visible">[ $PYTHON[$SKINSHORTCUTS[secondary-visibility]] ] + [ $PYTHON[$SKINSHORTCUTS[fallback-visibility]] ]</param>
					</include>

					<control type="image">
						<left>$PYTHON[int(imageWidth) - 45]</left>
						<top>$PYTHON[int(imageHeight) - 50]</top>
						<width>35</width>
						<height>49</height>
						<texture>$VAR[StatusOverlayWide]</texture>
						<visible>!Skin.HasSetting(widgetIcons)</visible>
						<colordiffuse>OverlayColorNF</colordiffuse>
					</control>
				</itemlayout>

				<focusedlayout width="$SKINSHORTCUTS[layoutWidth]" height="$SKINSHORTCUTS[layoutHeight]">
						<control type="group">
							<include content="$PYTHON[$SKINSHORTCUTS[primary-art]]">
								<description>Primary art</description>
								<param name="width">$SKINSHORTCUTS[imageWidth]</param>
								<param name="height">$SKINSHORTCUTS[imageHeight]</param>
								<param name="fallback">$SKINSHORTCUTS[artFallback]</param>
								<param name="art">$INFO[ListItem.$SKINSHORTCUTS[art]]</param>
								<param name="aspectratio">keep</param>
								<param name="shadow">$SKINSHORTCUTS[shadow]</param>
								<param name="visible">![$PYTHON[$SKINSHORTCUTS[secondary-visibility]]]</param>
							</include>
							<include content="$PYTHON[$SKINSHORTCUTS[secondary-art]]">
								<description>Fallback art</description>
								<param name="width">$SKINSHORTCUTS[imageWidth]</param>
								<param name="height">$SKINSHORTCUTS[imageHeight]</param>
								<param name="fallback">$SKINSHORTCUTS[artFallback]</param>
								<param name="art">$INFO[ListItem.$SKINSHORTCUTS[art2]]</param>
								<param name="aspectratio">keep</param>
								<param name="shadow">$SKINSHORTCUTS[shadow]</param>
								<param name="visible">$PYTHON[$SKINSHORTCUTS[secondary-visibility]]</param>
							</include>
							<include content="widget-image">
								<description>Catch-all art</description>
								<param name="width">$SKINSHORTCUTS[imageWidth]</param>
								<param name="height">$SKINSHORTCUTS[imageHeight]</param>
								<param name="fallback">$SKINSHORTCUTS[artFallback]</param>
								<param name="art">$INFO[ListItem.Icon]</param>
								<param name="aspectratio">keep</param>
								<param name="shadow">$SKINSHORTCUTS[shadow]</param>
								<param name="visible">[ $PYTHON[$SKINSHORTCUTS[secondary-visibility]] ] + [ $PYTHON[$SKINSHORTCUTS[fallback-visibility]] ]</param>
							</include>
							<control type="image">
								<left>$PYTHON[int(imageWidth) - 45]</left>
								<top>$PYTHON[int(imageHeight) - 50]</top>
								<width>35</width>
								<height>49</height>
								<texture>$VAR[StatusOverlayWide]</texture>
								<visible>!Skin.HasSetting(widgetIcons)</visible>
							</control>
							<visible>Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id])</visible>
						</control>
						<control type="group">
							<include content="$PYTHON[$SKINSHORTCUTS[primary-art]]">
								<description>Primary art</description>
								<param name="width">$SKINSHORTCUTS[imageWidth]</param>
								<param name="height">$SKINSHORTCUTS[imageHeight]</param>
								<param name="colordiffuse">DiffusePosterNF</param>
								<param name="fallback">$SKINSHORTCUTS[artFallback]</param>
								<param name="art">$INFO[ListItem.$SKINSHORTCUTS[art]]</param>
								<param name="aspectratio">keep</param>
								<param name="shadow">$SKINSHORTCUTS[shadow]</param>
								<param name="visible">![$PYTHON[$SKINSHORTCUTS[secondary-visibility]]]</param>
							</include>
							<include content="$PYTHON[$SKINSHORTCUTS[secondary-art]]">
								<description>Fallback art</description>
								<param name="width">$SKINSHORTCUTS[imageWidth]</param>
								<param name="height">$SKINSHORTCUTS[imageHeight]</param>
								<param name="colordiffuse">DiffusePosterNF</param>
								<param name="fallback">$SKINSHORTCUTS[artFallback]</param>
								<param name="art">$INFO[ListItem.$SKINSHORTCUTS[art2]]</param>
								<param name="aspectratio">keep</param>
								<param name="shadow">$SKINSHORTCUTS[shadow]</param>
								<param name="visible">$PYTHON[$SKINSHORTCUTS[secondary-visibility]]</param>
							</include>
							<include content="widget-image">
								<description>Catch-all art</description>
								<param name="width">$SKINSHORTCUTS[imageWidth]</param>
								<param name="height">$SKINSHORTCUTS[imageHeight]</param>
								<param name="colordiffuse">DiffusePosterNF</param>
								<param name="fallback">$SKINSHORTCUTS[artFallback]</param>
								<param name="art">$INFO[ListItem.Icon]</param>
								<param name="aspectratio">keep</param>
								<param name="shadow">$SKINSHORTCUTS[shadow]</param>
								<param name="visible">[ $PYTHON[$SKINSHORTCUTS[secondary-visibility]] ] + [ $PYTHON[$SKINSHORTCUTS[fallback-visibility]] ]</param>
							</include>
							<control type="image">
								<left>$PYTHON[int(imageWidth) - 45]</left>
								<top>$PYTHON[int(imageHeight) - 50]</top>
								<width>35</width>
								<height>49</height>
								<texture>$VAR[StatusOverlayWide]</texture>
								<visible>!Skin.HasSetting(widgetIcons)</visible>
								<colordiffuse>OverlayColorNF</colordiffuse>
							</control>
							<visible>!Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id])</visible>
						</control>

				</focusedlayout>

				<content target="$SKINSHORTCUTS[target]">$SKINSHORTCUTS[path]</content>
			</control>

		</controls>

	</submenuOther>



	<submenuOther include="reloading" level="1">
		<property name="id" tag="mainmenuid" />
		<propertyGroup>mainmenuWidgets</propertyGroup>
		<propertyGroup>lumosLayout</propertyGroup>

		<controls>
			<control type="image">
				<width>36</width>
				<height>36</height>
				<texture>busy-small.gif</texture>
				<skinshortcuts>visibility</skinshortcuts>
				<visible>String.IsEqual(Container(1000$SKINSHORTCUTS[auto-rootID]).ListItem.Property(widgetID),$SKINSHORTCUTS[auto-rootID]-$SKINSHORTCUTS[id]) + Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).IsUpdating</visible>
			</control>
		</controls>
	</submenuOther>



	<propertyGroup name="mainmenuWidgets">
		<property name="id" tag="mainmenuid" />
		<property name="labelID" tag="property" attribute="name|labelID" />
		<property name="submenuVisibility" tag="property" attribute="name|submenuVisibility" />

		<property name="layout" tag="property" attribute="name|layout" />
		<property name="layout">tall</property>

		<property name="autoscroll" tag="property" attribute="name|autoscroll" />
		<property name="autoscroll">False</property>

		<property name="top">250</property>	

		<property name="name" tag="property" attribute="name|widgetName" />
		<property name="path" tag="property" attribute="name|widgetPath" />
		<property name="target" tag="property" attribute="name|widgetTarget" />
		<property name="target"></property>
		<property name="path">$INCLUDE[skinshortcuts-group-$SKINSHORTCUTS[submenuVisibility]]</property>

		<property name="art" tag="property" attribute="name|widgetArt" />
		<property name="art2" tag="property" attribute="name|widgetFallbackArt" />
		<property name="art">Icon</property>
		<property name="art2">Icon</property>

		<property name="artFallback" tag="property" attribute="name|widgetType" value="movies">DefaultMovie.png</property>
		<property name="artFallback" tag="property" attribute="name|widgetType" value="tvshows">DefaultTVShows.png</property>
		<property name="artFallback" tag="property" attribute="name|widgetType" value="seasons">DefaultTVShows.png</property>
		<property name="artFallback" tag="property" attribute="name|widgetType" value="episodes">DefaultMovies.png</property>
		<property name="artFallback" tag="property" attribute="name|widgetType" value="albums">DefaultMusicAlbums.png</property>
		<property name="artFallback" tag="property" attribute="name|widgetType" value="artists">DefaultMusicArtist.png</property>
		<property name="artFallback" tag="property" attribute="name|widgetType" value="songs">DefaultMusicSongs.png</property>
		<property name="artFallback" tag="property" attribute="name|widgetType" value="pvr">DefaultLiveTV.png</property>
		<property name="artFallback">DefaultShortcut.png</property>

		<property name="shadow">noop</property>

		<property name="itemLabel" tag="label" />
		<property name="itemAction" tag="property" attribute="name|path" />
		<property name="itemIcon" tag="thumb" />
		<property name="itemIcon" tag="icon" />
		<property name="itemIcon">DefaultShortcut.png</property>

		<property name="widgetInclude" tag="property" attribute="name|widgetPath">widget-content</property>
		<property name="widgetInclude">widget-static</property>

		<property name="id" tag="mainmenuid" />
		<property name="submenuVisibility" tag="property" attribute="name|submenuVisibility" />
		<property name="label" tag="label" />
		<property name="background" tag="property" attribute="name|background" />

	</propertyGroup>

	<propertyGroup name="LumosLayout">
		<!-- Layout - wide -->
		<property name="layoutTop" tag="property" attribute="name|layout" value="wide">-177</property>
		<property name="layoutWidth" tag="property" attribute="name|layout" value="wide">345</property>
		<property name="layoutHeight" tag="property" attribute="name|layout" value="wide">219</property>
		<property name="imageWidth" tag="property" attribute="name|layout" value="wide">325</property>
		<property name="imageHeight" tag="property" attribute="name|layout" value="wide">216</property>
		<property name="imageEmpty" tag="property" attribute="name|layout" value="wide">wide-empty.png</property>
		<property name="layoutFocus" tag="property" attribute="name|layout" value="wide">4</property>
		<property name="layoutMovement" tag="property" attribute="name|layout" value="wide">widget-movement-wide</property>

		<!-- Layout - tall -->
		<property name="layoutTop">-306</property>
		<property name="layoutWidth">203</property>
		<property name="layoutHeight">306</property>
		<property name="imageWidth">183</property>
		<property name="imageHeight">306</property>
		<property name="imageEmpty">poster-empty.png</property>
		<property name="layoutFocus">3</property>

		<!-- Vertical menu -->
		<property name="containerWidth" tag="property" attribute="name|layout" value="wide">1035</property>
		<property name="containerWidth">1218</property>
		<property name="containerTop" tag="property" attribute="name|layout" value="wide">475</property>
		<property name="containerTop">387</property>
		<property name="containerLeft" tag="property" attribute="name|layout" value="wide">2788</property>
		<property name="containerLeft">2605</property>

		<!-- Horizontal menu -->
		<property name="containerWidthHorizontal" tag="property" attribute="name|layout" value="wide">1725</property>
		<property name="containerWidthHorizontal">1827</property>
		<property name="containerTopHorizontal" tag="property" attribute="name|layout" value="tall">300</property>
		<property name="containerTopHorizontal">387</property>
		<property name="containerLeftHorizontal" tag="property" attribute="name|layout" value="wide">-1902.5</property>
		<property name="containerLeftHorizontal">-1953.5</property>

		<!-- Python snippets -->
		<property name="primary-art">'widget-fakelandscape' if art in 'FAKELANDSCAPE' else 'widget-faketvlandscape' if art in 'FAKETVLANDSCAPE' else 'widget-image'</property>
		<property name="secondary-art">'widget-fakelandscape' if art2 in 'FAKELANDSCAPE' else 'widget-faketvlandscape' if art2 in 'FAKETVLANDSCAPE' else 'widget-image'</property>
		<property name="secondary-visibility">'IsEmpty(ListItem.Art(fanart)) + IsEmpty(ListItem.Art(clearlogo))' if art in 'FAKELANDSCAPE' else 'IsEmpty(ListItem.Art(fanart)) + IsEmpty(ListItem.Art(tvshow.clearlogo))' if art in 'FAKETVLANDSCAPE' else 'IsEmpty(ListItem.%s)' %(art)</property>
		<property name="fallback-visibility">'IsEmpty(ListItem.Art(fanart)) + IsEmpty(ListItem.Art(clearlogo))' if art2 in 'FAKELANDSCAPE' else 'IsEmpty(ListItem.Art(fanart)) + IsEmpty(ListItem.Art(tvshow.clearlogo))' if art2 in 'FAKETVLANDSCAPE' else 'IsEmpty(ListItem.%s)' %(art2)</property>

	</propertyGroup>

	<submenuOther include="widgetDetails" level="1">
		<property name="id" tag="mainmenuid" />
		<property name="submenuVisibility" tag="property" attribute="name|submenuVisibility" />
		<property name="isWeather" tag="property" attribute="name|widget" value="WeatherWidget">True</property>
		<property name="isWeather">False</property>
		<variables>			
			<variable name="widgetDetails">
				<!-- Not selected -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + String.IsEqual(Container(1000$SKINSHORTCUTS[auto-rootID]).ListItem.Property(widgetID),$SKINSHORTCUTS[auto-rootID]-$SKINSHORTCUTS[id]) + !Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id])">[COLOR TextColor2]$INFO[Container(1000$SKINSHORTCUTS[auto-rootID]).ListItem.Label][/COLOR]</value>

				<!-- Selected, not loaded -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + Integer.IsEqual(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).NumItems,0)">$LOCALIZE[20186]...</value>

				<!-- Weather widget -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + $SKINSHORTCUTS[isWeather]">[COLOR TextColor1]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Property(outlook)][/COLOR]</value>
				<!-- TVShow/Season Widget -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + !IsEmpty(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Property(WatchedEpisodes))">[COLOR TextColor1]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
				<!-- Episodes Widget -->
					<!-- Season + Epsioden < 10 -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + !IsEmpty(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season) + !Integer.IsGreater(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season,9) + !Integer.IsGreater(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode,9) + !String.Contains(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode,s)">[COLOR TextColor1][LIGHT]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season]E0$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode] &#8226; $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Title][/COLOR]</value>
					<!-- Season < 10 + Epsioden > 10 -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + !IsEmpty(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season) + !Integer.IsGreater(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season,9) + Integer.IsGreater(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode,9) + !String.Contains(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode,s)">[COLOR TextColor1][LIGHT]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season]E$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode] &#8226; $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Title][/COLOR]</value>
					<!-- Season > 10 + Epsioden < 10 -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + !IsEmpty(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season) + Integer.IsGreater(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season,9) + !Integer.IsGreater(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode,9) + !String.Contains(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode,s)">[COLOR TextColor1][LIGHT]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season]E0$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode] &#8226; $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Title][/COLOR]</value>
					<!-- Season > 10 + Epsioden > 10 -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + !IsEmpty(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season) + Integer.IsGreater(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season,9) + Integer.IsGreater(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode,9) + !String.Contains(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode,s)">[COLOR TextColor1][LIGHT]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season]E$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode] &#8226; $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Title][/COLOR]</value>
				
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + !IsEmpty(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season) + String.Contains(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode,s)">[COLOR TextColor1][LIGHT]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.TVShowTitle][/LIGHT][CR]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Episode,[UPPERCASE],[/UPPERCASE]] &#8226; $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Title][/COLOR]</value>
				<!-- PVR Channels - With Info -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + !IsEmpty(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.ChannelName) + !IsEmpty(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.StartTime)">[COLOR TextColor1]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Label][CR][LIGHT]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Title] ($INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.StartTime] - $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.EndTime])[CR]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.NextTitle] ($INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.NextStartTime] - $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
				<!-- PVR Channels - No Info -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + !IsEmpty(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.ChannelName)">[COLOR TextColor1]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
				<!-- PVR Recordings -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) + !IsEmpty(Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.StartTime)">[COLOR TextColor1]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Label][CR][LIGHT]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.StartDate] $INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.StartTime][/LIGHT][/COLOR]</value>
				<!-- Others -->
				<value condition="Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id])">[COLOR TextColor1]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Label][/COLOR]</value>
			</variable>
			<variable name="widgetBackground">
				<value condition="Window.Is(Home) + Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + [Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) | String.IsEqual(Skin.String(menuStyle),lumos)] + !$SKINSHORTCUTS[isWeather]">$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Art(fanart)]</value>
				<value condition="Window.Is(Home) + Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + [Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) | String.IsEqual(Skin.String(menuStyle),lumos)] + [$SKINSHORTCUTS[isWeather] + !Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Property(weatherFanart)]$INFO[Skin.String(weatherFanart.ext)]</value>
				<value condition="Window.Is(Home) + Control.IsVisible(1000$SKINSHORTCUTS[auto-rootID]) + [Control.HasFocus(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]) | String.IsEqual(Skin.String(menuStyle),lumos)] + [$SKINSHORTCUTS[isWeather] + Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Property(weatherFanart)]/</value>
				<value condition="!Window.Is(Home) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
				<value condition="[Window.IsActive(visualisation) | Skin.HasSetting(BackgroundVisualisation)] + !String.IsEmpty(MusicPlayer.Property(Fanart_Image))">$INFO[MusicPlayer.Property(Fanart_Image)]</value>
				<value>$VAR[OtherBackgroundImage]</value>
			</variable>
			<variable name="SeasonContainerArgs">
				<!--<value condition="Integer.IsLess(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season,10)">S0$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season,,]</value>-->
				<value>S$INFO[Container(10$SKINSHORTCUTS[auto-rootID]0$SKINSHORTCUTS[id]).ListItem.Season]</value>
			</variable>
		</variables>
	</submenuOther>
	
</template>
