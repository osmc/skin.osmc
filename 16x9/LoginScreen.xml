<?xml version="1.0" encoding="UTF-8"?>
<window>
	<!-- loginscreen -->
	<backgroundcolor>0x00000000</backgroundcolor>
	<defaultcontrol always="true">52</defaultcontrol>

	<!-- Skin settings plot font size -->
	<onload condition="String.IsEmpty(Skin.String(PlotFont))">Skin.SetString(PlotFont,S)</onload>

	<!-- Skin settings plot font size -->
	<onload condition="String.IsEmpty(Skin.String(HideOSD))">Skin.SetString(HideOSD,Always)</onload>
	<onload condition="String.IsEqual(Skin.String(HideOSD),Off)">Skin.SetString(HideOSD,Always)</onload>

	<!-- Adjust non-focus dim opacity -->
	<onload condition="String.IsEmpty(Skin.String(NFDimOpac))">Skin.SetString(NFDimOpac,100)</onload>

	<!-- Skin settings background + colors -->
	<onload condition="String.IsEmpty(Skin.String(WelcomeDialogShown)) + !System.HasAddon(service.osmc.settings)">ActivateWindow(1101)</onload>
	<onload condition="String.IsEqual(Skin.String(BackgroundImage),custom)">Skin.SetString(BackgroundImage,1)</onload>
	<onload condition="String.IsEmpty(Skin.String(BackgroundImage))">Skin.SetString(BackgroundImage,1)</onload>
	<onload condition="String.IsEmpty(Skin.String(BackgroundDefaultImage))">Skin.SetString(BackgroundDefaultImage,yes)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.text1))">Skin.SetString(color.text1,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.text2))">Skin.SetString(color.text2,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.text3))">Skin.SetString(color.text3,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.text4))">Skin.SetString(color.text4,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.darken))">Skin.SetString(color.darken,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.overlayfo))">Skin.SetString(color.overlayfo,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.overlaynf))">Skin.SetString(color.overlaynf,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.selected))">Skin.SetString(color.selected,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.fanartdiffuse))">Skin.SetString(color.fanartdiffuse,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.homenf))">Skin.SetString(color.homenf,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.dialog1))">Skin.SetString(color.dialog1,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.dialog2))">Skin.SetString(color.dialog2,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.disabled))">Skin.SetString(color.disabled,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.invalid))">Skin.SetString(color.invalid,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.dialogoverlayfo))">Skin.SetString(color.dialogoverlayfo,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.dialogoverlaynf))">Skin.SetString(color.dialogoverlaynf,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.background))">Skin.SetString(color.background,None)</onload>
	<onload condition="String.IsEmpty(Skin.String(color.overlay))">Skin.SetString(color.overlay,None)</onload>
	<onload condition="String.IsEqual(Skin.String(DefaultColorSet),Default)">Skin.SetString(DefaultColorSet,OSMC Blue)</onload>
	<onload condition="String.IsEmpty(Skin.String(DefaultColorSet))">Skin.SetString(DefaultColorSet,OSMC Blue)</onload>
	<onload condition="String.IsEmpty(Skin.String(DefaultColors))">Skin.SetString(DefaultColors,yes)</onload>
	<onload condition="String.IsEmpty(Skin.String(DefaultBackgroundOpacity))">Skin.SetString(DefaultBackgroundOpacity,High)</onload>
	<onload condition="String.IsEmpty(Skin.String(DefaultOverlayOpacity))">Skin.SetString(DefaultOverlayOpacity,High)</onload>
	<onload condition="String.IsEmpty(Skin.String(OSMCBackgroundOverlay))">Skin.SetString(OSMCBackgroundOverlay,1)</onload>
	<onload condition="String.IsEmpty(Skin.String(videoinfostartduration))">Skin.SetString(videoinfostartduration,10s)</onload>
	<onload condition="String.IsEmpty(Skin.String(videoinfoendduration))">Skin.SetString(videoinfoendduration,10s)</onload>

	<controls>

		<!-- Background -->
		<include>WindowBackgroundImage</include>

		<!-- Time -->
		<include>Time</include>

		<!-- Logo -->
		<control type="image">
			<left>120</left>
			<top>105</top>
			<width>50</width>
			<height>50</height>
			<texture>logo.png</texture>
			<include>WindowFadeAnimation</include>
		</control>

		<!-- Main group -->
		<control type="group">
			<include>WindowFadeAnimation</include>

			<!-- Image -->
			<control type="image">
				<left>120</left>
				<top>225</top>
				<width>405</width>
				<height>666</height>
				<texture>$INFO[ListItem.Icon]</texture>
				<aspectratio aligny="center">keep</aspectratio>
				<visible>!String.Contains(ListItem.Icon,unknown-user)</visible>
			</control>
			<control type="image">
				<left>120</left>
				<top>225</top>
				<width>405</width>
				<height>600</height>
				<texture>DefaultActor.png</texture>
				<colordiffuse>$VAR[OverlayColorFO]</colordiffuse>
				<aspectratio aligny="center">keep</aspectratio>
				<visible>String.Contains(ListItem.Icon,unknown-user)</visible>
			</control>

			<!-- View -->
			<control type="fixedlist" id="52">
				<left>750</left>
				<centertop>50%</centertop>
				<width>1050</width>
				<height>720</height>
				<onup>52</onup>
				<ondown>52</ondown>
				<onleft>ActivateWindow(shutdownmenu)</onleft>
				<onright>noop</onright>
				<focusposition>3</focusposition>
				<orientation>vertical</orientation>
				<viewtype label="535">list</viewtype>
				<scrolltime tween="sine" easing="out">240</scrolltime>

				<itemlayout height="90" width="1050">
					<control type="label">
						<left>32</left>
						<top>0</top>
						<width>1018</width>
						<height>90</height>
						<font>Font36</font>
						<label>[LIGHT]$INFO[ListItem.Label][/LIGHT]</label>
						<textcolor>$VAR[TextColor2]</textcolor>
					</control>
				</itemlayout>

				<focusedlayout width="1242" height="156">
					<control type="label">
						<left>32</left>
						<top>43</top>
						<width>1018</width>
						<height>48</height>
						<font>Font48</font>
						<label>[B]$INFO[ListItem.Label][/B]</label>
						<textcolor>$VAR[TextColor1]</textcolor>
						<animation effect="fade" start="100" end="50" time="200" tween="cubic" easing="out" reversible="true" condition="!Control.HasFocus(52)">Conditional</animation>
					</control>
					<control type="image">
						<left>32</left>
						<top>43</top>
						<width>1018</width>
						<height>58</height>
						<texture colordiffuse="$VAR[TextColor1]">$VAR[focus58]</texture>
						<animation effect="fade" start="100" end="50" time="200" tween="cubic" easing="out" reversible="true" condition="!Control.HasFocus(52)">Conditional</animation>
					</control>
					<control type="label">
						<left>32</left>
						<top>100</top>
						<width>1018</width>
						<height>27</height>
						<font>Font27</font>
						<label>$INFO[ListItem.Label2]</label>
						<textcolor>$VAR[TextColor2]</textcolor>
						<animation effect="fade" start="100" end="50" time="200" tween="cubic" easing="out" reversible="true" condition="!Control.HasFocus(52)">Conditional</animation>
					</control>
				</focusedlayout>

			</control>
			
			<control type="group">
				<visible>Control.HasFocus(52) + !Window.IsVisible(shutdownmenu)</visible>
				<animation effect="fade" start="0" end="100" time="200">VisibleChange</animation>
				<animation effect="slide" time="200" start="-200,0" end="0,0">WindowOpen</animation>
				<animation effect="slide" time="200" start="0,0" end="-200,0">WindowClose</animation>
				<control type="image">
					<left>10</left>
					<centertop>50%</centertop>
					<width>30</width>
					<height>30</height>
					<texture colordiffuse="$VAR[DialogColor2]">sub-menu-left.png</texture>
				</control>
			</control>

		</control>

	</controls>

</window>