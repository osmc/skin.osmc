<?xml version="1.0" encoding="UTF-8"?>
<includes>
	
	<!-- Heading/Time/Now playing -->
	<include name="Time">
		<param name="heading">$VAR[HeadingLabelPrimary]</param>
		<param name="narrow">False</param>
		<param name="wide">True</param>
		<param name="secondary">True</param>
		<definition>
			<!-- Window heading -->
			<control type="fadelabel">
				<include condition="$PARAM[narrow]">heading_coords1</include>
				<include condition="$PARAM[wide]">heading_coords2</include>
				<aligny>top</aligny>
				<label>$PARAM[heading]</label>
				<font>Font33</font>
				<include>WindowFadeAnimation</include>
				<animation effect="slide" time="0" end="0,33" condition="String.IsEmpty(Control.GetLabel(9999)) | ![$PARAM[secondary]]">Conditional</animation>
			</control>
			<control type="fadelabel" id="9999">
				<include condition="$PARAM[narrow]">heading_coords3</include>
				<include condition="$PARAM[wide]">heading_coords4</include>
				<aligny>top</aligny>
				<label>$VAR[HeadingLabelSecondary]</label>
				<font>Font33-light</font>
				<include>WindowFadeAnimation</include>
				<visible>$PARAM[secondary]</visible>
			</control>
			
			<!-- Scrolling label -->
			<control type="group">
				<visible>!Skin.HasSetting(ScrollingLabel)</visible>
				<visible>Container.Scrolling</visible>
				<visible>Control.IsEnabled(3) | Control.IsEnabled(4)</visible>
				<visible>!Container.Content(seasons)</visible>
				<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[563]) | String.IsEqual(Container.SortMethod,$LOCALIZE[566])</visible>
				<animation effect="slide" start="-75,0" end="0,0" time="200">VisibleChange</animation>
				<control type="image">
					<include>ScrollingLabel_coords1</include>
					<texture colordiffuse="$VAR[MenuOSDColor]">$VAR[MenuOSDBackground]</texture>
				</control>
				<control type="label">
					<include>ScrollingLabel_coords2</include>
					<label>$INFO[ListItem.SortLetter]</label>
					<font>Font72-bold</font>
					<align>center</align>
					<aligny>center</aligny>
				</control>
			</control>

			<!-- Time/Now playing -->
			<control type="group">
				<visible>!Window.IsVisible(notification) + !Window.IsVisible(extendedprogressdialog) + !Window.IsVisible(volumebar) + !String.IsEqual(Window(10000).Property(isCaching),True) + String.IsEmpty(Window(home).Property(service.upnext.dialog))</visible>
				<include condition="$PARAM[narrow]">timenowplaying_coords1</include>
				<include condition="$PARAM[wide]">timenowplaying_coords2</include>

				<animation type="WindowOpen" condition="Window.Previous(startup)">
					<effect type="fade" start="50" end="100" time="200" tween="cubic" easing="out"/>
				</animation>
				<animation type="Visible">
					<effect type="slide" start="120,0" end="0,0" time="200" />
					<effect type="fade" start="0" end="100" time="200" />
				</animation>
				<animation type="Hidden">
					<effect type="slide" end="120,0" time="200" />
					<effect type="fade" start="100" end="0" time="200" />
				</animation>

				<!-- Time -->
				<control type="label">
					<include>time_coords1</include>
					<aligny>top</aligny>
					<align>right</align>
					<label>$INFO[System.Date]</label>
					<font>Font33-light</font>
					<textcolor>$VAR[TextColorFO]</textcolor>
					<visible>Skin.HasSetting(Dateaboveclock) + !Player.HasMedia</visible>
				</control>
				<control type="label">
					<include>time_coords2</include>
					<aligny>top</aligny>
					<align>right</align>
					<label>$INFO[System.Time]</label>
					<font>Font33</font>
					<textcolor>$VAR[TextColorFO]</textcolor>
					<visible>!Player.HasMedia</visible>
				</control>

				<control type="group">
					<visible>Player.HasMedia</visible>
					
					<control type="group">
						<include condition="$PARAM[narrow]">nowplaying_coords1</include>
						<include condition="$PARAM[wide]">nowplaying_coords2</include>

						<!-- Now Playing - Video -->
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[VideoPlayer.TVShowTitle]$INFO[VideoPlayer.Year,[LIGHT] (,)[/LIGHT]]</label>
							<label>$VAR[SEplaying,, &#8226; ]$INFO[VideoPlayer.Title]</label>
							<label>$INFO[VideoPlayer.EpisodeName]</label>
							<visible>!Player.HasGame + Player.HasVideo + !VideoPlayer.Content(musicvideos) + !Pvr.IsPlayingTv + !String.IsEmpty(VideoPlayer.EpisodeName) + !String.IsEmpty(VideoPlayer.TVShowTitle)</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[VideoPlayer.TVShowTitle]</label>
							<label>$VAR[SEplaying,, &#8226; ]$INFO[VideoPlayer.Title]</label>
							<visible>!Player.HasGame + Player.HasVideo + !VideoPlayer.Content(musicvideos) + !Pvr.IsPlayingTv + String.IsEmpty(VideoPlayer.EpisodeName) + !String.IsEmpty(VideoPlayer.TVShowTitle)</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$VAR[SEplaying,, &#8226; ]$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year,[LIGHT] (,)[/LIGHT]]</label>
							<visible>!Player.HasGame + Player.HasVideo + !VideoPlayer.Content(musicvideos) + !Pvr.IsPlayingTv + String.IsEmpty(VideoPlayer.EpisodeName) + String.IsEmpty(VideoPlayer.TVShowTitle)</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$VAR[SEplaying,, &#8226; ]$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year,[LIGHT] (,)[/LIGHT]]</label>
							<label>$INFO[VideoPlayer.EpisodeName]</label>
							<visible>!Player.HasGame + Player.HasVideo + !VideoPlayer.Content(musicvideos) + !Pvr.IsPlayingTv + !String.IsEmpty(VideoPlayer.EpisodeName) + String.IsEmpty(VideoPlayer.TVShowTitle)</visible>
						</control>
						
						<!-- Now Playing - Live TV -->
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[VideoPlayer.ChannelName]$INFO[VideoPlayer.ChannelNumberLabel, (,)]</label>
							<label>$INFO[VideoPlayer.Title] [LIGHT]($INFO[VideoPlayer.StartTime] - $INFO[VideoPlayer.EndTime])[/LIGHT]</label>
							<visible>!Player.HasGame + Player.HasVideo + Pvr.IsPlayingTv + VideoPlayer.HasEpg</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[VideoPlayer.ChannelName]$INFO[VideoPlayer.ChannelNumberLabel, (,)]</label>
							<label>$INFO[VideoPlayer.Title]</label>
							<visible>!Player.HasGame + Player.HasVideo + Pvr.IsPlayingTv + !VideoPlayer.HasEpg + !String.IsEqual(MusicPlayer.ChannelName,MusicPlayer.Title)</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[VideoPlayer.ChannelName]$INFO[VideoPlayer.ChannelNumberLabel, (,)]</label>
							<visible>!Player.HasGame + Player.HasVideo + Pvr.IsPlayingTv + !VideoPlayer.HasEpg + String.IsEqual(MusicPlayer.ChannelName,MusicPlayer.Title)</visible>
						</control>
						
						<!-- Now Playing - Musicvideo -->
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[VideoPlayer.Title]</label>
							<label>$INFO[VideoPlayer.Artist,[LIGHT],:  [/LIGHT]]$INFO[VideoPlayer.Album]$INFO[VideoPlayer.Year,[LIGHT] (,)[/LIGHT]]</label>
							<visible>!Player.HasGame + Player.HasVideo + VideoPlayer.Content(musicvideos) + !String.IsEmpty(VideoPlayer.Artist) + !String.IsEmpty(VideoPlayer.Album)</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[VideoPlayer.Title]</label>
							<label>$INFO[VideoPlayer.Artist,[LIGHT],[/LIGHT]]</label>
							<visible>!Player.HasGame + Player.HasVideo + VideoPlayer.Content(musicvideos) + !String.IsEmpty(VideoPlayer.Artist) + String.IsEmpty(VideoPlayer.Album)</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[VideoPlayer.Title]</label>
							<label>$INFO[VideoPlayer.Album]$INFO[VideoPlayer.Year,[LIGHT] (,)[/LIGHT]]</label>
							<visible>!Player.HasGame + Player.HasVideo + VideoPlayer.Content(musicvideos) + String.IsEmpty(VideoPlayer.Artist) + !String.IsEmpty(VideoPlayer.Album)</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[VideoPlayer.Title]</label>
							<visible>!Player.HasGame + Player.HasVideo + VideoPlayer.Content(musicvideos) + String.IsEmpty(VideoPlayer.Artist) + String.IsEmpty(VideoPlayer.Album)</visible>
						</control>

						<!-- Now Playing - Audio -->
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[MusicPlayer.TrackNumber,[LIGHT],. [/LIGHT]]$INFO[MusicPlayer.Title]</label>
							<label>$INFO[MusicPlayer.Artist,[LIGHT],:  [/LIGHT]]$INFO[MusicPlayer.Album]$INFO[MusicPlayer.Year,[LIGHT] (,)[/LIGHT]]</label>
							<visible>!Player.HasGame + Player.HasAudio + !Pvr.IsPlayingRadio + !String.IsEmpty(MusicPlayer.Artist) + !String.IsEmpty(MusicPlayer.Album)</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[MusicPlayer.TrackNumber,[LIGHT],. [/LIGHT]]$INFO[MusicPlayer.Title]</label>
							<label>$INFO[MusicPlayer.Artist,[LIGHT],[/LIGHT]]</label>
							<visible>!Player.HasGame + Player.HasAudio + !Pvr.IsPlayingRadio + !String.IsEmpty(MusicPlayer.Artist) + String.IsEmpty(MusicPlayer.Album)</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[MusicPlayer.TrackNumber,[LIGHT],. [/LIGHT]]$INFO[MusicPlayer.Title]</label>
							<label>$INFO[MusicPlayer.Album]$INFO[MusicPlayer.Year,[LIGHT] (,)[/LIGHT]]</label>
							<visible>!Player.HasGame + Player.HasAudio + !Pvr.IsPlayingRadio + String.IsEmpty(MusicPlayer.Artist) + !String.IsEmpty(MusicPlayer.Album)</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[MusicPlayer.TrackNumber,[LIGHT],. [/LIGHT]]$INFO[MusicPlayer.Title]</label>
							<visible>!Player.HasGame + Player.HasAudio + !Pvr.IsPlayingRadio + String.IsEmpty(MusicPlayer.Artist) + String.IsEmpty(MusicPlayer.Album)</visible>
						</control>
						
						<!-- Now Playing - Radio -->
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[MusicPlayer.ChannelName]$INFO[MusicPlayer.ChannelNumberLabel, (,)]</label>
							<label>$INFO[MusicPlayer.Title] [LIGHT]($INFO[VideoPlayer.StartTime] - $INFO[VideoPlayer.EndTime])[/LIGHT]</label>
							<visible>!Player.HasGame + Player.HasAudio + Pvr.IsPlayingRadio + VideoPlayer.HasEpg</visible>
						</control>
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[MusicPlayer.ChannelName]$INFO[MusicPlayer.ChannelNumberLabel, (,)]</label>
							<label>$INFO[MusicPlayer.Title]</label>
							<visible>!Player.HasGame + Player.HasAudio + Pvr.IsPlayingRadio + !VideoPlayer.HasEpg + !String.IsEqual(MusicPlayer.ChannelName,MusicPlayer.Title)</visible>
						</control>
						
						
						<control type="fadelabel">
							<include>nowplaying_coords4</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[MusicPlayer.ChannelName]$INFO[MusicPlayer.ChannelNumberLabel, (,)]</label>
							<visible>!Player.HasGame + Player.HasAudio + Pvr.IsPlayingRadio + !VideoPlayer.HasEpg + String.IsEqual(MusicPlayer.ChannelName,MusicPlayer.Title)</visible>
						</control>
						
						<!-- Now Playing - Progress -->
						<control type="label">
							<include>nowplaying_coords5</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[Player.Time]$INFO[Player.Duration, / ,] ($INFO[System.Time,[LIGHT]$LOCALIZE[555]: ,[/LIGHT]]$INFO[Player.FinishTime,[LIGHT] / $LOCALIZE[19081]: [/LIGHT]])</label>
							<visible>!Player.HasGame + [!Pvr.IsPlayingTv + !Pvr.IsPlayingRadio | [Pvr.IsPlayingTv | Pvr.IsPlayingRadio] + !VideoPlayer.HasEpg] + Integer.IsGreater(Player.Duration,0)</visible>
						</control>
						
						<control type="label">
							<include>nowplaying_coords5</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[Player.Time] ($INFO[System.Time,[LIGHT]$LOCALIZE[555]: ,[/LIGHT]])</label>
							<visible>!Player.HasGame + [!Pvr.IsPlayingTv + !Pvr.IsPlayingRadio | [Pvr.IsPlayingTv | Pvr.IsPlayingRadio] + !VideoPlayer.HasEpg] + !Integer.IsGreater(Player.Duration,0)</visible>
						</control>
						
						<!-- Now Playing - Progress PVR -->
						<control type="label">
							<include>nowplaying_coords5</include>
							<aligny>top</aligny>
							<align>right</align>
							<label>$INFO[PVR.EpgEventElapsedTime]$INFO[PVR.EpgEventDuration, / ,] ($INFO[System.Time,[LIGHT]$LOCALIZE[555]: ,[/LIGHT]]$INFO[PVR.EpgEventFinishTime,[LIGHT] / $LOCALIZE[19081]: [/LIGHT]])</label>
							<visible>[Pvr.IsPlayingTv | Pvr.IsPlayingRadio] + VideoPlayer.HasEpg</visible>
						</control>
					
					</control>
					
					<!-- Player Icon -->
					<control type="image">
						<include>nowplaying_coords6</include>
						<aligny>top</aligny>
						<align>right</align>
						<texture background="true">$VAR[PlayerIcon]</texture>
						<aspectratio aligny="center">keep</aspectratio>
					</control>

					<!-- Play/Paused Image -->
					<control type="image">
						<include>nowplaying_coords7</include>
						<texture colordiffuse="$VAR[OverlayColorFO]">osd/OSDPlayNF.png</texture>
						<visible>!Player.Paused</visible>
					</control>
					<control type="image">
						<include>nowplaying_coords7</include>
						<texture colordiffuse="$VAR[OverlayColorFO]">osd/OSDPauseNF.png</texture>
						<visible>Player.Paused</visible>
					</control>

				</control>
			</control>
		</definition>
	</include>

</includes>