<?xml version="1.0" encoding="UTF-8"?>
<includes>
	
	<include name="MyPVRRecordings_coords1">
		<include condition="$EXP[NonMaskedCoordinates]">MyPVRRecordings_coords1_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">MyPVRRecordings_coords1_21:9</include>
		<include condition="$EXP[MaskedCoordinates]">MyPVRRecordings_coords1_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">MyPVRRecordings_coords1_4:3</include>
	</include>
	<include name="MyPVRRecordings_coords1_16:9">
		<left>120</left>
		<top>190</top>
		<width>452</width>
		<height>286</height>
	</include>
	<include name="MyPVRRecordings_coords1_21:9">
		<left>120</left>
		<top>190</top>
		<width>452</width>
		<height>286</height>
	</include>
	<include name="MyPVRRecordings_coords1_21:9_masked">
		<left>120</left>
		<top>370</top>
		<width>452</width>
		<height>286</height>
	</include>
	<include name="MyPVRRecordings_coords1_4:3">
		<left>120</left>
		<top>190</top>
		<width>452</width>
		<height>286</height>
	</include>
	
	<include name="MyPVRRecordings_coords2">
		<include condition="$EXP[NonMaskedCoordinates]">MyPVRRecordings_coords2_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">MyPVRRecordings_coords2_21:9</include>
		<include condition="$EXP[MaskedCoordinates]">MyPVRRecordings_coords2_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">MyPVRRecordings_coords2_4:3</include>
	</include>
	<include name="MyPVRRecordings_coords2_16:9">
		<left>120</left>
		<top>504</top>
		<width>450</width>
		<height>400</height>
	</include>
	<include name="MyPVRRecordings_coords2_21:9">
		<left>120</left>
		<top>504</top>
		<width>450</width>
		<height>400</height>
	</include>
	<include name="MyPVRRecordings_coords2_21:9_masked">
		<left>120</left>
		<top>684</top>
		<width>450</width>
		<height>400</height>
	</include>
	<include name="MyPVRRecordings_coords2_4:3">
		<left>120</left>
		<top>504</top>
		<width>450</width>
		<height>400</height>
	</include>
	
	<include name="MyPVRRecordings_coords3">
		<include condition="$EXP[NonMaskedCoordinates]">MyPVRRecordings_coords3_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">MyPVRRecordings_coords3_21:9</include>
		<include condition="$EXP[MaskedCoordinates]">MyPVRRecordings_coords3_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">MyPVRRecordings_coords3_4:3</include>
	</include>
	<include name="MyPVRRecordings_coords3_16:9">
		<height>377</height>
	</include>
	<include name="MyPVRRecordings_coords3_21:9">
		<height>377</height>
	</include>
	<include name="MyPVRRecordings_coords3_21:9_masked">
		<height>377</height>
	</include>
	<include name="MyPVRRecordings_coords3_4:3">
		<height>377</height>
	</include>
	
	<include name="MyPVRRecordings_coords4">
		<include condition="$EXP[NonMaskedCoordinates]">MyPVRRecordings_coords4_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">MyPVRRecordings_coords4_21:9</include>
		<include condition="$EXP[MaskedCoordinates]">MyPVRRecordings_coords4_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">MyPVRRecordings_coords4_4:3</include>
	</include>
	<include name="MyPVRRecordings_coords4_16:9">
		<height>385</height>
	</include>
	<include name="MyPVRRecordings_coords4_21:9">
		<height>385</height>
	</include>
	<include name="MyPVRRecordings_coords4_21:9_masked">
		<height>385</height>
	</include>
	<include name="MyPVRRecordings_coords4_4:3">
		<height>385</height>
	</include>
	
	<include name="MyPVRRecordings_coords5">
		<include condition="$EXP[NonMaskedCoordinates]">MyPVRRecordings_coords5_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">MyPVRRecordings_coords5_21:9</include>
		<include condition="$EXP[MaskedCoordinates]">MyPVRRecordings_coords5_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">MyPVRRecordings_coords5_4:3</include>
	</include>
	<include name="MyPVRRecordings_coords5_16:9">
		<height>398</height>
	</include>
	<include name="MyPVRRecordings_coords5_21:9">
		<height>398</height>
	</include>
	<include name="MyPVRRecordings_coords5_21:9_masked">
		<height>398</height>
	</include>
	<include name="MyPVRRecordings_coords5_4:3">
		<height>398</height>
	</include>
	
	<include name="MyPVRRecordings_coords6">
		<include condition="$EXP[NonMaskedCoordinates]">MyPVRRecordings_coords6_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">MyPVRRecordings_coords6_21:9</include>
		<include condition="$EXP[MaskedCoordinates]">MyPVRRecordings_coords6_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">MyPVRRecordings_coords6_4:3</include>
	</include>
	<include name="MyPVRRecordings_coords6_16:9">
		<left>750</left>
		<centertop>50%</centertop>
		<width>1050</width>
		<height>720</height>
	</include>
	<include name="MyPVRRecordings_coords6_21:9">
		<left>750</left>
		<centertop>50%</centertop>
		<width>1690</width>
		<height>720</height>
	</include>
	<include name="MyPVRRecordings_coords6_21:9_masked">
		<left>750</left>
		<centertop>50%</centertop>
		<width>1690</width>
		<height>720</height>
	</include>
	<include name="MyPVRRecordings_coords6_4:3">
		<left>750</left>
		<centertop>50%</centertop>
		<width>1050</width>
		<height>720</height>
	</include>
	
	<include name="MyPVRRecordings_coords7">
		<include condition="$EXP[NonMaskedCoordinates]">MyPVRRecordings_coords7_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">MyPVRRecordings_coords7_21:9</include>
		<include condition="$EXP[MaskedCoordinates]">MyPVRRecordings_coords7_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">MyPVRRecordings_coords7_4:3</include>
	</include>
	<include name="MyPVRRecordings_coords7_16:9">
		<itemlayout height="90" width="1050">
			<control type="label">
				<left>32</left>
				<top>0</top>
				<width>1018</width>
				<height>90</height>
				<font>Font36-light</font>
				<label>$VAR[Label1]</label>
				<textcolor>$VAR[TextColorNF]</textcolor>
			</control>
			<!-- Recording image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Recording.png</texture>
				<visible>ListItem.IsRecording</visible>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Timer image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Timer.png</texture>
				<visible>[ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule</visible>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Reminder image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Reminder.png</texture>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<visible>[ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording</visible>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Watched status -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>$VAR[StatusOverlay]</texture>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,15" time="0" reversible="false" condition="ListItem.IsRecording | [ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule | [ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording">Conditional</animation>
			</control>
		</itemlayout>
	</include>
	<include name="MyPVRRecordings_coords7_21:9">
		<itemlayout height="90" width="1690">
			<control type="label">
				<left>32</left>
				<top>0</top>
				<width>1658</width>
				<height>90</height>
				<font>Font36-light</font>
				<label>$VAR[Label1]</label>
				<textcolor>$VAR[TextColorNF]</textcolor>
			</control>
			<!-- Recording image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Recording.png</texture>
				<visible>ListItem.IsRecording</visible>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Timer image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Timer.png</texture>
				<visible>[ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule</visible>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Reminder image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Reminder.png</texture>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<visible>[ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording</visible>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Watched status -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>$VAR[StatusOverlay]</texture>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,15" time="0" reversible="false" condition="ListItem.IsRecording | [ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule | [ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording">Conditional</animation>
			</control>
		</itemlayout>
	</include>
	<include name="MyPVRRecordings_coords7_21:9_masked">
		<itemlayout height="90" width="1690">
			<control type="label">
				<left>32</left>
				<top>0</top>
				<width>1658</width>
				<height>90</height>
				<font>Font36-light</font>
				<label>$VAR[Label1]</label>
				<textcolor>$VAR[TextColorNF]</textcolor>
			</control>
			<!-- Recording image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Recording.png</texture>
				<visible>ListItem.IsRecording</visible>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Timer image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Timer.png</texture>
				<visible>[ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule</visible>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Reminder image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Reminder.png</texture>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<visible>[ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording</visible>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Watched status -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>$VAR[StatusOverlay]</texture>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,15" time="0" reversible="false" condition="ListItem.IsRecording | [ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule | [ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording">Conditional</animation>
			</control>
		</itemlayout>
	</include>
	<include name="MyPVRRecordings_coords7_4:3">
		<itemlayout height="90" width="570">
			<control type="label">
				<left>32</left>
				<top>0</top>
				<width>538</width>
				<height>90</height>
				<font>Font36-light</font>
				<label>$VAR[Label1]</label>
				<textcolor>$VAR[TextColorNF]</textcolor>
			</control>
			<!-- Recording image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Recording.png</texture>
				<visible>ListItem.IsRecording</visible>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Timer image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Timer.png</texture>
				<visible>[ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule</visible>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Reminder image -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>pvr/Reminder.png</texture>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<visible>[ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording</visible>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
			</control>
			<!-- Watched status -->
			<control type="image">
				<left>0</left>
				<top>30</top>
				<width>30</width>
				<height>30</height>
				<texture>$VAR[StatusOverlay]</texture>
				<colordiffuse>$VAR[TextColorNF]</colordiffuse>
				<include>NonFocusImageFadeAnimation</include>
				<animation effect="slide" end="0,15" time="0" reversible="false" condition="ListItem.IsRecording | [ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule | [ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording">Conditional</animation>
			</control>
		</itemlayout>
	</include>
	
	<include name="MyPVRRecordings_coords8">
		<include condition="$EXP[NonMaskedCoordinates]">MyPVRRecordings_coords8_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">MyPVRRecordings_coords8_21:9</include>
		<include condition="$EXP[MaskedCoordinates]">MyPVRRecordings_coords8_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">MyPVRRecordings_coords8_4:3</include>
	</include>
	<include name="MyPVRRecordings_coords8_16:9">
		<focusedlayout height="180" width="1050">
			<control type="group">
				<include content="NonFocusWindowFadeAnimation">
					<param name="id">50</param>
				</include>
				<control type="label">
					<left>32</left>
					<top>43</top>
					<width>1018</width>
					<height>48</height>
					<font>Font48-bold</font>
					<scroll>True</scroll>
					<label>$VAR[Label1]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<control type="image">
					<left>32</left>
					<top>43</top>
					<width>1018</width>
					<height>58</height>
					<texture colordiffuse="$VAR[TextColorFO]">$VAR[focus58]</texture>
					<visible>!ListItem.IsParentFolder</visible>
				</control>
				<control type="label">
					<left>32</left>
					<top>100</top>
					<width>1018</width>
					<height>27</height>
					<font>Font27</font>
					<scroll>True</scroll>
					<label>$INFO[ListItem.ChannelName]$INFO[ListItem.ChannelNumberLabel, (,)]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<control type="label">
					<left>32</left>
					<top>127</top>
					<width>1018</width>
					<height>27</height>
					<font>Font27-light</font>
					<scroll>True</scroll>
					<label>$INFO[ListItem.StartDate] [LIGHT]$INFO[ListItem.StartTime]$INFO[ListItem.Duration, (,)][/LIGHT]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<!-- Recording image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Recording.png</texture>
					<visible>ListItem.IsRecording</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Timer image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Timer.png</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<visible>[ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Reminder image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Reminder.png</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<visible>[ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Watched status -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>$VAR[StatusOverlay]</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<animation effect="slide" end="0,15" time="0" reversible="false" condition="ListItem.IsRecording | [ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule | [ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording">Conditional</animation>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="MyPVRRecordings_coords8_21:9_masked">
		<focusedlayout height="180" width="1690">
			<control type="group">
				<include content="NonFocusWindowFadeAnimation">
					<param name="id">50</param>
				</include>
				<control type="label">
					<left>32</left>
					<top>43</top>
					<width>1658</width>
					<height>48</height>
					<font>Font48-bold</font>
					<scroll>True</scroll>
					<label>$VAR[Label1]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<control type="image">
					<left>32</left>
					<top>43</top>
					<width>1658</width>
					<height>58</height>
					<texture colordiffuse="$VAR[TextColorFO]">$VAR[focus58]</texture>
					<visible>!ListItem.IsParentFolder</visible>
				</control>
				<control type="label">
					<left>32</left>
					<top>100</top>
					<width>1658</width>
					<height>27</height>
					<font>Font27</font>
					<scroll>True</scroll>
					<label>$INFO[ListItem.ChannelName]$INFO[ListItem.ChannelNumberLabel, (,)]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<control type="label">
					<left>32</left>
					<top>127</top>
					<width>1658</width>
					<height>27</height>
					<font>Font27-light</font>
					<scroll>True</scroll>
					<label>$INFO[ListItem.StartDate] [LIGHT]$INFO[ListItem.StartTime]$INFO[ListItem.Duration, (,)][/LIGHT]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<!-- Recording image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Recording.png</texture>
					<visible>ListItem.IsRecording</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Timer image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Timer.png</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<visible>[ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Reminder image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Reminder.png</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<visible>[ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Watched status -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>$VAR[StatusOverlay]</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<animation effect="slide" end="0,15" time="0" reversible="false" condition="ListItem.IsRecording | [ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule | [ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording">Conditional</animation>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="MyPVRRecordings_coords8_21:9">
		<focusedlayout height="180" width="1690">
			<control type="group">
				<include content="NonFocusWindowFadeAnimation">
					<param name="id">50</param>
				</include>
				<control type="label">
					<left>32</left>
					<top>43</top>
					<width>1658</width>
					<height>48</height>
					<font>Font48-bold</font>
					<scroll>True</scroll>
					<label>$VAR[Label1]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<control type="image">
					<left>32</left>
					<top>43</top>
					<width>1658</width>
					<height>58</height>
					<texture colordiffuse="$VAR[TextColorFO]">$VAR[focus58]</texture>
					<visible>!ListItem.IsParentFolder</visible>
				</control>
				<control type="label">
					<left>32</left>
					<top>100</top>
					<width>1658</width>
					<height>27</height>
					<font>Font27</font>
					<scroll>True</scroll>
					<label>$INFO[ListItem.ChannelName]$INFO[ListItem.ChannelNumberLabel, (,)]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<control type="label">
					<left>32</left>
					<top>127</top>
					<width>1658</width>
					<height>27</height>
					<font>Font27-light</font>
					<scroll>True</scroll>
					<label>$INFO[ListItem.StartDate] [LIGHT]$INFO[ListItem.StartTime]$INFO[ListItem.Duration, (,)][/LIGHT]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<!-- Recording image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Recording.png</texture>
					<visible>ListItem.IsRecording</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Timer image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Timer.png</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<visible>[ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Reminder image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Reminder.png</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<visible>[ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Watched status -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>$VAR[StatusOverlay]</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<animation effect="slide" end="0,15" time="0" reversible="false" condition="ListItem.IsRecording | [ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule | [ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording">Conditional</animation>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="MyPVRRecordings_coords8_4:3">
		<focusedlayout height="180" width="570">
			<control type="group">
				<include content="NonFocusWindowFadeAnimation">
					<param name="id">50</param>
				</include>
				<control type="label">
					<left>32</left>
					<top>43</top>
					<width>538</width>
					<height>48</height>
					<font>Font48-bold</font>
					<scroll>True</scroll>
					<label>$VAR[Label1]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<control type="image">
					<left>32</left>
					<top>43</top>
					<width>538</width>
					<height>58</height>
					<texture colordiffuse="$VAR[TextColorFO]">$VAR[focus58]</texture>
					<visible>!ListItem.IsParentFolder</visible>
				</control>
				<control type="label">
					<left>32</left>
					<top>100</top>
					<width>538</width>
					<height>27</height>
					<font>Font27</font>
					<scroll>True</scroll>
					<label>$INFO[ListItem.ChannelName]$INFO[ListItem.ChannelNumberLabel, (,)]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<control type="label">
					<left>32</left>
					<top>127</top>
					<width>538</width>
					<height>27</height>
					<font>Font27-light</font>
					<scroll>True</scroll>
					<label>$INFO[ListItem.StartDate] [LIGHT]$INFO[ListItem.StartTime]$INFO[ListItem.Duration, (,)][/LIGHT]</label>
					<textcolor>$VAR[TextColorFO]</textcolor>
				</control>
				<!-- Recording image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Recording.png</texture>
					<visible>ListItem.IsRecording</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Timer image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Timer.png</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<visible>[ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Reminder image -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>pvr/Reminder.png</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<visible>[ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording</visible>
					<animation effect="slide" end="0,-15" time="0" reversible="false" condition="String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)">Conditional</animation>
				</control>
				<!-- Watched status -->
				<control type="image">
					<left>0</left>
					<top>75</top>
					<width>30</width>
					<height>30</height>
					<texture>$VAR[StatusOverlay]</texture>
					<colordiffuse>$VAR[TextColorFO]</colordiffuse>
					<animation effect="slide" end="0,15" time="0" reversible="false" condition="ListItem.IsRecording | [ListItem.HasTimer | ListItem.HasTimerSchedule] + !ListItem.IsRecording + !ListItem.HasReminder + !ListItem.HasReminderRule | [ListItem.HasReminder | ListItem.HasReminderRule] + !ListItem.IsRecording">Conditional</animation>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="MyPVRRecordings_coords9">
		<include condition="$EXP[NonMaskedCoordinates]">MyPVRRecordings_coords9_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">MyPVRRecordings_coords9_21:9</include>
		<include condition="$EXP[MaskedCoordinates]">MyPVRRecordings_coords9_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">MyPVRRecordings_coords9_4:3</include>
	</include>
	<include name="MyPVRRecordings_coords9_16:9">
		<left>690</left>
		<centertop>50%</centertop>
		<width>20</width>
		<height>680</height>
	</include>
	<include name="MyPVRRecordings_coords9_21:9_masked">
		<left>690</left>
		<centertop>50%</centertop>
		<width>20</width>
		<height>680</height>
	</include>
	<include name="MyPVRRecordings_coords9_21:9">
		<left>690</left>
		<centertop>50%</centertop>
		<width>20</width>
		<height>680</height>
	</include>
	<include name="MyPVRRecordings_coords9_4:3">
		<left>690</left>
		<centertop>50%</centertop>
		<width>20</width>
		<height>680</height>
	</include>

</includes>