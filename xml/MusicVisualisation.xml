<?xml version="1.0" encoding="UTF-8"?>
<window>
	<!-- visualisation -->
	<defaultcontrol></defaultcontrol>
	<onload condition="System.HasAddon(script.artistslideshow)">RunScript(script.artistslideshow)</onload>

	<controls>

		<!-- Background -->
		<include>WindowBackgroundImage</include>

		<!-- Now Playing Information -->
		<control type="group">
			<animation effect="fade" start="100" end="0" time="200" condition="Window.IsTopMost(DialogSelect.xml)">Conditional</animation>
			<visible>[Player.ShowInfo + !Skin.HasSetting(MusicOSD) | Skin.HasSetting(MusicOSD)] + !Window.IsVisible(DialogSettings.xml) + !Window.IsVisible(PVRChannelGuide) + !Window.IsVisible(pvrosdchannels) + !Window.IsVisible(DialogSelect.xml) + !Window.IsVisible(DialogPVRInfo.xml) + !Window.IsVisible(playerprocessinfo)</visible>
			<include>VisibleFadeAnimation</include>
			<include>WindowFadeAnimation</include>

			<!-- Music Cover -->
			<control type="image">
				<include>MusicVisualisation_coords1</include>
				<fadetime>200</fadetime>
				<texture background="true">$INFO[MusicPlayer.Cover]</texture>
				<aspectratio aligny="center">keep</aspectratio>
				<visible>!Skin.HasSetting(MusicOSDSize)</visible>
			</control>
			
			<control type="image">
				<include>MusicVisualisation_coords2</include>
				<fadetime>200</fadetime>
				<texture background="true">$INFO[MusicPlayer.Cover]</texture>
				<aspectratio aligny="center">keep</aspectratio>
				<visible>Skin.HasSetting(MusicOSDSize)</visible>
			</control>

			<!-- Now playing -->
			<control type="grouplist">
				<include>WindowFadeAnimation</include>
				<include>MusicVisualisation_coords3</include>
				
				<!-- Artist -->
				<control type="fadelabel">
					<include>MusicVisualisation_coords4</include>
					<label>$INFO[MusicPlayer.Artist]</label>
					<visible>!Pvr.IsPlayingRadio + !String.IsEmpty(MusicPlayer.Artist)</visible>
				</control>
				
				<!-- Album + Year -->
				<control type="fadelabel">
					<include>MusicVisualisation_coords4</include>
					<label>$INFO[MusicPlayer.Album]$INFO[MusicPlayer.Year,[LIGHT] (,)[/LIGHT]]</label>
					<visible>!Pvr.IsPlayingRadio + !String.IsEmpty(MusicPlayer.Album)</visible>
				</control>
				
				<!-- Track/Title -->
				<control type="fadelabel">
					<include>MusicVisualisation_coords4</include>
					<label>$INFO[MusicPlayer.TrackNumber,[LIGHT],.[/LIGHT] ]$INFO[MusicPlayer.Title]</label>
					<visible>!Pvr.IsPlayingRadio</visible>
				</control>
				
				<!-- Radio channel -->
				<control type="fadelabel">
					<include>MusicVisualisation_coords4</include>
					<label>$INFO[VideoPlayer.ChannelName]$INFO[VideoPlayer.ChannelNumberLabel, [LIGHT](,)[/LIGHT]]</label>
					<visible>Pvr.IsPlayingRadio</visible>
				</control>
				
				<!-- Radio show title -->
				<control type="fadelabel">
					<include>MusicVisualisation_coords4</include>
					<font>Font33-bold</font>
					<label>$INFO[MusicPlayer.Title] [LIGHT]($INFO[VideoPlayer.StartTime] - $INFO[VideoPlayer.EndTime])[/LIGHT]</label>
					<visible>Pvr.IsPlayingRadio + VideoPlayer.HasEpg</visible>
				</control>
				
				<control type="fadelabel">
					<include>MusicVisualisation_coords4</include>
					<font>Font33-bold</font>
					<label>$INFO[MusicPlayer.Title]</label>
					<visible>Pvr.IsPlayingRadio + !VideoPlayer.HasEpg + !String.IsEqual(MusicPlayer.ChannelName,MusicPlayer.Title)</visible>
				</control>
				
				<!-- Radio show information -->
				<control type="fadelabel">
					<include>MusicVisualisation_coords4</include>
					<label>$INFO[VideoPlayer.EpisodeName]</label>
					<visible>Pvr.IsPlayingRadio + VideoPlayer.HasEpg + !String.IsEmpty(VideoPlayer.EpisodeName)</visible>
				</control>
				
				<!-- Radio genre -->
				<control type="fadelabel">
					<include>MusicVisualisation_coords4</include>
					<label>$INFO[MusicPlayer.Genre]</label>
					<visible>Pvr.IsPlayingRadio + VideoPlayer.HasEpg + !String.IsEmpty(MusicPlayer.Genre)</visible>
				</control>
				
				<!-- File information -->
				<control type="label">
					<include>MusicVisualisation_coords4</include>
					<label>$VAR[MusicPlayerCodec,[LIGHT],[/LIGHT]  ]$INFO[MusicPlayer.BitRate,[LIGHT](, kBit/s)[/LIGHT]  ]$VAR[MusicPlayerChannels,[LIGHT],[/LIGHT]  ]$INFO[MusicPlayer.SampleRate,[LIGHT], kHz[/LIGHT]]</label>
					<visible>!String.StartsWith(MusicPlayer.Codec,dsd)</visible>
				</control>
				<control type="label">
					<include>MusicVisualisation_coords4</include>
					<label>$VAR[MusicPlayerCodec,[LIGHT],[/LIGHT]  ]$VAR[MusicPlayerChannels,[LIGHT],[/LIGHT]  ]</label>
					<visible>String.StartsWith(MusicPlayer.Codec,dsd)</visible>
				</control>
			</control>

			<!-- Next playing -->
			<control type="grouplist">
				<visible>!String.IsEmpty(MusicPlayer.Offset(1).Title) | Pvr.IsPlayingRadio + VideoPlayer.HasEpg</visible>
				<include>VisibleFadeAnimation</include>
				<include>WindowFadeAnimation</include>
				<include>MusicVisualisation_coords5</include>
				<control type="label">
					<include>MusicVisualisation_coords4</include>
					<font>Font27-light</font>
					<label>$LOCALIZE[209]:</label>
				</control>
				<control type="fadelabel">
					<include>MusicVisualisation_coords4</include>
					<font>Font27</font>
					<label>$VAR[MusicNextPlaying1,,]</label>
				</control>
				<control type="fadelabel">
					<include>MusicVisualisation_coords4</include>
					<font>Font27</font>
					<label>$VAR[MusicNextPlaying2,,]</label>
				</control>
				<control type="fadelabel">
					<include>MusicVisualisation_coords4</include>
					<font>Font27</font>
					<label>$VAR[MusicNextPlaying3,,]</label>
				</control>
			</control>
		</control>

		<control type="group">
			<include>DialogDepth</include>
			<include>MusicVisualisation_coords6</include>
			<visible>[Window.IsActive(seekbar) | Window.IsActive(musicosd) | [Player.ShowInfo + !Skin.HasSetting(MusicOSD) | Skin.HasSetting(MusicOSD)]] + !Window.IsVisible(DialogSettings.xml) + !Window.IsVisible(PVRChannelGuide) + !Window.IsVisible(pvrosdchannels) + !Window.IsVisible(DialogSelect.xml) + !Window.IsVisible(DialogPVRInfo.xml) + !Window.IsVisible(playerprocessinfo) + !Window.IsVisible(shutdownmenu)</visible>
			<animation effect="fade" start="100" end="0" time="200" condition="Window.IsTopMost(DialogSelect.xml)">Conditional</animation>
			<animation effect="slide" end="0,-75" time="200" condition="Window.IsActive(musicosd)">Conditional</animation>
			<include>OSDOpenCloseAnimation</include>
			<include>OSDVisibleHiddenAnimation</include>
			

			<!-- Player forwarding/rewinding -->
			<control type="group">
				<include>MusicVisualisation_coords7</include>
				<visible>[player.forwarding | player.rewinding | player.istempo | Player.DisplayAfterSeek | player.paused] + !Player.Seeking</visible>
				<include>OSDVisibleHiddenAnimation</include>

				<!-- Background -->
				<control type="image">
					<include>MusicVisualisation_coords7</include>
					<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
				</control>

				<!-- Status -->
				<control type="label">
					<include>MusicVisualisation_coords7</include>
					<font>Font36-bold</font>
					<align>center</align>
					<label>$VAR[PlayerStatus]</label>
					<textcolor>$VAR[TextColor2]</textcolor>
					<visible>player.forwarding | player.rewinding | player.istempo</visible>
					<include>VisibleFadeAnimation</include>
				</control>

				<!-- Pause -->
				<control type="image">
					<include>MusicVisualisation_coords8</include>
					<texture>osd/OSDPauseNF.png</texture>
					<visible>player.paused</visible>
					<include>VisibleFadeAnimation</include>
				</control>
				
				<!-- Play after seek -->
				<control type="image">
					<include>MusicVisualisation_coords8</include>
					<texture colordiffuse="$VAR[DialogColor1]">osd/OSDPlayNF.png</texture>
					<visible>Player.DisplayAfterSeek + ![Player.Paused | player.forwarding | player.rewinding | player.istempo]</visible>
					<include>VisibleFadeAnimation</include>
				</control>

			</control>

			<!-- Player skipping -->
			<control type="group">
				<include>MusicVisualisation_coords9</include>
				<visible>Integer.IsGreater(MusicPlayer.PlaylistLength,0)</visible>
				<include>OSDVisibleHiddenAnimation</include>

				<!-- Background -->
				<control type="image">
					<include>MusicVisualisation_coords7</include>
					<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
				</control>

				<!-- Status -->
				<control type="label">
					<include>MusicVisualisation_coords7</include>
					<font>Font27-bold</font>
					<align>center</align>
					<label>$INFO[Player.Chapter,(,/]$INFO[Player.ChapterCount,,)]$INFO[MusicPlayer.PlaylistPosition,(,/]$INFO[MusicPlayer.PlaylistLength,,)]</label>
					<textcolor>$VAR[TextColor2]</textcolor>
					<visible>!Window.IsVisible(visualisation) + String.IsEmpty(Player.SeekStepSize)</visible>
				</control>
				
				<!-- Status -->
				<control type="label">
					<include>MusicVisualisation_coords7</include>
					<font>Font27-bold</font>
					<align>center</align>
					<label>$INFO[MusicPlayer.PlaylistPosition,(,/]$INFO[MusicPlayer.PlaylistLength,,)]</label>
					<textcolor>$VAR[TextColor2]</textcolor>
					<visible>Window.IsVisible(visualisation) + String.IsEmpty(Player.SeekStepSize)</visible>
				</control>
				
				<!-- Status -->
				<control type="label">
					<include>MusicVisualisation_coords7</include>
					<font>Font27</font>
					<align>center</align>
					<visible>!String.IsEmpty(Player.SeekStepSize)</visible>
					<label>$INFO[Player.SeekStepSize]</label>
					<textcolor>$VAR[TextColor2]</textcolor>
				</control>

			</control>

			<!-- Progress -->
			<control type="group">
				<include>MusicVisualisation_coords10</include>

				<!-- Background -->
				<control type="image">
					<include>MusicVisualisation_coords11</include>
					<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
					<visible>Pvr.IsPlayingRadio + VideoPlayer.HasEpg | !Pvr.IsPlayingRadio + Integer.IsGreater(Player.Duration,0)</visible>
					<include>VisibleFadeAnimation</include>
				</control>
				<control type="image">
					<include>MusicVisualisation_coords12</include>
					<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
					<visible>!Pvr.IsPlayingRadio + !Integer.IsGreater(Player.Duration,0) | !VideoPlayer.HasEpg + Pvr.IsPlayingRadio</visible>
					<include>VisibleFadeAnimation</include>
				</control>
				<control type="image">
					<include>MusicVisualisation_coords13</include>
					<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
					<visible>!Pvr.IsPlayingRadio + !Integer.IsGreater(Player.Duration,0) | !VideoPlayer.HasEpg + Pvr.IsPlayingRadio</visible>
					<include>VisibleFadeAnimation</include>
				</control>

				<!--  Current position/Time remaining -->
				<control type="label">
					<include>MusicVisualisation_coords14</include>
					<font>Font27</font>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
					<visible>!Pvr.IsPlayingRadio + Integer.IsGreater(Player.Duration,0)</visible>
					<include>VisibleFadeAnimation</include>
				</control>
				<control type="label">
					<include>MusicVisualisation_coords15</include>
					<font>Font27</font>
					<align>center</align>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[Player.Time]</label>
					<visible>!Pvr.IsPlayingRadio + !Integer.IsGreater(Player.Duration,0) | !VideoPlayer.HasEpg + Pvr.IsPlayingRadio</visible>
					<include>VisibleFadeAnimation</include>
				</control>
				
				<!--  PVR current position/Time remaining -->
				<control type="label">
					<include>MusicVisualisation_coords14</include>
					<font>Font27</font>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[PVR.EpgEventElapsedTime]$INFO[PVR.EpgEventDuration, / ,]</label>
					<visible>Pvr.IsPlayingRadio + VideoPlayer.HasEpg</visible>
					<include>VisibleFadeAnimation</include>
				</control>

				<!--  Progress bar -->
				<control type="progress">
					<include>MusicVisualisation_coords16</include>
					<info>Player.Progress</info>
					<texturebg border="2">osd/OSDProgressBack.png</texturebg>
					<lefttexture></lefttexture>
					<midtexture border="2">osd/OSDProgressBar.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture></overlaytexture>
					<visible>!Pvr.IsPlayingRadio + Integer.IsGreater(Player.Duration,0)</visible>
					<include>VisibleFadeAnimation</include>
				</control>
				
				<!--  PVR progress bar -->
				<control type="progress">
					<include>MusicVisualisation_coords16</include>
					<info>PVR.EpgEventProgress</info>
					<texturebg border="2" colordiffuse="$VAR[DialogColor2]">osd/OSDProgressBack.png</texturebg>
					<lefttexture></lefttexture>
					<midtexture border="2" colordiffuse="$VAR[DialogColor1]">osd/OSDProgressBar.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture></overlaytexture>
					<visible>Pvr.IsPlayingRadio + VideoPlayer.HasEpg</visible>
					<include>VisibleFadeAnimation</include>
				</control>

				<!--  Cache bar -->
				<control type="progress">
					<include>MusicVisualisation_coords16</include>
					<info>Player.ProgressCache</info>
					<texturebg colordiffuse="$VAR[DialogColor2]" border="2">osd/OSDProgressBack.png</texturebg>
					<lefttexture></lefttexture>
					<midtexture colordiffuse="OSDCache" border="2">osd/OSDProgressBar.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture></overlaytexture>
					<visible>Pvr.IsPlayingRadio + VideoPlayer.HasEpg | !Pvr.IsPlayingRadio + Integer.IsGreater(Player.Duration,0)</visible>
					<include>VisibleFadeAnimation</include>
				</control>

				<!-- Current Time/End Time -->
				<control type="label">
					<include>MusicVisualisation_coords17</include>
					<align>right</align>
					<font>Font27</font>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[System.Time,$LOCALIZE[142] ,]$INFO[Player.FinishTime, / $LOCALIZE[19081] ,]</label>
					<visible>!Pvr.IsPlayingRadio + Integer.IsGreater(Player.Duration,0)</visible>
					<include>VisibleFadeAnimation</include>
				</control>
				<control type="label">
					<include>MusicVisualisation_coords18</include>
					<align>center</align>
					<font>Font27</font>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[System.Time,$LOCALIZE[142] ,]</label>
					<visible>!Pvr.IsPlayingRadio + !Integer.IsGreater(Player.Duration,0) | !VideoPlayer.HasEpg + Pvr.IsPlayingRadio</visible>
					<include>VisibleFadeAnimation</include>
				</control>
				
				<!-- PVR current Time/End Time -->
				<control type="label">
					<include>MusicVisualisation_coords17</include>
					<align>right</align>
					<font>Font27</font>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[System.Time,$LOCALIZE[142] ,]$INFO[PVR.EpgEventFinishTime, / $LOCALIZE[19081] ,]</label>
					<visible>Pvr.IsPlayingRadio + VideoPlayer.HasEpg</visible>
					<include>VisibleFadeAnimation</include>
				</control>

			</control>

		</control>

		<include>MaskingBars</include>

	</controls>

</window>