<?xml version="1.0" encoding="UTF-8"?>
<includes>
	
	<include name="Viewtype539_coords1">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype539_coords1_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype539_coords1_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype539_coords1_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype539_coords1_4:3</include>
	</include>
	<include name="Viewtype539_coords1_16:9">
		<left>150</left>
		<top>421</top>
		<width>1620</width>
		<height>399</height>
	</include>
	<include name="Viewtype539_coords1_21:9">
		<left>150</left>
		<top>421</top>
		<width>2260</width>
		<height>399</height>
	</include>
	<include name="Viewtype539_coords1_21:9_masked">
		<left>150</left>
		<top>601</top>
		<width>2260</width>
		<height>399</height>
	</include>
	<include name="Viewtype539_coords1_4:3">
		<left>150</left>
		<top>421</top>
		<width>1140</width>
		<height>399</height>
	</include>
	
	<include name="Viewtype539_coords2">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype539_coords2_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype539_coords2_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype539_coords2_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype539_coords2_4:3</include>
	</include>
	<include name="Viewtype539_coords2_16:9">
		<itemlayout width="133" height="133">
			<!-- Image - Videos -->
			<include content="image-539">
				<param name="fallback">DefaultVideoDefaultVideo.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(videos)</param>
			</include>
			<!-- Collection -->
			<control type="group">
				<left>21</left>
				<bottom>7</bottom>
				<width>120</width>
				<height>13</height>
				<visible>ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
				<control type="image">
					<width>13</width>
					<centerleft>60</centerleft>
					<texture background="true">views/OverlayCollectionWide.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
			<!-- Watched status -->
			<control type="group">
				<left>21</left>
				<bottom>7</bottom>
				<width>120</width>
				<height>13</height>
				<visible>!ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
					<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
				</control>
				<control type="image">
					<width>13</width>
					<centerleft>60</centerleft>
					<texture background="true">$VAR[StatusOverlayWide]</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
		</itemlayout>
	</include>
	<include name="Viewtype539_coords2_21:9">
		<itemlayout width="133" height="133">
			<!-- Image - Videos -->
			<include content="image-539">
				<param name="fallback">DefaultVideoDefaultVideo.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(videos)</param>
			</include>
			<!-- Collection -->
			<control type="group">
				<left>21</left>
				<bottom>7</bottom>
				<width>120</width>
				<height>13</height>
				<visible>ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
				<control type="image">
					<width>13</width>
					<centerleft>60</centerleft>
					<texture background="true">views/OverlayCollectionWide.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
			<!-- Watched status -->
			<control type="group">
				<left>21</left>
				<bottom>7</bottom>
				<width>120</width>
				<height>13</height>
				<visible>!ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
					<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
				</control>
				<control type="image">
					<width>13</width>
					<centerleft>60</centerleft>
					<texture background="true">$VAR[StatusOverlayWide]</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
		</itemlayout>
	</include>
	<include name="Viewtype539_coords2_21:9_masked">
		<itemlayout width="133" height="133">
			<!-- Image - Videos -->
			<include content="image-539">
				<param name="fallback">DefaultVideoDefaultVideo.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(videos)</param>
			</include>
			<!-- Collection -->
			<control type="group">
				<left>21</left>
				<bottom>7</bottom>
				<width>120</width>
				<height>13</height>
				<visible>ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
				<control type="image">
					<width>13</width>
					<centerleft>60</centerleft>
					<texture background="true">views/OverlayCollectionWide.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
			<!-- Watched status -->
			<control type="group">
				<left>21</left>
				<bottom>7</bottom>
				<width>120</width>
				<height>13</height>
				<visible>!ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
					<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
				</control>
				<control type="image">
					<width>13</width>
					<centerleft>60</centerleft>
					<texture background="true">$VAR[StatusOverlayWide]</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
		</itemlayout>
	</include>
	<include name="Viewtype539_coords2_4:3">
		<itemlayout width="133" height="133">
			<!-- Image - Videos -->
			<include content="image-539">
				<param name="fallback">DefaultVideoDefaultVideo.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(videos)</param>
			</include>
			<!-- Collection -->
			<control type="group">
				<left>21</left>
				<bottom>7</bottom>
				<width>120</width>
				<height>13</height>
				<visible>ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
				<control type="image">
					<width>13</width>
					<centerleft>60</centerleft>
					<texture background="true">views/OverlayCollectionWide.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
			<!-- Watched status -->
			<control type="group">
				<left>21</left>
				<bottom>7</bottom>
				<width>120</width>
				<height>13</height>
				<visible>!ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
					<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
				</control>
				<control type="image">
					<width>13</width>
					<centerleft>60</centerleft>
					<texture background="true">$VAR[StatusOverlayWide]</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
		</itemlayout>
	</include>
	
	<include name="Viewtype539_coords3">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype539_coords3_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype539_coords3_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype539_coords3_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype539_coords3_4:3</include>
	</include>
	<include name="Viewtype539_coords3_16:9">
		<focusedlayout width="133" height="133">
			<control type="group">
				<animation effect="zoom" start="90" end="100" center="auto" time="300" tween="back" easing="out" reversible="false">Focus</animation>
				<!-- Image - Videos -->
				<include content="image-539-focused">
					<param name="fallback">DefaultVideoDefaultVideo.png</param>
					<param name="visible">Container.Content(videos)</param>
				</include>
				<!-- Collection -->
				<control type="group">
					<left>15</left>
					<bottom>0</bottom>
					<width>133</width>
					<height>15</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
					</control>
					<control type="image">
						<width>15</width>
						<centerleft>67</centerleft>
						<texture background="true">views/OverlayCollectionWide.png</texture>
					</control>
				</control>
				<!-- Watched status -->
				<control type="group">
					<left>15</left>
					<bottom>0</bottom>
					<width>133</width>
					<height>15</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
						<width>15</width>
						<centerleft>67</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="Viewtype539_coords3_21:9">
		<focusedlayout width="133" height="133">
			<control type="group">
				<animation effect="zoom" start="90" end="100" center="auto" time="300" tween="back" easing="out" reversible="false">Focus</animation>
				<!-- Image - Videos -->
				<include content="image-539-focused">
					<param name="fallback">DefaultVideoDefaultVideo.png</param>
					<param name="visible">Container.Content(videos)</param>
				</include>
				<!-- Collection -->
				<control type="group">
					<left>14</left>
					<bottom>0</bottom>
					<width>133</width>
					<height>15</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
					</control>
					<control type="image">
						<width>15</width>
						<centerleft>67</centerleft>
						<texture background="true">views/OverlayCollectionWide.png</texture>
					</control>
				</control>
				<!-- Watched status -->
				<control type="group">
					<left>14</left>
					<bottom>0</bottom>
					<width>133</width>
					<height>15</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
						<width>15</width>
						<centerleft>67</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="Viewtype539_coords3_21:9_masked">
		<focusedlayout width="133" height="133">
			<control type="group">
				<animation effect="zoom" start="90" end="100" center="auto" time="300" tween="back" easing="out" reversible="false">Focus</animation>
				<!-- Image - Videos -->
				<include content="image-539-focused">
					<param name="fallback">DefaultVideoDefaultVideo.png</param>
					<param name="visible">Container.Content(videos)</param>
				</include>
				<!-- Collection -->
				<control type="group">
					<left>14</left>
					<bottom>0</bottom>
					<width>133</width>
					<height>15</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
					</control>
					<control type="image">
						<width>15</width>
						<centerleft>67</centerleft>
						<texture background="true">views/OverlayCollectionWide.png</texture>
					</control>
				</control>
				<!-- Watched status -->
				<control type="group">
					<left>14</left>
					<bottom>0</bottom>
					<width>133</width>
					<height>15</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
						<width>15</width>
						<centerleft>67</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="Viewtype539_coords3_4:3">
		<focusedlayout width="133" height="133">
			<control type="group">
				<animation effect="zoom" start="90" end="100" center="auto" time="300" tween="back" easing="out" reversible="false">Focus</animation>
				<!-- Image - Videos -->
				<include content="image-539-focused">
					<param name="fallback">DefaultVideoDefaultVideo.png</param>
					<param name="visible">Container.Content(videos)</param>
				</include>
				<!-- Collection -->
				<control type="group">
					<left>15</left>
					<bottom>0</bottom>
					<width>133</width>
					<height>15</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
					</control>
					<control type="image">
						<width>15</width>
						<centerleft>67</centerleft>
						<texture background="true">views/OverlayCollectionWide.png</texture>
					</control>
				</control>
				<!-- Watched status -->
				<control type="group">
					<left>15</left>
					<bottom>0</bottom>
					<width>133</width>
					<height>15</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
						<width>15</width>
						<centerleft>67</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="Viewtype539_coords4">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype539_coords4_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype539_coords4_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype539_coords4_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype539_coords4_4:3</include>
	</include>
	<include name="Viewtype539_coords4_16:9">
		<centerleft>50%</centerleft>
		<top>850</top>
		<width>1680</width>
		<height>142</height>
	</include>
	<include name="Viewtype539_coords4_21:9">
		<centerleft>50%</centerleft>
		<top>850</top>
		<width>2320</width>
		<height>142</height>
	</include>
	<include name="Viewtype539_coords4_21:9_masked">
		<centerleft>50%</centerleft>
		<top>1030</top>
		<width>2320</width>
		<height>142</height>
	</include>
	<include name="Viewtype539_coords4_4:3">
		<centerleft>50%</centerleft>
		<top>850</top>
		<width>1200</width>
		<height>142</height>
	</include>
	
	<include name="Viewtype539_coords5">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype539_coords5_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype539_coords5_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype539_coords5_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype539_coords5_4:3</include>
	</include>
	<include name="Viewtype539_coords5_16:9">
		<centerleft>50%</centerleft>
		<top>0</top>
		<width>1680</width>
		<height>72</height>
	</include>
	<include name="Viewtype539_coords5_21:9">
		<centerleft>50%</centerleft>
		<top>0</top>
		<width>2320</width>
		<height>72</height>
	</include>
	<include name="Viewtype539_coords5_21:9_masked">
		<centerleft>50%</centerleft>
		<top>0</top>
		<width>2320</width>
		<height>72</height>
	</include>
	<include name="Viewtype539_coords5_4:3">
		<centerleft>50%</centerleft>
		<top>0</top>
		<width>1200</width>
		<height>72</height>
	</include>
	
	<include name="Viewtype539_coords6">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype539_coords6_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype539_coords6_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype539_coords6_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype539_coords6_4:3</include>
	</include>
	<include name="Viewtype539_coords6_16:9">
		<centerleft>50%</centerleft>
		<top>82</top>
		<width>800</width>
		<height>54</height>
	</include>
	<include name="Viewtype539_coords6_21:9">
		<centerleft>50%</centerleft>
		<top>82</top>
		<width>1440</width>
		<height>54</height>
	</include>
	<include name="Viewtype539_coords6_21:9_masked">
		<centerleft>50%</centerleft>
		<top>82</top>
		<width>1440</width>
		<height>54</height>
	</include>
	<include name="Viewtype539_coords6_4:3">
		<centerleft>50%</centerleft>
		<top>82</top>
		<width>320</width>
		<height>54</height>
	</include>
	
	<include name="Viewtype539_coords7">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype539_coords7_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype539_coords7_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype539_coords7_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype539_coords7_4:3</include>
	</include>
	<include name="Viewtype539_coords7_16:9">
		<bottom>7</bottom>
		<left>21</left>
		<width>120</width>
		<height>120</height>
	</include>
	<include name="Viewtype539_coords7_21:9">
		<bottom>7</bottom>
		<left>21</left>
		<width>120</width>
		<height>120</height>
	</include>
	<include name="Viewtype539_coords7_21:9_masked">
		<bottom>7</bottom>
		<left>21</left>
		<width>120</width>
		<height>120</height>
	</include>
	<include name="Viewtype539_coords7_4:3">
		<bottom>7</bottom>
		<left>21</left>
		<width>120</width>
		<height>120</height>
	</include>
	
	<include name="Viewtype539_coords8">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype539_coords8_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype539_coords8_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype539_coords8_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype539_coords8_4:3</include>
	</include>
	<include name="Viewtype539_coords8_16:9">
		<bottom>0</bottom>
		<left>15</left>
		<width>133</width>
		<height>133</height>
	</include>
	<include name="Viewtype539_coords8_21:9">
		<bottom>0</bottom>
		<left>14</left>
		<width>133</width>
		<height>133</height>
	</include>
	<include name="Viewtype539_coords8_21:9_masked">
		<bottom>0</bottom>
		<left>14</left>
		<width>133</width>
		<height>133</height>
	</include>
	<include name="Viewtype539_coords8_4:3">
		<bottom>0</bottom>
		<left>15</left>
		<width>133</width>
		<height>133</height>
	</include>

</includes>