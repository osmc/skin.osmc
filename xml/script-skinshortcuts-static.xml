<?xml version='1.0' encoding='UTF-8'?>
<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>$LOCALIZE[342]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultMovies.png</icon>
			<thumb />
			<property name="labelID">movies</property>
			<property name="defaultID">movies</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<property name="submenuVisibility">movies</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>$LOCALIZE[20343]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<property name="submenuVisibility">tvshows</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>$LOCALIZE[3]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">videos</property>
			<property name="defaultID">videos</property>
			<onclick>ActivateWindow(Videos,root,return)</onclick>
			<property name="path">ActivateWindow(Videos,root,return)</property>
			<property name="list">root</property>
			<visible>True</visible>
			<property name="submenuVisibility">videos</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>$LOCALIZE[2]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultMusicAlbums.png</icon>
			<thumb />
			<property name="labelID">music</property>
			<property name="defaultID">music</property>
			<onclick>ActivateWindow(Music,root,return)</onclick>
			<property name="path">ActivateWindow(Music,root,return)</property>
			<property name="list">root</property>
			<visible>True</visible>
			<property name="submenuVisibility">music</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>$LOCALIZE[10002]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultPicture.png</icon>
			<thumb />
			<property name="labelID">pictures</property>
			<property name="defaultID">pictures</property>
			<onclick>ActivateWindow(Pictures)</onclick>
			<property name="path">ActivateWindow(Pictures)</property>
			<property name="list">Pictures</property>
			<visible>True</visible>
			<property name="submenuVisibility">pictures</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<label>$LOCALIZE[15016]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultGameAddons.png</icon>
			<thumb />
			<property name="labelID">15016</property>
			<property name="defaultID">15016</property>
			<onclick>ActivateWindow(Games)</onclick>
			<property name="path">ActivateWindow(Games)</property>
			<property name="list">Games</property>
			<visible>True</visible>
			<property name="submenuVisibility">num-15016</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<label>$LOCALIZE[31091]</label>
			<label2>$LOCALIZE[Custom shortcut]</label2>
			<icon>DefaultOSMC.png</icon>
			<thumb />
			<property name="labelID">service.osmc.settings</property>
			<property name="defaultID">service.osmc.settings</property>
			<onclick>RunScript(service.osmc.settings)</onclick>
			<property name="path">RunScript(service.osmc.settings)</property>
			<property name="list">RunScript(service.osmc.settings)</property>
			<visible>System.HasAddon(service.osmc.settings)</visible>
			<property name="submenuVisibility">service-osmc-settings</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<label>$LOCALIZE[1036]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultFavourites.png</icon>
			<thumb />
			<property name="labelID">1036</property>
			<property name="defaultID">1036</property>
			<onclick>ActivateWindow(Favourites)</onclick>
			<property name="path">ActivateWindow(Favourites)</property>
			<property name="list">Favourites</property>
			<visible>True</visible>
			<property name="submenuVisibility">num-1036</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<label>$LOCALIZE[10001]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultProgram.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>True</visible>
			<property name="submenuVisibility">programs</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<label>$LOCALIZE[12600]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultWeather.png</icon>
			<thumb />
			<property name="labelID">weather</property>
			<property name="defaultID">weather</property>
			<visible>!String.IsEmpty(Weather.Plugin)</visible>
			<onclick>ActivateWindow(Weather)</onclick>
			<property name="path">ActivateWindow(Weather)</property>
			<property name="list">Weather</property>
			<property name="submenuVisibility">weather</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<label>$LOCALIZE[14204]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultLiveTV.png</icon>
			<thumb />
			<property name="labelID">14204</property>
			<property name="defaultID">14204</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<property name="submenuVisibility">num-14204</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<label>$LOCALIZE[19021]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultRadio.png</icon>
			<thumb />
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<visible>System.HasPVRAddon</visible>
			<onclick>ActivateWindow(RadioGuide)</onclick>
			<property name="path">ActivateWindow(RadioGuide)</property>
			<property name="list">RadioGuide</property>
			<property name="submenuVisibility">num-19021</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="13">
			<property name="id">$NUMBER[13]</property>
			<label>$LOCALIZE[341]</label>
			<label2>$LOCALIZE[$ADDON[script.skinshortcuts 32034]]</label2>
			<icon>DefaultDVDFull.png</icon>
			<thumb />
			<property name="labelID">341</property>
			<property name="defaultID">341</property>
			<visible>System.HasMediaDVD</visible>
			<onclick>PlayDVD</onclick>
			<property name="path">PlayDVD</property>
			<property name="list">PlayDVD</property>
			<property name="submenuVisibility">num-341</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="14">
			<property name="id">$NUMBER[14]</property>
			<label>$LOCALIZE[10004]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultSettings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">settings</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>True</visible>
			<property name="submenuVisibility">settings</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="15">
			<property name="id">$NUMBER[15]</property>
			<label>$LOCALIZE[33060]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultPower.png</icon>
			<thumb />
			<property name="labelID">33060</property>
			<property name="defaultID">33060</property>
			<onclick>ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<visible>True</visible>
			<property name="submenuVisibility">num-33060</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
	</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[652]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultYear.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,"library://video/movies/years.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/movies/years.xml/",return)</property>
			<property name="list">library://video/movies/years.xml/</property>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[135]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultGenre.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,"library://video/movies/genres.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/movies/genres.xml/",return)</property>
			<property name="list">library://video/movies/genres.xml/</property>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[344]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultActor.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,"library://video/movies/actors.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/movies/actors.xml/",return)</property>
			<property name="list">library://video/movies/actors.xml/</property>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[20348]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultDirector.png</icon>
			<thumb />
			<property name="labelID">20348</property>
			<property name="defaultID">20348</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,"library://video/movies/directors.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/movies/directors.xml/",return)</property>
			<property name="list">library://video/movies/directors.xml/</property>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[652]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultYear.png</icon>
			<thumb />
			<property name="labelID">652</property>
			<property name="defaultID">652</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,"library://video/tvshows/years.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/tvshows/years.xml/",return)</property>
			<property name="list">library://video/tvshows/years.xml/</property>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[135]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultGenre.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,"library://video/tvshows/genres.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/tvshows/genres.xml/",return)</property>
			<property name="list">library://video/tvshows/genres.xml/</property>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[344]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultActor.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,"library://video/tvshows/actors.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/tvshows/actors.xml/",return)</property>
			<property name="list">library://video/tvshows/actors.xml/</property>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[20388]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultStudios.png</icon>
			<thumb />
			<property name="labelID">20388</property>
			<property name="defaultID">20388</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,"library://video/tvshows/studios.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/tvshows/studios.xml/",return)</property>
			<property name="list">library://video/tvshows/studios.xml/</property>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[13350]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">13350</property>
			<property name="defaultID">13350</property>
			<onclick>ActivateWindow(VideoPlaylist)</onclick>
			<property name="path">ActivateWindow(VideoPlaylist)</property>
			<property name="list">VideoPlaylist</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),videos)</visible>
			<property name="group">videos</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[1037]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultAddonVideo.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,Addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),videos)</visible>
			<property name="group">videos</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[744]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<onclick>ActivateWindow(Videos,Files,return)</onclick>
			<property name="path">ActivateWindow(Videos,Files,return)</property>
			<property name="list">Files</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),videos)</visible>
			<property name="group">videos</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[13350]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultPlaylist.png</icon>
			<thumb />
			<property name="labelID">13350</property>
			<property name="defaultID">13350</property>
			<onclick>ActivateWindow(MusicPlaylist)</onclick>
			<property name="path">ActivateWindow(MusicPlaylist)</property>
			<property name="list">MusicPlaylist</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1038]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultAddonMusic.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(Music,Addons,return)</onclick>
			<property name="path">ActivateWindow(Music,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[744]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<onclick>ActivateWindow(Music,Files,return)</onclick>
			<property name="path">ActivateWindow(Music,Files,return)</property>
			<property name="list">Files</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[1039]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultAddonPicture.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),pictures)</visible>
			<property name="group">pictures</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[19019]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultLiveTV.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<property name="group">14204</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[19163]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>home/recordings.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<property name="group">14204</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[19040]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>home/timers.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<property name="group">14204</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[137]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>home/search-tv.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<property name="group">14204</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[19019]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultRadio.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<onclick>ActivateWindow(RadioChannels)</onclick>
			<property name="path">ActivateWindow(RadioChannels)</property>
			<property name="list">RadioChannels</property>
			<property name="group">19021</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[19163]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>home/recordings.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<onclick>ActivateWindow(RadioRecordings)</onclick>
			<property name="path">ActivateWindow(RadioRecordings)</property>
			<property name="list">RadioRecordings</property>
			<property name="group">19021</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[19040]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>home/timers.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<onclick>ActivateWindow(RadioTimers)</onclick>
			<property name="path">ActivateWindow(RadioTimers)</property>
			<property name="list">RadioTimers</property>
			<property name="group">19021</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[137]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>home/search-tv.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<onclick>ActivateWindow(RadioSearch)</onclick>
			<property name="path">ActivateWindow(RadioSearch)</property>
			<property name="list">RadioSearch</property>
			<property name="group">19021</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[600]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>RipCD.png</icon>
			<thumb />
			<property name="labelID">600</property>
			<property name="defaultID">600</property>
			<onclick>RipCD</onclick>
			<property name="path">RipCD</property>
			<property name="list">RipCD</property>
			<visible>[System.HasMediaAudioCD] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-341)</visible>
			<property name="group">341</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[31090]</label>
			<label2>$LOCALIZE[32020]</label2>
			<icon>DefaultDVDFull.png</icon>
			<thumb />
			<property name="labelID">31090</property>
			<property name="defaultID">31090</property>
			<onclick>EjectTray()</onclick>
			<property name="path">EjectTray()</property>
			<property name="list">EjectTray()</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-341)</visible>
			<property name="group">341</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[13200]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultUser.png</icon>
			<thumb />
			<property name="labelID">13200</property>
			<property name="defaultID">13200</property>
			<onclick>ActivateWindow(profiles)</onclick>
			<property name="path">ActivateWindow(profiles)</property>
			<property name="list">profiles</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[130]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultIconInfo.png</icon>
			<thumb />
			<property name="labelID">130</property>
			<property name="defaultID">130</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
			<property name="path">ActivateWindow(systeminfo)</property>
			<property name="list">systeminfo</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[7]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultFile.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(filemanager)</onclick>
			<property name="path">ActivateWindow(filemanager)</property>
			<property name="list">filemanager</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[10040]</label>
			<label2>$LOCALIZE[31397]</label2>
			<icon>DefaultAddon.png</icon>
			<thumb />
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<onclick>ActivateWindow(addonbrowser)</onclick>
			<property name="path">ActivateWindow(addonbrowser)</property>
			<property name="list">addonbrowser</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include />
	<include name="skinshortcuts-submenu-1">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[31054]</label>
			<label2>$LOCALIZE[31160]</label2>
			<icon>DefaultMovies.png</icon>
			<thumb />
			<property name="labelID">31054</property>
			<property name="defaultID">31054</property>
			<property name="widget">library</property>
			<property name="widgetName">$LOCALIZE[31054]</property>
			<property name="widgetType">movies</property>
			<property name="widgetPath">special://skin/extras/playlists/movies_random.xsp</property>
			<property name="widgetTarget">videos</property>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<property name="group">movies.1</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31118]</label>
			<label2>$LOCALIZE[31160]</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">31118</property>
			<property name="defaultID">31118</property>
			<property name="widget">library</property>
			<property name="widgetName">$LOCALIZE[31118]</property>
			<property name="widgetType">tvshows</property>
			<property name="widgetPath">special://skin/extras/playlists/tvshows_random.xsp</property>
			<property name="widgetTarget">videos</property>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<property name="group">tvshows.1</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[31056]</label>
			<label2>$LOCALIZE[31160]</label2>
			<icon>DefaultMusicAlbums.png</icon>
			<thumb />
			<property name="labelID">31056</property>
			<property name="defaultID">31056</property>
			<property name="widget">library</property>
			<property name="widgetName">$LOCALIZE[31056]</property>
			<property name="widgetType">albums</property>
			<property name="widgetPath">special://skin/extras/playlists/albums_random.xsp</property>
			<property name="widgetTarget">music</property>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music.1</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>$LOCALIZE[35049]</label>
			<label2>$LOCALIZE[31160]</label2>
			<icon>DefaultAddonGame.png</icon>
			<thumb />
			<property name="labelID">35049</property>
			<property name="defaultID">35049</property>
			<property name="widget">GameWidget</property>
			<property name="widgetName">$LOCALIZE[35049]</property>
			<property name="widgetType">custom</property>
			<property name="widgetPath">addons://sources/game/</property>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<property name="group">15016.1</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">8</property>
			<label>$LOCALIZE[10001]</label>
			<label2>$LOCALIZE[31160]</label2>
			<icon>DefaultAddonProgram.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<property name="widget">addon</property>
			<property name="widgetName">$LOCALIZE[10001]</property>
			<property name="widgetType">program</property>
			<property name="widgetPath">addons://sources/executable</property>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<property name="group">programs.1</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[10508]</label>
			<label2>$LOCALIZE[31160]</label2>
			<icon>DefaultWeather.png</icon>
			<thumb />
			<property name="labelID">10508</property>
			<property name="defaultID">10508</property>
			<property name="widget">WeatherWidget</property>
			<property name="widgetName">$LOCALIZE[10508]</property>
			<property name="widgetType">custom</property>
			<property name="widgetPath">$INCLUDE[weather-widget]</property>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<property name="group">weather.1</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[19217]</label>
			<label2>$LOCALIZE[31160]</label2>
			<icon>DefaultAddonPVRClient.png</icon>
			<thumb />
			<property name="labelID">19217</property>
			<property name="defaultID">19217</property>
			<property name="widget">pvr</property>
			<property name="widgetName">$LOCALIZE[19217]</property>
			<property name="widgetType">pvr</property>
			<property name="widgetPath">pvr://channels/tv/*/</property>
			<property name="widgetTarget">videos</property>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<property name="group">14204.1</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[19216]</label>
			<label2>$LOCALIZE[31160]</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19216</property>
			<property name="defaultID">19216</property>
			<property name="widget">pvr</property>
			<property name="widgetName">$LOCALIZE[19216]</property>
			<property name="widgetType">pvr</property>
			<property name="widgetPath">pvr://channels/radio/*/</property>
			<property name="widgetTarget">videos</property>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[True] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<property name="group">19021.1</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-template-widgetControl">
		<include condition="True">skinshortcuts-template-widgetControl-Master user</include>
	</include>
	<include name="skinshortcuts-template-widgetControl-Master user">
		<control id="10001" type="list">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColorNF]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[31054]</label>
					<visible>Integer.IsGreater(Container(10101).NumItems,0) | Container(10101).IsUpdating</visible>
					<property name="widgetID">1-1</property>
					<property name="widgetContainer">10101</property>
				</item>
			</content>
		</control>
		<control id="9005" type="button">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<label>$LOCALIZE[31157]</label>
			<onfocus condition="String.IsEqual(Container(10001).ListItem(-1).Property(widgetID),1-1)">Control.SetFocus(10101)</onfocus>
			<onfocus>SetProperty(changeWidget-10001,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10001,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10001,-1)</onfocus>
		</control>
		<control id="9006" type="button">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<label>$LOCALIZE[31158]</label>
			<onfocus condition="String.IsEqual(Container(10001).ListItem.Property(widgetID),1-1)">Control.SetFocus(10101)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(10001).NumItems,0)">Control.SetFocus(9000)</onfocus>
		</control>
		<control id="9007" type="button">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<label>$LOCALIZE[31159]</label>
			<onfocus condition="String.IsEqual(Container(10001).ListItem(1).Property(widgetID),1-1)">Control.SetFocus(10101)</onfocus>
			<onfocus>SetProperty(changeWidget-10001,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10001,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10001,1)</onfocus>
		</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<include content="widgetHeading">
				<param name="container">10001</param>
			</include>
		</control>
		<control id="10002" type="list">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColorNF]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[31118]</label>
					<visible>Integer.IsGreater(Container(10201).NumItems,0) | Container(10201).IsUpdating</visible>
					<property name="widgetID">2-1</property>
					<property name="widgetContainer">10201</property>
				</item>
			</content>
		</control>
		<control id="9005" type="button">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<label>$LOCALIZE[31157]</label>
			<onfocus condition="String.IsEqual(Container(10002).ListItem(-1).Property(widgetID),2-1)">Control.SetFocus(10201)</onfocus>
			<onfocus>SetProperty(changeWidget-10002,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10002,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10002,-1)</onfocus>
		</control>
		<control id="9006" type="button">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<label>$LOCALIZE[31158]</label>
			<onfocus condition="String.IsEqual(Container(10002).ListItem.Property(widgetID),2-1)">Control.SetFocus(10201)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(10002).NumItems,0)">Control.SetFocus(9000)</onfocus>
		</control>
		<control id="9007" type="button">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<label>$LOCALIZE[31159]</label>
			<onfocus condition="String.IsEqual(Container(10002).ListItem(1).Property(widgetID),2-1)">Control.SetFocus(10201)</onfocus>
			<onfocus>SetProperty(changeWidget-10002,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10002,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10002,1)</onfocus>
		</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<include content="widgetHeading">
				<param name="container">10002</param>
			</include>
		</control>
		<control id="10004" type="list">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColorNF]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[31056]</label>
					<visible>Integer.IsGreater(Container(10401).NumItems,0) | Container(10401).IsUpdating</visible>
					<property name="widgetID">4-1</property>
					<property name="widgetContainer">10401</property>
				</item>
			</content>
		</control>
		<control id="9005" type="button">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<label>$LOCALIZE[31157]</label>
			<onfocus condition="String.IsEqual(Container(10004).ListItem(-1).Property(widgetID),4-1)">Control.SetFocus(10401)</onfocus>
			<onfocus>SetProperty(changeWidget-10004,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10004,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10004,-1)</onfocus>
		</control>
		<control id="9006" type="button">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<label>$LOCALIZE[31158]</label>
			<onfocus condition="String.IsEqual(Container(10004).ListItem.Property(widgetID),4-1)">Control.SetFocus(10401)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(10004).NumItems,0)">Control.SetFocus(9000)</onfocus>
		</control>
		<control id="9007" type="button">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<label>$LOCALIZE[31159]</label>
			<onfocus condition="String.IsEqual(Container(10004).ListItem(1).Property(widgetID),4-1)">Control.SetFocus(10401)</onfocus>
			<onfocus>SetProperty(changeWidget-10004,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10004,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10004,1)</onfocus>
		</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<include content="widgetHeading">
				<param name="container">10004</param>
			</include>
		</control>
		<control id="10006" type="list">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColorNF]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[35049]</label>
					<visible>Integer.IsGreater(Container(10601).NumItems,0) | Container(10601).IsUpdating</visible>
					<property name="widgetID">6-1</property>
					<property name="widgetContainer">10601</property>
				</item>
			</content>
		</control>
		<control id="9005" type="button">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<label>$LOCALIZE[31157]</label>
			<onfocus condition="String.IsEqual(Container(10006).ListItem(-1).Property(widgetID),6-1)">Control.SetFocus(10601)</onfocus>
			<onfocus>SetProperty(changeWidget-10006,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10006,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10006,-1)</onfocus>
		</control>
		<control id="9006" type="button">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<label>$LOCALIZE[31158]</label>
			<onfocus condition="String.IsEqual(Container(10006).ListItem.Property(widgetID),6-1)">Control.SetFocus(10601)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(10006).NumItems,0)">Control.SetFocus(9000)</onfocus>
		</control>
		<control id="9007" type="button">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<label>$LOCALIZE[31159]</label>
			<onfocus condition="String.IsEqual(Container(10006).ListItem(1).Property(widgetID),6-1)">Control.SetFocus(10601)</onfocus>
			<onfocus>SetProperty(changeWidget-10006,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10006,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10006,1)</onfocus>
		</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<include content="widgetHeading">
				<param name="container">10006</param>
			</include>
		</control>
		<control id="10008" type="list">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColorNF]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[10001]</label>
					<visible>Integer.IsGreater(Container(10801).NumItems,0) | Container(10801).IsUpdating</visible>
					<property name="widgetID">8-1</property>
					<property name="widgetContainer">10801</property>
				</item>
			</content>
		</control>
		<control id="9005" type="button">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<label>$LOCALIZE[31157]</label>
			<onfocus condition="String.IsEqual(Container(10008).ListItem(-1).Property(widgetID),8-1)">Control.SetFocus(10801)</onfocus>
			<onfocus>SetProperty(changeWidget-10008,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10008,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10008,-1)</onfocus>
		</control>
		<control id="9006" type="button">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<label>$LOCALIZE[31158]</label>
			<onfocus condition="String.IsEqual(Container(10008).ListItem.Property(widgetID),8-1)">Control.SetFocus(10801)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(10008).NumItems,0)">Control.SetFocus(9000)</onfocus>
		</control>
		<control id="9007" type="button">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<label>$LOCALIZE[31159]</label>
			<onfocus condition="String.IsEqual(Container(10008).ListItem(1).Property(widgetID),8-1)">Control.SetFocus(10801)</onfocus>
			<onfocus>SetProperty(changeWidget-10008,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10008,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10008,1)</onfocus>
		</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<include content="widgetHeading">
				<param name="container">10008</param>
			</include>
		</control>
		<control id="10009" type="list">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColorNF]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[10508]</label>
					<visible>!String.IsEmpty(Container(10901).ListItem.Property(outlook)) + !String.IsEqual(Container(10901).ListItem.Property(outlook),$LOCALIZE[10006])</visible>
					<property name="widgetID">9-1</property>
					<property name="widgetContainer">10901</property>
				</item>
			</content>
		</control>
		<control id="9005" type="button">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<label>$LOCALIZE[31157]</label>
			<onfocus condition="String.IsEqual(Container(10009).ListItem(-1).Property(widgetID),9-1)">Control.SetFocus(10901)</onfocus>
			<onfocus>SetProperty(changeWidget-10009,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10009,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10009,-1)</onfocus>
		</control>
		<control id="9006" type="button">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<label>$LOCALIZE[31158]</label>
			<onfocus condition="String.IsEqual(Container(10009).ListItem.Property(widgetID),9-1)">Control.SetFocus(10901)</onfocus>
			<onfocus condition="String.IsEmpty(Container(10901).ListItem.Property(outlook)) | String.IsEqual(Container(10901).ListItem.Property(outlook),$LOCALIZE[10006])">Control.SetFocus(9000)</onfocus>
		</control>
		<control id="9007" type="button">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<label>$LOCALIZE[31159]</label>
			<onfocus condition="String.IsEqual(Container(10009).ListItem(1).Property(widgetID),9-1)">Control.SetFocus(10901)</onfocus>
			<onfocus>SetProperty(changeWidget-10009,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10009,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10009,1)</onfocus>
		</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<include content="widgetHeading">
				<param name="container">10009</param>
			</include>
		</control>
		<control id="100010" type="list">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColorNF]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[19217]</label>
					<visible>Integer.IsGreater(Container(101001).NumItems,0) | Container(101001).IsUpdating</visible>
					<property name="widgetID">10-1</property>
					<property name="widgetContainer">101001</property>
				</item>
			</content>
		</control>
		<control id="9005" type="button">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<label>$LOCALIZE[31157]</label>
			<onfocus condition="String.IsEqual(Container(100010).ListItem(-1).Property(widgetID),10-1)">Control.SetFocus(101001)</onfocus>
			<onfocus>SetProperty(changeWidget-100010,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-100010,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(100010,-1)</onfocus>
		</control>
		<control id="9006" type="button">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<label>$LOCALIZE[31158]</label>
			<onfocus condition="String.IsEqual(Container(100010).ListItem.Property(widgetID),10-1)">Control.SetFocus(101001)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(100010).NumItems,0)">Control.SetFocus(9000)</onfocus>
		</control>
		<control id="9007" type="button">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<label>$LOCALIZE[31159]</label>
			<onfocus condition="String.IsEqual(Container(100010).ListItem(1).Property(widgetID),10-1)">Control.SetFocus(101001)</onfocus>
			<onfocus>SetProperty(changeWidget-100010,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-100010,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(100010,1)</onfocus>
		</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<include content="widgetHeading">
				<param name="container">100010</param>
			</include>
		</control>
		<control id="100011" type="list">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColorNF]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</itemlayout>
			<focusedlayout height="100" width="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[19216]</label>
					<visible>Integer.IsGreater(Container(101101).NumItems,0) | Container(101101).IsUpdating</visible>
					<property name="widgetID">11-1</property>
					<property name="widgetContainer">101101</property>
				</item>
			</content>
		</control>
		<control id="9005" type="button">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<label>$LOCALIZE[31157]</label>
			<onfocus condition="String.IsEqual(Container(100011).ListItem(-1).Property(widgetID),11-1)">Control.SetFocus(101101)</onfocus>
			<onfocus>SetProperty(changeWidget-100011,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-100011,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(100011,-1)</onfocus>
		</control>
		<control id="9006" type="button">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<label>$LOCALIZE[31158]</label>
			<onfocus condition="String.IsEqual(Container(100011).ListItem.Property(widgetID),11-1)">Control.SetFocus(101101)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(100011).NumItems,0)">Control.SetFocus(9000)</onfocus>
		</control>
		<control id="9007" type="button">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<label>$LOCALIZE[31159]</label>
			<onfocus condition="String.IsEqual(Container(100011).ListItem(1).Property(widgetID),11-1)">Control.SetFocus(101101)</onfocus>
			<onfocus>SetProperty(changeWidget-100011,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-100011,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(100011,1)</onfocus>
		</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<include content="widgetHeading">
				<param name="container">100011</param>
			</include>
		</control>
	</include>
	<include name="skinshortcuts-template-vertical">
		<include condition="True">skinshortcuts-template-vertical-Master user</include>
	</include>
	<include name="skinshortcuts-template-vertical-Master user">
		<control id="10101" type="list">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime easing="out" tween="sine">240</scrolltime>
			<include condition="True">widgetLayout-tall</include>
			<include condition="False">widgetLayout-wide</include>
			<include condition="False">widgetLayout-square</include>
			<include condition="False">widgetLayout-square-small</include>
			<include content="widgetOnControl">
				<param name="container">10001</param>
			</include>
			<include condition="True" content="widgetLayoutSlide-tall">
				<param name="container">10101</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-wide">
				<param name="container">10101</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-square">
				<param name="container">10101</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-square-small">
				<param name="container">10101</param>
			</include>
			<include content="widgetAnimation">
				<param name="container1">10001</param>
				<param name="container2">1-1</param>
			</include>
			<itemlayout height="360" width="240">
				<include content="widget-image">
					<description>Primary art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">324</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultMovie.png</param>
					<param name="art">$INFO[ListItem.Art(poster)]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">![String.IsEmpty(ListItem.Art(poster))]</param>
				</include>
				<include content="widget-image">
					<description>Fallback art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">324</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultMovie.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">String.IsEmpty(ListItem.Art(poster))</param>
				</include>
				<include content="widget-image">
					<description>Catch-all art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">324</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultMovie.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">[ String.IsEmpty(ListItem.Art(poster)) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
				</include>
				<control type="group">
					<left>12</left>
					<bottom>0</bottom>
					<width>216</width>
					<height>24</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
					<control type="image">
							<width>24</width>
							<centerleft>108</centerleft>
						<texture background="true">views/OverlayCollection.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
				<control type="group">
					<left>12</left>
					<bottom>0</bottom>
					<width>216</width>
					<height>24</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
							<width>24</width>
							<centerleft>108</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
			</itemlayout>
			<focusedlayout height="360" width="240">
				<control type="group">
					<animation effect="zoom" start="100" end="111" center="120,360" time="300" tween="back" easing="out" reversible="false">Focus</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false" condition="Control.HasFocus(9000)">Conditional</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Unfocus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="fallback">DefaultMovie.png</param>
						<param name="art">$INFO[ListItem.Art(poster)]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Art(poster))]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="fallback">DefaultMovie.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Art(poster))</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="fallback">DefaultMovie.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Art(poster)) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
						</control>
					</control>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
						</control>
					</control>
				</control>
				
				<control type="group">
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Focus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultMovie.png</param>
						<param name="art">$INFO[ListItem.Art(poster)]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Art(poster))]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultMovie.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Art(poster))</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultMovie.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Art(poster)) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
				</control>
				
			</focusedlayout>
			<content target="videos">special://skin/extras/playlists/movies_random.xsp</content>
		</control>
		<control id="10201" type="list">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime easing="out" tween="sine">240</scrolltime>
			<include condition="True">widgetLayout-tall</include>
			<include condition="False">widgetLayout-wide</include>
			<include condition="False">widgetLayout-square</include>
			<include condition="False">widgetLayout-square-small</include>
			<include content="widgetOnControl">
				<param name="container">10002</param>
			</include>
			<include condition="True" content="widgetLayoutSlide-tall">
				<param name="container">10201</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-wide">
				<param name="container">10201</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-square">
				<param name="container">10201</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-square-small">
				<param name="container">10201</param>
			</include>
			<include content="widgetAnimation">
				<param name="container1">10002</param>
				<param name="container2">2-1</param>
			</include>
			<itemlayout height="360" width="240">
				<include content="widget-image">
					<description>Primary art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">324</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultShortcut.png</param>
					<param name="art">$INFO[ListItem.Art(poster)]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">![String.IsEmpty(ListItem.Art(poster))]</param>
				</include>
				<include content="widget-image">
					<description>Fallback art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">324</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultShortcut.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">String.IsEmpty(ListItem.Art(poster))</param>
				</include>
				<include content="widget-image">
					<description>Catch-all art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">324</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultShortcut.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">[ String.IsEmpty(ListItem.Art(poster)) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
				</include>
				<control type="group">
					<left>12</left>
					<bottom>0</bottom>
					<width>216</width>
					<height>24</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
					<control type="image">
							<width>24</width>
							<centerleft>108</centerleft>
						<texture background="true">views/OverlayCollection.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
				<control type="group">
					<left>12</left>
					<bottom>0</bottom>
					<width>216</width>
					<height>24</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
							<width>24</width>
							<centerleft>108</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
			</itemlayout>
			<focusedlayout height="360" width="240">
				<control type="group">
					<animation effect="zoom" start="100" end="111" center="120,360" time="300" tween="back" easing="out" reversible="false">Focus</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false" condition="Control.HasFocus(9000)">Conditional</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Unfocus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Art(poster)]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Art(poster))]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Art(poster))</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Art(poster)) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
						</control>
					</control>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Focus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Art(poster)]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Art(poster))]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Art(poster))</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">324</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Art(poster)) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
				</control>
			</focusedlayout>
			<content target="videos">special://skin/extras/playlists/tvshows_random.xsp</content>
		</control>
		<control id="10401" type="list">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime easing="out" tween="sine">240</scrolltime>
			<include condition="False">widgetLayout-tall</include>
			<include condition="False">widgetLayout-wide</include>
			<include condition="False">widgetLayout-square</include>
			<include condition="True">widgetLayout-square-small</include>
			<include content="widgetOnControl">
				<param name="container">10004</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-tall">
				<param name="container">10401</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-wide">
				<param name="container">10401</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-square">
				<param name="container">10401</param>
			</include>
			<include condition="True" content="widgetLayoutSlide-square-small">
				<param name="container">10401</param>
			</include>
			<include content="widgetAnimation">
				<param name="container1">10004</param>
				<param name="container2">4-1</param>
			</include>
			<itemlayout height="240" width="240">
				<include content="widget-image">
					<description>Primary art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">216</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultMusicAlbums.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
				</include>
				<include content="widget-image">
					<description>Fallback art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">216</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultMusicAlbums.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">String.IsEmpty(ListItem.Icon)</param>
				</include>
				<include content="widget-image">
					<description>Catch-all art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">216</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultMusicAlbums.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
				</include>
				<control type="group">
					<left>12</left>
					<bottom>0</bottom>
					<width>216</width>
					<height>24</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
					<control type="image">
							<width>24</width>
							<centerleft>108</centerleft>
						<texture background="true">views/OverlayCollection.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
				<control type="group">
					<left>12</left>
					<bottom>0</bottom>
					<width>216</width>
					<height>24</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
							<width>24</width>
							<centerleft>108</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
			</itemlayout>
			<focusedlayout height="240" width="240">
				<control type="group">
					<animation effect="zoom" start="100" end="111" center="120,240" time="300" tween="back" easing="out" reversible="false">Focus</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false" condition="Control.HasFocus(9000)">Conditional</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Unfocus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Icon)</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
						</control>
					</control>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Focus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Icon)</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
				</control>
			</focusedlayout>
			<content target="music">special://skin/extras/playlists/albums_random.xsp</content>
		</control>
		<control id="10601" type="list">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime easing="out" tween="sine">240</scrolltime>
			<include condition="False">widgetLayout-tall</include>
			<include condition="False">widgetLayout-wide</include>
			<include condition="False">widgetLayout-square</include>
			<include condition="True">widgetLayout-square-small</include>
			<include content="widgetOnControl">
				<param name="container">10006</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-tall">
				<param name="container">10601</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-wide">
				<param name="container">10601</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-square">
				<param name="container">10601</param>
			</include>
			<include condition="True" content="widgetLayoutSlide-square-small">
				<param name="container">10601</param>
			</include>
			<include content="widgetAnimation">
				<param name="container1">10006</param>
				<param name="container2">6-1</param>
			</include>
			<itemlayout height="240" width="240">
				<include content="widget-image">
					<description>Primary art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">216</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultGameAddons.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
				</include>
				<include content="widget-image">
					<description>Fallback art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">216</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultGameAddons.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">String.IsEmpty(ListItem.Icon)</param>
				</include>
				<include content="widget-image">
					<description>Catch-all art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">216</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultGameAddons.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
				</include>
				<control type="group">
					<left>12</left>
					<bottom>0</bottom>
					<width>216</width>
					<height>24</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
					<control type="image">
							<width>24</width>
							<centerleft>108</centerleft>
						<texture background="true">views/OverlayCollection.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
				<control type="group">
					<left>12</left>
					<bottom>0</bottom>
					<width>216</width>
					<height>24</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
							<width>24</width>
							<centerleft>108</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
			</itemlayout>
			<focusedlayout height="240" width="240">
				<control type="group">
					<animation effect="zoom" start="100" end="111" center="120,240" time="300" tween="back" easing="out" reversible="false">Focus</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false" condition="Control.HasFocus(9000)">Conditional</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Unfocus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="fallback">DefaultGameAddons.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="fallback">DefaultGameAddons.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Icon)</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="fallback">DefaultGameAddons.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
						</control>
					</control>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Focus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultGameAddons.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultGameAddons.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Icon)</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultGameAddons.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
				</control>
			</focusedlayout>
			<content target="">addons://sources/game/</content>
		</control>
		<control id="10801" type="list">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime easing="out" tween="sine">240</scrolltime>
			<include condition="False">widgetLayout-tall</include>
			<include condition="False">widgetLayout-wide</include>
			<include condition="False">widgetLayout-square</include>
			<include condition="True">widgetLayout-square-small</include>
			<include content="widgetOnControl">
				<param name="container">10008</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-tall">
				<param name="container">10801</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-wide">
				<param name="container">10801</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-square">
				<param name="container">10801</param>
			</include>
			<include condition="True" content="widgetLayoutSlide-square-small">
				<param name="container">10801</param>
			</include>
			<include content="widgetAnimation">
				<param name="container1">10008</param>
				<param name="container2">8-1</param>
			</include>
			<itemlayout height="240" width="240">
				<include content="widget-image">
					<description>Primary art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">216</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultShortcut.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
				</include>
				<include content="widget-image">
					<description>Fallback art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">216</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultShortcut.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">String.IsEmpty(ListItem.Icon)</param>
				</include>
				<include content="widget-image">
					<description>Catch-all art</description>
					<param name="left">12</param>
					<param name="bottom">0</param>
					<param name="width">216</param>
					<param name="height">216</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultShortcut.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
				</include>
				<control type="group">
					<left>12</left>
					<bottom>0</bottom>
					<width>216</width>
					<height>24</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
					<control type="image">
							<width>24</width>
							<centerleft>108</centerleft>
						<texture background="true">views/OverlayCollection.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
				<control type="group">
					<left>12</left>
					<bottom>0</bottom>
					<width>216</width>
					<height>24</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
							<width>24</width>
							<centerleft>108</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
			</itemlayout>
			<focusedlayout height="240" width="240">
				<control type="group">
					<animation effect="zoom" start="100" end="111" center="120,240" time="300" tween="back" easing="out" reversible="false">Focus</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false" condition="Control.HasFocus(9000)">Conditional</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Unfocus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Icon)</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
						</control>
					</control>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Focus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Icon)</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">12</param>
						<param name="bottom">0</param>
						<param name="width">216</param>
						<param name="height">216</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
					<control type="group">
						<left>12</left>
						<bottom>0</bottom>
						<width>216</width>
						<height>24</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>24</width>
								<centerleft>108</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
				</control>
			</focusedlayout>
			<content target="programs">addons://sources/executable</content>
		</control>
		<control id="10901" type="list">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime easing="out" tween="sine">240</scrolltime>
			<include>widgetLayout-weather</include>
			<include content="widgetOnControl">
				<param name="container">10009</param>
			</include>
			<include content="widgetLayoutSlide-weather">
				<param name="container">10901</param>
			</include>
			<include content="widgetAnimation">
				<param name="container1">10009</param>
				<param name="container2">9-1</param>
			</include>
			<animation type="Conditional" condition="!String.IsEmpty(Container(10901).ListItem.Property(outlook)) + !String.IsEqual(Container(10901).ListItem.Property(outlook),$LOCALIZE[10006])">
				<effect type="fade" start="0" end="100" time="200" />
				<effect type="slide" start="1800,0" end="0,0" time="400" />
			</animation>
			<animation type="Conditional" condition="String.IsEmpty(Container(10901).ListItem.Property(outlook)) | String.IsEqual(Container(10901).ListItem.Property(outlook),$LOCALIZE[10006])">
				<effect type="fade" start="100" end="0" time="200" />
				<effect type="slide" start="0,0" end="1800,0" time="400" />
			</animation>
			<animation type="Conditional" condition="String.IsEqual(Container(10009).ListItem.Property(widgetID),9-1)">
				<effect type="fade" start="0" end="100" time="200" />
				<effect type="slide" start="1800,0" end="0,0" time="400" />
			</animation>
			<animation type="Conditional" condition="!String.IsEqual(Container(10009).ListItem.Property(widgetID),9-1)">
				<effect type="fade" start="100" end="0" time="200" />
				<effect type="slide" start="0,0" end="1800,0" time="400" />
			</animation>
			<itemlayout height="326" width="203">
				<control type="group">
					<control type="label">
						<top>2</top>
						<width>203</width>
						<height>33</height>
						<font>Font33</font>
						<align>center</align>
						<textcolor>$VAR[TextColorNF]</textcolor>
						<label>$INFO[ListItem.Label]</label>
					</control>
					<control type="image">
						<left>20</left>
						<top>55</top>
						<width>163</width>
						<height>206</height>
						<texture background="true" colordiffuse="$VAR[DiffusePosterNF]">$INFO[ListItem.Icon]</texture>
						<aspectratio align="center">keep</aspectratio>
						<visible>!Skin.HasSetting(weatherIcons.multi)</visible>
					</control>
					<control type="multiimage">
						<left>20</left>
						<top>55</top>
						<width>163</width>
						<height>206</height>
						<imagepath>$INFO[ListItem.Property(weatherIconMulti)]</imagepath>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<timeperimage>200</timeperimage>
						<aspectratio align="center">keep</aspectratio>
						<visible>Skin.HasSetting(weatherIcons.multi)</visible>
					</control>
					<control type="label">
						<top>281</top>
						<width>203</width>
						<height>25</height>
						<font>Font25</font>
						<align>center</align>
						<textcolor>$VAR[TextColorNF]</textcolor>
						<label>$INFO[ListItem.Label2]</label>
					</control>
				</control>
			</itemlayout>
			<focusedlayout height="326" width="203">
				<control type="group">
					<control type="label">
						<top>2</top>
						<width>203</width>
						<height>33</height>
						<font>Font33</font>
						<align>center</align>
						<label>$INFO[ListItem.Label]</label>
						<textcolor>$VAR[TextColorNF]</textcolor>
					</control>
					<control type="image">
						<left>20</left>
						<top>55</top>
						<width>163</width>
						<height>206</height>
						<texture background="true" colordiffuse="$VAR[DiffusePosterNF]">$INFO[ListItem.Icon]</texture>
						<aspectratio align="center">keep</aspectratio>
						<visible>!Control.HasFocus(10901)</visible>
						<visible>!Skin.HasSetting(weatherIcons.multi)</visible>
					</control>
					<control type="image">
						<animation effect="zoom" start="80" end="100" center="auto" time="300" tween="back" easing="out" reversible="false">Focus</animation>
						<left>0</left>
						<top>35</top>
						<width>203</width>
						<height>246</height>
						<texture background="true">$INFO[ListItem.Icon]</texture>
						<aspectratio align="center">keep</aspectratio>
						<visible>Control.HasFocus(10901)</visible>
						<visible>!Skin.HasSetting(weatherIcons.multi)</visible>
					</control>
					<control type="multiimage">
						<left>20</left>
						<top>55</top>
						<width>163</width>
						<height>206</height>
						<imagepath>$INFO[ListItem.Property(weatherIconMulti)]</imagepath>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<timeperimage>200</timeperimage>
						<aspectratio align="center">keep</aspectratio>
						<visible>!Control.HasFocus(10901)</visible>
						<visible>Skin.HasSetting(weatherIcons.multi)</visible>
					</control>
					<control type="multiimage">
						<animation effect="zoom" start="80" end="100" center="auto" time="300" tween="back" easing="out" reversible="false">Focus</animation>
						<left>0</left>
						<top>35</top>
						<width>203</width>
						<height>246</height>
						<imagepath>$INFO[ListItem.Property(weatherIconMulti)]</imagepath>
						<timeperimage>200</timeperimage>
						<aspectratio align="center">keep</aspectratio>
						<visible>Control.HasFocus(10901)</visible>
						<visible>Skin.HasSetting(weatherIcons.multi)</visible>
					</control>
					<control type="label">
						<top>281</top>
						<width>203</width>
						<height>25</height>
						<font>Font25</font>
						<align>center</align>
						<textcolor>$VAR[TextColorNF]</textcolor>
						<label>$INFO[ListItem.Label2]</label>
					</control>
				</control>
			</focusedlayout>
			<content target="">
				<include>weather-widget</include>
			</content>
		</control>
		<control id="101001" type="list">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime easing="out" tween="sine">240</scrolltime>
			<include condition="False">widgetLayout-tall</include>
			<include condition="False">widgetLayout-wide</include>
			<include condition="True">widgetLayout-square</include>
			<include condition="False">widgetLayout-square-small</include>
			<include content="widgetOnControl">
				<param name="container">100010</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-tall">
				<param name="container">101001</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-wide">
				<param name="container">101001</param>
			</include>
			<include condition="True" content="widgetLayoutSlide-square">
				<param name="container">101001</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-square-small">
				<param name="container">101001</param>
			</include>
			<include content="widgetAnimation">
				<param name="container1">100010</param>
				<param name="container2">10-1</param>
			</include>
			<itemlayout height="320" width="320">
				<include content="widget-image">
					<description>Primary art</description>
					<param name="left">16</param>
					<param name="bottom">0</param>
					<param name="width">288</param>
					<param name="height">288</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
				</include>
				<include content="widget-image">
					<description>Fallback art</description>
					<param name="left">16</param>
					<param name="bottom">0</param>
					<param name="width">288</param>
					<param name="height">288</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">String.IsEmpty(ListItem.Icon)</param>
				</include>
				<include content="widget-image">
					<description>Catch-all art</description>
					<param name="left">16</param>
					<param name="bottom">0</param>
					<param name="width">288</param>
					<param name="height">288</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
				</include>
				<control type="group">
					<left>16</left>
					<bottom>0</bottom>
					<width>288</width>
					<height>32</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
					<control type="image">
							<width>32</width>
							<centerleft>144</centerleft>
						<texture background="true">views/OverlayCollection.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
				<control type="group">
					<left>16</left>
					<bottom>0</bottom>
					<width>288</width>
					<height>32</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
							<width>32</width>
							<centerleft>144</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
			</itemlayout>
			<focusedlayout height="320" width="320">
				<control type="group">
					<animation effect="zoom" start="100" end="111" center="160,320" time="300" tween="back" easing="out" reversible="false">Focus</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false" condition="Control.HasFocus(9000)">Conditional</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Unfocus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Icon)</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>16</left>
						<bottom>0</bottom>
						<width>288</width>
						<height>32</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
						</control>
						<control type="image">
								<width>32</width>
								<centerleft>144</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
						</control>
					</control>
					<control type="group">
						<left>16</left>
						<bottom>0</bottom>
						<width>288</width>
						<height>32</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>32</width>
								<centerleft>144</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Focus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Icon)</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>16</left>
						<bottom>0</bottom>
						<width>288</width>
						<height>32</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
						<control type="image">
								<width>32</width>
								<centerleft>144</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
					<control type="group">
						<left>16</left>
						<bottom>0</bottom>
						<width>288</width>
						<height>32</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>32</width>
								<centerleft>144</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
				</control>
			</focusedlayout>
			<content target="videos">pvr://channels/tv/*/</content>
		</control>
		<control id="101101" type="list">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime easing="out" tween="sine">240</scrolltime>
			<include condition="False">widgetLayout-tall</include>
			<include condition="False">widgetLayout-wide</include>
			<include condition="True">widgetLayout-square</include>
			<include condition="False">widgetLayout-square-small</include>
			<include content="widgetOnControl">
				<param name="container">100011</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-tall">
				<param name="container">101101</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-wide">
				<param name="container">101101</param>
			</include>
			<include condition="True" content="widgetLayoutSlide-square">
				<param name="container">101101</param>
			</include>
			<include condition="False" content="widgetLayoutSlide-square-small">
				<param name="container">101101</param>
			</include>
			<include content="widgetAnimation">
				<param name="container1">100011</param>
				<param name="container2">11-1</param>
			</include>
			<itemlayout height="320" width="320">
				<include content="widget-image">
					<description>Primary art</description>
					<param name="left">16</param>
					<param name="bottom">0</param>
					<param name="width">288</param>
					<param name="height">288</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
				</include>
				<include content="widget-image">
					<description>Fallback art</description>
					<param name="left">16</param>
					<param name="bottom">0</param>
					<param name="width">288</param>
					<param name="height">288</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">String.IsEmpty(ListItem.Icon)</param>
				</include>
				<include content="widget-image">
					<description>Catch-all art</description>
					<param name="left">16</param>
					<param name="bottom">0</param>
					<param name="width">288</param>
					<param name="height">288</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
				</include>
				<control type="group">
					<left>16</left>
					<bottom>0</bottom>
					<width>288</width>
					<height>32</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
					<control type="image">
							<width>32</width>
							<centerleft>144</centerleft>
						<texture background="true">views/OverlayCollection.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
				<control type="group">
					<left>16</left>
					<bottom>0</bottom>
					<width>288</width>
					<height>32</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
							<width>32</width>
							<centerleft>144</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					</control>
				</control>
			</itemlayout>
			<focusedlayout height="320" width="320">
				<control type="group">
					<animation effect="zoom" start="100" end="111" center="160,320" time="300" tween="back" easing="out" reversible="false">Focus</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false" condition="Control.HasFocus(9000)">Conditional</animation>
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Unfocus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Icon)</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>16</left>
						<bottom>0</bottom>
						<width>288</width>
						<height>32</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
						</control>
						<control type="image">
								<width>32</width>
								<centerleft>144</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
						</control>
					</control>
					<control type="group">
						<left>16</left>
						<bottom>0</bottom>
						<width>288</width>
						<height>32</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>32</width>
								<centerleft>144</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
						</control>
					</control>
				</control>
				<control type="group">
					<animation effect="fade" start="100" end="0" time="0" reversible="false">Focus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![String.IsEmpty(ListItem.Icon)]</param>
					</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">String.IsEmpty(ListItem.Icon)</param>
					</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">16</param>
						<param name="bottom">0</param>
						<param name="width">288</param>
						<param name="height">288</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ String.IsEmpty(ListItem.Icon) ] + [ String.IsEmpty(ListItem.Icon) ]</param>
					</include>
					<control type="group">
						<left>16</left>
						<bottom>0</bottom>
						<width>288</width>
						<height>32</height>
						<visible>ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
						<control type="image">
								<width>32</width>
								<centerleft>144</centerleft>
							<texture background="true">views/OverlayCollection.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
					<control type="group">
						<left>16</left>
						<bottom>0</bottom>
						<width>288</width>
						<height>32</height>
						<visible>!ListItem.IsCollection</visible>
						<control type="image">
							<texture background="true">views/OverlayBottomBar.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
						</control>
						<control type="image">
								<width>32</width>
								<centerleft>144</centerleft>
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
				</control>
			</focusedlayout>
			<content target="videos">pvr://channels/radio/*/</content>
		</control>
	</include>
	<include name="skinshortcuts-template-reloading">
		<include condition="True">skinshortcuts-template-reloading-Master user</include>
	</include>
	<include name="skinshortcuts-template-reloading-Master user">
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>String.IsEqual(Container(10001).ListItem.Property(widgetID),1-1) + Container(10101).IsUpdating</visible>
		</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>String.IsEqual(Container(10002).ListItem.Property(widgetID),2-1) + Container(10201).IsUpdating</visible>
		</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<visible>String.IsEqual(Container(10004).ListItem.Property(widgetID),4-1) + Container(10401).IsUpdating</visible>
		</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-1506)</visible>
			<visible>String.IsEqual(Container(10006).ListItem.Property(widgetID),6-1) + Container(10601).IsUpdating</visible>
		</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<visible>String.IsEqual(Container(10008).ListItem.Property(widgetID),8-1) + Container(10801).IsUpdating</visible>
		</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<visible>String.IsEqual(Container(100010).ListItem.Property(widgetID),10-1) + Container(101001).IsUpdating</visible>
		</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<visible>String.IsEqual(Container(100011).ListItem.Property(widgetID),11-1) + Container(101101).IsUpdating</visible>
		</control>
	</include>
	<include name="skinshortcuts-template-widgetDetails">
		<include condition="True">skinshortcuts-template-widgetDetails-Master user</include>
	</include>
	<include name="skinshortcuts-template-widgetDetails-Master user" />
	<include name="skinshortcuts-template">
		<include condition="True">skinshortcuts-template-Master user</include>
		<description>This include was built automatically as the template didn't match any menu items</description>
	</include>
	<include name="skinshortcuts-template-Master user">
		<description>This is a fake template which is needed to trick Skin Shortcuts into building the submenuOther templates</description>
	</include>
	<variable name="widgetDetails">
		<!-- Movies -->
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + Integer.IsEqual(Container(10101).NumItems,0)">[COLOR $VAR[TextColorFO]]$LOCALIZE[20186]...[/COLOR]</value>
		<value condition="String.IsEqual(Container(10101).ListItem.DBTYPE,movie) + Control.IsVisible(10001) + Control.HasFocus(10101)">[COLOR $VAR[TextColorFO]]$INFO[Container(10101).ListItem.Title]$INFO[Container(10101).ListItem.Year,[LIGHT] (,)[/LIGHT]][/COLOR]</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101)">[COLOR $VAR[TextColorFO]]$INFO[Container(10101).ListItem.Label][/COLOR]</value>
		<!-- TV Shows -->
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + Integer.IsEqual(Container(10201).NumItems,0)">[COLOR $VAR[TextColorFO]]$LOCALIZE[20186]...[/COLOR]</value>
		<value condition="String.IsEqual(Container(10201).ListItem.DBTYPE,tvshow) + Control.IsVisible(10002) + Control.HasFocus(10201) + Integer.IsGreater(Container(10201).ListItem.Property(TotalSeasons),1) + Integer.IsGreater(Container(10201).ListItem.Property(TotalEpisodes),1)">[COLOR $VAR[TextColorFO]]$INFO[Container(10201).ListItem.TVShowTitle][CR][LIGHT]$INFO[Container(10201).ListItem.Property(TotalSeasons),, $LOCALIZE[33054] &#8226; ]$INFO[Container(10201).ListItem.Property(NumEpisodes),, $LOCALIZE[20453]][/LIGHT][/COLOR]</value>
		<value condition="String.IsEqual(Container(10201).ListItem.DBTYPE,tvshow) + Control.IsVisible(10002) + Control.HasFocus(10201) + Integer.IsEqual(Container(10201).ListItem.Property(TotalSeasons),1) + Integer.IsGreater(Container(10201).ListItem.Property(TotalEpisodes),1)">[COLOR $VAR[TextColorFO]]$INFO[Container(10201).ListItem.TVShowTitle][CR][LIGHT]$INFO[Container(10201).ListItem.Property(TotalSeasons),, $LOCALIZE[36904] &#8226; ]$INFO[Container(10201).ListItem.Property(NumEpisodes),, $LOCALIZE[20453]][/LIGHT][/COLOR]</value>
		<value condition="String.IsEqual(Container(10201).ListItem.DBTYPE,tvshow) + Control.IsVisible(10002) + Control.HasFocus(10201) + Integer.IsGreater(Container(10201).ListItem.Property(TotalSeasons),1) + Integer.IsEqual(Container(10201).ListItem.Property(TotalEpisodes),1)">[COLOR $VAR[TextColorFO]]$INFO[Container(10201).ListItem.TVShowTitle][CR][LIGHT]$INFO[Container(10201).ListItem.Property(TotalSeasons),, $LOCALIZE[33054] &#8226; ]$INFO[Container(10201).ListItem.Property(NumEpisodes),, $LOCALIZE[20359]][/LIGHT][/COLOR]</value>
		<value condition="String.IsEqual(Container(10201).ListItem.DBTYPE,tvshow) + Control.IsVisible(10002) + Control.HasFocus(10201) + Integer.IsEqual(Container(10201).ListItem.Property(TotalSeasons),1) + Integer.IsEqual(Container(10201).ListItem.Property(TotalEpisodes),1)">[COLOR $VAR[TextColorFO]]$INFO[Container(10201).ListItem.TVShowTitle][CR][LIGHT]$INFO[Container(10201).ListItem.Property(TotalSeasons),, $LOCALIZE[36904] &#8226; ]$INFO[Container(10201).ListItem.Property(NumEpisodes),, $LOCALIZE[20359]][/LIGHT][/COLOR]</value>
		<value condition="String.IsEqual(Container(10201).ListItem.DBTYPE,tvshow) + Control.IsVisible(10002) + Control.HasFocus(10201) + Integer.IsGreater(Container(10201).ListItem.Property(TotalSeasons),1) + Integer.IsEqual(Container(10201).ListItem.Property(TotalEpisodes),0)">[COLOR $VAR[TextColorFO]]$INFO[Container(10201).ListItem.TVShowTitle][CR][LIGHT]$INFO[Container(10201).ListItem.Property(TotalSeasons),, $LOCALIZE[33054] &#8226; ]$INFO[Container(10201).ListItem.Property(NumEpisodes),, $LOCALIZE[20453]][/LIGHT][/COLOR]</value>
		<value condition="String.IsEqual(Container(10201).ListItem.DBTYPE,tvshow) + Control.IsVisible(10002) + Control.HasFocus(10201) + Integer.IsEqual(Container(10201).ListItem.Property(TotalSeasons),1) + Integer.IsEqual(Container(10201).ListItem.Property(TotalEpisodes),0)">[COLOR $VAR[TextColorFO]]$INFO[Container(10201).ListItem.TVShowTitle][CR][LIGHT]$INFO[Container(10201).ListItem.Property(TotalSeasons),, $LOCALIZE[36904] &#8226; ]$INFO[Container(10201).ListItem.Property(NumEpisodes),, $LOCALIZE[20453]][/LIGHT][/COLOR]</value>
		<value condition="String.IsEqual(Container(10201).ListItem.DBTYPE,tvshow) + Control.IsVisible(10002) + Control.HasFocus(10201) + Integer.IsEqual(Container(10201).ListItem.Property(TotalSeasons),0)">[COLOR $VAR[TextColorFO]]$INFO[Container(10201).ListItem.TVShowTitle][CR][LIGHT]$INFO[Container(10201).ListItem.Property(TotalSeasons),, $LOCALIZE[33054]][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201)">[COLOR $VAR[TextColorFO]]$INFO[Container(10201).ListItem.Label][/COLOR]</value>
		<!-- Albums -->
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + Integer.IsEqual(Container(10401).NumItems,0)">[COLOR $VAR[TextColorFO]]$LOCALIZE[20186]...[/COLOR]</value>
		<value condition="String.IsEqual(Container(10401).ListItem.DBTYPE,album) + Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.Artist) + !String.IsEmpty(Container(10401).ListItem.Album)">[COLOR $VAR[TextColorFO]]$INFO[Container(10401).ListItem.Artist,[LIGHT],: [/LIGHT]]$INFO[Container(10401).ListItem.Album]$INFO[Container(10401).ListItem.Year,[LIGHT] (,)[/LIGHT]][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401)">[COLOR $VAR[TextColorFO]]$INFO[Container(10401).ListItem.Label][/COLOR]</value>
		<!-- Game addons -->
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + Integer.IsEqual(Container(10601).NumItems,0)">[COLOR $VAR[TextColorFO]]$LOCALIZE[20186]...[/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601)">[COLOR $VAR[TextColorFO]]$INFO[Container(10601).ListItem.Label][/COLOR]</value>
		<!-- Program addons -->
		<value condition="Control.IsVisible(10008) + Control.HasFocus(10801) + Integer.IsEqual(Container(10801).NumItems,0)">[COLOR $VAR[TextColorFO]]$LOCALIZE[20186]...[/COLOR]</value>
		<value condition="Control.IsVisible(10008) + Control.HasFocus(10801)">[COLOR $VAR[TextColorFO]]$INFO[Container(10801).ListItem.Label][/COLOR]</value>
		<!-- Weather -->
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + [String.IsEmpty(Container(10901).ListItem.Property(outlook)) | String.IsEqual(Container(10901).ListItem.Property(outlook),$LOCALIZE[10006])]">[COLOR $VAR[TextColorFO]]$LOCALIZE[20186]...[/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901)">[COLOR $VAR[TextColorFO]]$INFO[Window(Weather).Property(Location),[LIGHT],[/LIGHT][CR]]$INFO[Container(10901).ListItem.Property(outlook)][/COLOR]</value>
		<!-- PVR Channels -->
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + Integer.IsEqual(Container(101001).NumItems,0)">[COLOR $VAR[TextColorFO]]$LOCALIZE[20186]...[/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !IsEmpty(Container(101001).ListItem.ChannelName) + [!String.IsEmpty(Container(101001).ListItem.Title) + !String.IsEqual(101001).ListItem.Title,$LOCALIZE[19055])] + !String.StartsWith(Container(101001).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(101001).ListItem.Path,pvr://channels/) | String.StartsWith(Container(101001).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColorFO]]$INFO[Container(101001).ListItem.ChannelName]$INFO[Container(101001).ListItem.ChannelNumberLabel, &#8226; ,][CR][LIGHT]$INFO[Container(101001).ListItem.Title] ($INFO[Container(101001).ListItem.StartTime] - $INFO[Container(101001).ListItem.EndTime])[CR]$INFO[Container(101001).ListItem.NextTitle] ($INFO[Container(101001).ListItem.NextStartTime] - $INFO[Container(101001).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !IsEmpty(Container(101001).ListItem.ChannelName) + !String.StartsWith(Container(101001).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(101001).ListItem.Path,pvr://channels/) | String.StartsWith(Container(101001).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColorFO]]$INFO[Container(101001).ListItem.ChannelName]$INFO[Container(101001).ListItem.ChannelNumberLabel, &#8226; ,][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001)">[COLOR $VAR[TextColorFO]]$INFO[Container(101001).ListItem.Label][/COLOR]</value>
		<!-- Radio Channels -->
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + Integer.IsEqual(Container(101101).NumItems,0)">[COLOR $VAR[TextColorFO]]$LOCALIZE[20186]...[/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !IsEmpty(Container(101101).ListItem.ChannelName) + [!String.IsEmpty(Container(101101).ListItem.Title) + !String.IsEqual(101101).ListItem.Title,$LOCALIZE[19055])] + !String.StartsWith(Container(101101).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(101101).ListItem.Path,pvr://channels/) | String.StartsWith(Container(101101).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColorFO]]$INFO[Container(101101).ListItem.ChannelName]$INFO[Container(101101).ListItem.ChannelNumberLabel, &#8226; ,][CR][LIGHT]$INFO[Container(101101).ListItem.Title] ($INFO[Container(101101).ListItem.StartTime] - $INFO[Container(101101).ListItem.EndTime])[CR]$INFO[Container(101101).ListItem.NextTitle] ($INFO[Container(101101).ListItem.NextStartTime] - $INFO[Container(101101).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !IsEmpty(Container(101101).ListItem.ChannelName) + !String.StartsWith(Container(101101).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(101101).ListItem.Path,pvr://channels/) | String.StartsWith(Container(101101).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColorFO]]$INFO[Container(101101).ListItem.ChannelName]$INFO[Container(101101).ListItem.ChannelNumberLabel, &#8226; ,][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101)">[COLOR $VAR[TextColorFO]]$INFO[Container(101101).ListItem.Label][/COLOR]</value>
	</variable>
	<variable name="widgetBackground">
		<value condition="Window.Is(Home) + Control.IsVisible(10009) + Control.HasFocus(10901)">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10901).ListItem.Property(weatherFanart)]$INFO[Skin.String(weatherFanart.ext)]</value>
		<value condition="Window.Is(visualisation)">$INFO[Player.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
	</variable>
</includes>
