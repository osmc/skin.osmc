<?xml version="1.0" encoding="UTF-8"?>
<includes>
	
	<include name="Viewtype533_coords1">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords1_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords1_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords1_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords1_4:3</include>
	</include>
	<include name="Viewtype533_coords1_16:9">
		<left>120</left>
		<top>190</top>
	</include>
	<include name="Viewtype533_coords1_21:9">
		<left>120</left>
		<top>190</top>
	</include>
	<include name="Viewtype533_coords1_21:9_masked">
		<left>120</left>
		<top>370</top>
	</include>
	<include name="Viewtype533_coords1_4:3">
		<left>120</left>
		<top>190</top>
	</include>
	
	<include name="Viewtype533_coords2">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords2_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords2_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords2_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords2_4:3</include>
	</include>
	<include name="Viewtype533_coords2_16:9">
		<left>0</left>
		<top>52</top>
		<width>450</width>
		<height>45</height>
	</include>
	<include name="Viewtype533_coords2_21:9">
		<left>0</left>
		<top>52</top>
		<width>450</width>
		<height>45</height>
	</include>
	<include name="Viewtype533_coords2_21:9_masked">
		<left>0</left>
		<top>52</top>
		<width>450</width>
		<height>45</height>
	</include>
	<include name="Viewtype533_coords2_4:3">
		<left>0</left>
		<top>52</top>
		<width>450</width>
		<height>45</height>
	</include>
	
	<include name="Viewtype533_coords3">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords3_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords3_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords3_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords3_4:3</include>
	</include>
	<include name="Viewtype533_coords3_16:9">
		<left>0</left>
		<top>131</top>
		<width>450</width>
		<height>27</height>
	</include>
	<include name="Viewtype533_coords3_21:9">
		<left>0</left>
		<top>131</top>
		<width>450</width>
		<height>27</height>
	</include>
	<include name="Viewtype533_coords3_21:9_masked">
		<left>0</left>
		<top>131</top>
		<width>450</width>
		<height>27</height>
	</include>
	<include name="Viewtype533_coords3_4:3">
		<left>0</left>
		<top>131</top>
		<width>450</width>
		<height>27</height>
	</include>
	
	<include name="Viewtype533_coords4">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords4_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords4_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords4_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords4_4:3</include>
	</include>
	<include name="Viewtype533_coords4_16:9">
		<left>0</left>
		<top>173</top>
		<width>450</width>
		<height>27</height>
	</include>
	<include name="Viewtype533_coords4_21:9">
		<left>0</left>
		<top>173</top>
		<width>450</width>
		<height>27</height>
	</include>
	<include name="Viewtype533_coords4_21:9_masked">
		<left>0</left>
		<top>173</top>
		<width>450</width>
		<height>27</height>
	</include>
	<include name="Viewtype533_coords4_4:3">
		<left>0</left>
		<top>173</top>
		<width>450</width>
		<height>27</height>
	</include>
	
	<include name="Viewtype533_coords5">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords5_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords5_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords5_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords5_4:3</include>
	</include>
	<include name="Viewtype533_coords5_16:9">
		<left>0</left>
		<top>350</top>
		<width>450</width>
		<height>45</height>
	</include>
	<include name="Viewtype533_coords5_21:9">
		<left>0</left>
		<top>350</top>
		<width>450</width>
		<height>45</height>
	</include>
	<include name="Viewtype533_coords5_21:9_masked">
		<left>0</left>
		<top>350</top>
		<width>450</width>
		<height>45</height>
	</include>
	<include name="Viewtype533_coords5_4:3">
		<left>0</left>
		<top>350</top>
		<width>450</width>
		<height>45</height>
	</include>
	
	<include name="Viewtype533_coords6">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords6_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords6_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords6_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords6_4:3</include>
	</include>
	<include name="Viewtype533_coords6_16:9">
		<left>0</left>
		<top>234</top>
		<width>450</width>
		<height>380</height>
	</include>
	<include name="Viewtype533_coords6_21:9">
		<left>0</left>
		<top>234</top>
		<width>450</width>
		<height>380</height>
	</include>
	<include name="Viewtype533_coords6_21:9_masked">
		<left>0</left>
		<top>234</top>
		<width>450</width>
		<height>380</height>
	</include>
	<include name="Viewtype533_coords6_4:3">
		<left>0</left>
		<top>234</top>
		<width>450</width>
		<height>380</height>
	</include>
	
	<include name="Viewtype533_coords7">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords7_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords7_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords7_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords7_4:3</include>
	</include>
	<include name="Viewtype533_coords7_16:9">
		<left>0</left>
		<top>194</top>
		<width>450</width>
		<height>420</height>
	</include>
	<include name="Viewtype533_coords7_21:9">
		<left>0</left>
		<top>194</top>
		<width>450</width>
		<height>420</height>
	</include>
	<include name="Viewtype533_coords7_21:9_masked">
		<left>0</left>
		<top>194</top>
		<width>450</width>
		<height>420</height>
	</include>
	<include name="Viewtype533_coords7_4:3">
		<left>0</left>
		<top>194</top>
		<width>450</width>
		<height>420</height>
	</include>
	
	<include name="Viewtype533_coords8">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords8_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords8_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords8_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords8_4:3</include>
	</include>
	<include name="Viewtype533_coords8_16:9">
		<left>750</left>
		<centertop>50%</centertop>
		<width>1020</width>
		<height>720</height>
	</include>
	<include name="Viewtype533_coords8_21:9">
		<left>750</left>
		<centertop>50%</centertop>
		<width>1660</width>
		<height>720</height>
	</include>
	<include name="Viewtype533_coords8_21:9_masked">
		<left>750</left>
		<centertop>50%</centertop>
		<width>1660</width>
		<height>720</height>
	</include>
	<include name="Viewtype533_coords8_4:3">
		<left>750</left>
		<centertop>50%</centertop>
		<width>540</width>
		<height>720</height>
	</include>
	
	<include name="Viewtype533_coords9">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords9_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords9_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords9_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords9_4:3</include>
	</include>
	<include name="Viewtype533_coords9_16:9">
		<itemlayout width="170" height="240">
			<!-- Image - Movies -->
			<include content="image-533">
				<param name="fallback">DefaultMovie.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(movies)</param>
			</include>
			<!-- Image - TV -->
			<include content="image-533">
				<param name="fallback">DefaultTVShows.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(tvshows) | Container.Content(seasons)</param>
			</include>
			<!-- Collection -->
			<control type="group">
				<left>13</left>
				<bottom>12</bottom>
				<width>144</width>
				<height>16</height>
				<visible>ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
				<control type="image">
					<width>16</width>
					<centerleft>72</centerleft>
					<texture background="true">views/OverlayCollectionWide.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
			<!-- Watched status -->
			<control type="group">
				<left>13</left>
				<bottom>12</bottom>
				<width>144</width>
				<height>16</height>
				<visible>!ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
					<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
				</control>
				<control type="image">
					<width>16</width>
					<centerleft>72</centerleft>
					<texture background="true">$VAR[StatusOverlayWide]</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
		</itemlayout>
	</include>
	<include name="Viewtype533_coords9_21:9">
		<itemlayout width="166" height="240">
			<!-- Image - Movies -->
			<include content="image-533">
				<param name="fallback">DefaultMovie.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(movies)</param>
			</include>
			<!-- Image - TV -->
			<include content="image-533">
				<param name="fallback">DefaultTVShows.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(tvshows) | Container.Content(seasons)</param>
			</include>
			<!-- Collection -->
			<control type="group">
				<left>11</left>
				<bottom>12</bottom>
				<width>144</width>
				<height>16</height>
				<visible>ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
				<control type="image">
					<width>16</width>
					<centerleft>72</centerleft>
					<texture background="true">views/OverlayCollectionWide.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
			<!-- Watched status -->
			<control type="group">
				<left>11</left>
				<bottom>12</bottom>
				<width>144</width>
				<height>16</height>
				<visible>!ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
					<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
				</control>
				<control type="image">
					<width>16</width>
					<centerleft>72</centerleft>
					<texture background="true">$VAR[StatusOverlayWide]</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
		</itemlayout>
	</include>
	<include name="Viewtype533_coords9_21:9_masked">
		<itemlayout width="166" height="240">
			<!-- Image - Movies -->
			<include content="image-533">
				<param name="fallback">DefaultMovie.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(movies)</param>
			</include>
			<!-- Image - TV -->
			<include content="image-533">
				<param name="fallback">DefaultTVShows.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(tvshows) | Container.Content(seasons)</param>
			</include>
			<!-- Collection -->
			<control type="group">
				<left>11</left>
				<bottom>12</bottom>
				<width>144</width>
				<height>16</height>
				<visible>ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
				<control type="image">
					<width>16</width>
					<centerleft>72</centerleft>
					<texture background="true">views/OverlayCollectionWide.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
			<!-- Watched status -->
			<control type="group">
				<left>11</left>
				<bottom>12</bottom>
				<width>144</width>
				<height>16</height>
				<visible>!ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
					<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
				</control>
				<control type="image">
					<width>16</width>
					<centerleft>72</centerleft>
					<texture background="true">$VAR[StatusOverlayWide]</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
		</itemlayout>
	</include>
	<include name="Viewtype533_coords9_4:3">
		<itemlayout width="180" height="240">
			<!-- Image - Movies -->
			<include content="image-533">
				<param name="fallback">DefaultMovie.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(movies)</param>
			</include>
			<!-- Image - TV -->
			<include content="image-533">
				<param name="fallback">DefaultTVShows.png</param>
				<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
				<param name="visible">Container.Content(tvshows) | Container.Content(seasons)</param>
			</include>
			<!-- Collection -->
			<control type="group">
				<left>18</left>
				<bottom>12</bottom>
				<width>144</width>
				<height>16</height>
				<visible>ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
				<control type="image">
					<width>16</width>
					<centerleft>72</centerleft>
					<texture background="true">views/OverlayCollectionWide.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
			<!-- Watched status -->
			<control type="group">
				<left>18</left>
				<bottom>12</bottom>
				<width>144</width>
				<height>16</height>
				<visible>!ListItem.IsCollection</visible>
				<control type="image">
					<texture background="true">views/OverlayBottomBar.png</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
					<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
					<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
				</control>
				<control type="image">
					<width>16</width>
					<centerleft>72</centerleft>
					<texture background="true">$VAR[StatusOverlayWide]</texture>
					<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
				</control>
			</control>
		</itemlayout>
	</include>
	
	<include name="Viewtype533_coords10">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords10_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords10_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords10_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords10_4:3</include>
	</include>
	<include name="Viewtype533_coords10_16:9">
		<focusedlayout width="170" height="240">
			<control type="group">
				<animation effect="zoom" start="90" end="100" center="auto" time="300" tween="back" easing="out" reversible="false">Focus</animation>
				<!-- Image - Movies -->
				<include content="image-533-focused">
					<param name="fallback">DefaultMovie.png</param>
					<param name="visible">Container.Content(movies)</param>
				</include>
				<!-- Image - TV -->
				<include content="image-533-focused">
					<param name="fallback">DefaultTVShows.png</param>
					<param name="visible">Container.Content(tvshows) | Container.Content(seasons)</param>
				</include>
				<!-- Collection -->
				<control type="group">
					<left>5</left>
					<bottom>0</bottom>
					<width>160</width>
					<height>18</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
					</control>
					<control type="image">
						<width>18</width>
						<centerleft>80</centerleft>
						<texture background="true">views/OverlayCollectionWide.png</texture>
					</control>
				</control>
				<!-- Watched status -->
				<control type="group">
					<left>5</left>
					<bottom>0</bottom>
					<width>160</width>
					<height>18</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
						<width>18</width>
						<centerleft>80</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="Viewtype533_coords10_21:9">
		<focusedlayout width="166" height="240">
			<control type="group">
				<animation effect="zoom" start="90" end="100" center="auto" time="300" tween="back" easing="out" reversible="false">Focus</animation>
				<!-- Image - Movies -->
				<include content="image-533-focused">
					<param name="fallback">DefaultMovie.png</param>
					<param name="visible">Container.Content(movies)</param>
				</include>
				<!-- Image - TV -->
				<include content="image-533-focused">
					<param name="fallback">DefaultTVShows.png</param>
					<param name="visible">Container.Content(tvshows) | Container.Content(seasons)</param>
				</include>
				<!-- Collection -->
				<control type="group">
					<left>3</left>
					<bottom>0</bottom>
					<width>160</width>
					<height>18</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
					</control>
					<control type="image">
						<width>18</width>
						<centerleft>80</centerleft>
						<texture background="true">views/OverlayCollectionWide.png</texture>
					</control>
				</control>
				<!-- Watched status -->
				<control type="group">
					<left>3</left>
					<bottom>0</bottom>
					<width>160</width>
					<height>18</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
						<width>18</width>
						<centerleft>80</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="Viewtype533_coords10_21:9_masked">
		<focusedlayout width="166" height="240">
			<control type="group">
				<animation effect="zoom" start="90" end="100" center="auto" time="300" tween="back" easing="out" reversible="false">Focus</animation>
				<!-- Image - Movies -->
				<include content="image-533-focused">
					<param name="fallback">DefaultMovie.png</param>
					<param name="visible">Container.Content(movies)</param>
				</include>
				<!-- Image - TV -->
				<include content="image-533-focused">
					<param name="fallback">DefaultTVShows.png</param>
					<param name="visible">Container.Content(tvshows) | Container.Content(seasons)</param>
				</include>
				<!-- Collection -->
				<control type="group">
					<left>3</left>
					<bottom>0</bottom>
					<width>160</width>
					<height>18</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
					</control>
					<control type="image">
						<width>18</width>
						<centerleft>80</centerleft>
						<texture background="true">views/OverlayCollectionWide.png</texture>
					</control>
				</control>
				<!-- Watched status -->
				<control type="group">
					<left>3</left>
					<bottom>0</bottom>
					<width>160</width>
					<height>18</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
						<width>18</width>
						<centerleft>80</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="Viewtype533_coords10_4:3">
		<focusedlayout width="180" height="240">
			<control type="group">
				<animation effect="zoom" start="90" end="100" center="auto" time="300" tween="back" easing="out" reversible="false">Focus</animation>
				<!-- Image - Movies -->
				<include content="image-533-focused">
					<param name="fallback">DefaultMovie.png</param>
					<param name="visible">Container.Content(movies)</param>
				</include>
				<!-- Image - TV -->
				<include content="image-533-focused">
					<param name="fallback">DefaultTVShows.png</param>
					<param name="visible">Container.Content(tvshows) | Container.Content(seasons)</param>
				</include>
				<!-- Collection -->
				<control type="group">
					<left>10</left>
					<bottom>0</bottom>
					<width>160</width>
					<height>18</height>
					<visible>ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
					</control>
					<control type="image">
						<width>18</width>
						<centerleft>80</centerleft>
						<texture background="true">views/OverlayCollectionWide.png</texture>
					</control>
				</control>
				<!-- Watched status -->
				<control type="group">
					<left>10</left>
					<bottom>0</bottom>
					<width>160</width>
					<height>18</height>
					<visible>!ListItem.IsCollection</visible>
					<control type="image">
						<texture background="true">views/OverlayBottomBar.png</texture>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						<visible>[String.IsEqual(ListItem.DBTYPE,music) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)] + !Skin.HasSetting(MusicListenedToStatus) | [String.IsEqual(ListItem.DBTYPE,video) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,musicvideo)] + !Skin.HasSetting(VideoWatchedStatus)</visible>
					</control>
					<control type="image">
						<width>18</width>
						<centerleft>80</centerleft>
						<texture background="true">$VAR[StatusOverlayWide]</texture>
					</control>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="Viewtype533_coords11">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords11_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords11_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords11_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords11_4:3</include>
	</include>
	<include name="Viewtype533_coords11_16:9">
		<bottom>12</bottom>
		<left>13</left>
		<width>144</width>
		<height>216</height>
	</include>
	<include name="Viewtype533_coords11_21:9">
		<bottom>12</bottom>
		<left>11</left>
		<width>144</width>
		<height>216</height>
	</include>
	<include name="Viewtype533_coords11_21:9_masked">
		<bottom>12</bottom>
		<left>11</left>
		<width>144</width>
		<height>216</height>
	</include>
	<include name="Viewtype533_coords11_4:3">
		<bottom>12</bottom>
		<left>18</left>
		<width>144</width>
		<height>216</height>
	</include>
	
	<include name="Viewtype533_coords12">
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + True">Viewtype533_coords12_16:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,21:9)">Viewtype533_coords12_21:9</include>
		<include condition="String.IsEqual(Skin.AspectRatio,16:9) + False">Viewtype533_coords12_21:9_masked</include>
		<include condition="String.IsEqual(Skin.AspectRatio,4:3)">Viewtype533_coords12_4:3</include>
	</include>
	<include name="Viewtype533_coords12_16:9">
		<bottom>0</bottom>
		<left>5</left>
		<width>160</width>
		<height>240</height>
	</include>
	<include name="Viewtype533_coords12_21:9">
		<bottom>0</bottom>
		<left>3</left>
		<width>160</width>
		<height>240</height>
	</include>
	<include name="Viewtype533_coords12_21:9_masked">
		<bottom>0</bottom>
		<left>3</left>
		<width>160</width>
		<height>240</height>
	</include>
	<include name="Viewtype533_coords12_4:3">
		<bottom>0</bottom>
		<left>10</left>
		<width>160</width>
		<height>240</height>
	</include>

</includes>