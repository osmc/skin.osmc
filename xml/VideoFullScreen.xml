<?xml version="1.0" encoding="UTF-8"?>
<window>
	<!-- fullscreenvideo -->
	<defaultcontrol></defaultcontrol>

	<onload condition="!String.IsEmpty(Window(12005).Property(shownext))">ClearProperty(shownext,12005)</onload>
	<onload condition="!String.IsEmpty(Window(12005).Property(videoinfostart))">ClearProperty(videoinfostart,12005)</onload>
	<onload condition="Skin.HasSetting(videoinfostart) + [VideoPlayer.Content(movies) + Skin.HasSetting(videoinfostartmovies) | VideoPlayer.Content(episodes) + Skin.HasSetting(videoinfostarttvshow) | VideoPlayer.Content(musicvideos) + Skin.HasSetting(videoinfostartmusicvideo) | VideoPlayer.Content(files) + Skin.HasSetting(videoinfostartfiles) | VideoPlayer.Content(livetv) + Skin.HasSetting(videoinfostartlivetv)]">SetProperty(videoinfostart,True,12005)</onload>
	<onload condition="Skin.HasSetting(videoinfostart) + String.IsEqual(Skin.String(videoinfostartduration),5s)">AlarmClock(videoplaybackinfo,ClearProperty(videoinfostart,12005),00:05,silent)</onload>
	<onload condition="Skin.HasSetting(videoinfostart) + String.IsEqual(Skin.String(videoinfostartduration),10s)">AlarmClock(videoplaybackinfo,ClearProperty(videoinfostart,12005),00:10,silent)</onload>
	<onload condition="Skin.HasSetting(videoinfostart) + String.IsEqual(Skin.String(videoinfostartduration),15s)">AlarmClock(videoplaybackinfo,ClearProperty(videoinfostart,12005),00:15,silent)</onload>
	<onload condition="Skin.HasSetting(videoinfostart) + String.IsEqual(Skin.String(videoinfostartduration),20s)">AlarmClock(videoplaybackinfo,ClearProperty(videoinfostart,12005),00:20,silent)</onload>
	<onunload>ClearProperty(videoinfostart,12005)</onunload>

	<controls>
		
		<control type="group">
			<include>DialogDepth</include>
			<include>VideoFullScreen_coords1</include>

			<!-- Background -->
			<control type="image">
				<include>VideoFullScreen_coords2</include>
				<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
			</control>

			<!-- Row 1 label -->
			<control type="label" id="10">
				<include>VideoFullScreen_coords3</include>
				<font>Font25</font>
				<textcolor>$VAR[TextColor1]</textcolor>
				<label></label>
			</control>

			<!-- Row 2 label -->
			<control type="label" id="11">
				<include>VideoFullScreen_coords4</include>
				<font>Font25</font>
				<textcolor>$VAR[TextColor1]</textcolor>
				<label></label>
			</control>

			<!-- Row 3 label -->
			<control type="label" id="12">
				<include>VideoFullScreen_coords5</include>
				<font>Font25</font>
				<textcolor>$VAR[TextColor1]</textcolor>
				<label></label>
			</control>

		</control>

		<control type="group" id="1">
			<include>DialogDepth</include>
			<include>VideoFullScreen_coords6</include>
			
			<control type="group" id="1">
				<include>VideoFullScreen_coords7</include>
				<animation effect="slide" end="0,-75" time="200" condition="Window.IsActive(VideoOSD) + !Window.IsActive(playerprocessinfo)">Conditional</animation>
				<visible>Window.IsVisible(seekbar) | Window.IsVisible(fullscreeninfo) | Window.IsActive(VideoOSD)</visible>
				<visible>!Window.IsVisible(DialogSettings.xml) + !Window.IsVisible(PVRChannelGuide) + !Window.IsVisible(pvrosdchannels) + !Window.IsVisible(teletext) + !Window.IsVisible(DialogSelect.xml) + !Window.IsVisible(DialogPVRInfo.xml) + !Window.IsVisible(shutdownmenu) + !Window.IsVisible(1105) + String.IsEmpty(Window(home).Property(service.upnext.dialog))</visible>
				<include>OSDVisibleHiddenAnimation</include>

				<!-- Player forwarding/rewinding -->
				<control type="group" id="1">
					<include>VideoFullScreen_coords8</include>
					<visible>!Window.IsVisible(VideoBookmarks)</visible>
					<visible>[player.forwarding | player.rewinding | player.istempo | Player.DisplayAfterSeek] + !Player.HasGame + !Player.Seeking | player.paused</visible>
					<include>OSDVisibleHiddenAnimation</include>

					<!-- Background -->
					<control type="image" id="1">
						<include>VideoFullScreen_coords8</include>
						<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
					</control>

					<!-- Status -->
					<control type="label" id="1">
						<include>VideoFullScreen_coords8</include>
						<font>Font36-bold</font>
						<align>center</align>
						<label>$VAR[PlayerStatus]</label>
						<textcolor>$VAR[TextColor2]</textcolor>
						<visible>player.forwarding | player.rewinding | player.istempo</visible>
						<include>VisibleFadeAnimation</include>
					</control>

					<!-- Pause -->
					<control type="image" id="1">
						<include>VideoFullScreen_coords9</include>
						<texture colordiffuse="$VAR[DialogColor1]">osd/OSDPauseNF.png</texture>
						<visible>player.paused</visible>
						<include>VisibleFadeAnimation</include>
					</control>
					
					<!-- Play after seek -->
					<control type="image" id="1">
						<include>VideoFullScreen_coords9</include>
						<texture colordiffuse="$VAR[DialogColor1]">osd/OSDPlayNF.png</texture>
						<visible>Player.DisplayAfterSeek + ![Player.Paused | player.forwarding | player.rewinding | player.istempo]</visible>
						<include>VisibleFadeAnimation</include>
					</control>

				</control>
				
				<!-- Player skipping -->
				<control type="group" id="1">
					<include>VideoFullScreen_coords10</include>
					<visible>[Integer.IsGreater(Player.ChapterCount,0) | !String.IsEmpty(Player.SeekStepSize) | !String.IsEmpty(Player.SeekNumeric)] + !Player.HasGame</visible>
					<visible>!Window.IsVisible(visualisation) + !Window.IsVisible(VideoBookmarks)</visible>
					<include>OSDVisibleHiddenAnimation</include>

					<!-- Background -->
					<control type="image" id="1">
						<include>VideoFullScreen_coords8</include>
						<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
					</control>

					<!-- Status -->
					<control type="label" id="1">
						<include>VideoFullScreen_coords8</include>
						<font>Font27-bold</font>
						<align>center</align>
						<label>$INFO[Player.Chapter,(,/]$INFO[Player.ChapterCount,,)]</label>
						<textcolor>$VAR[TextColor2]</textcolor>
						<visible>Integer.IsGreater(Player.ChapterCount,0) + String.IsEmpty(Player.SeekStepSize) + [String.IsEmpty(Player.SeekNumeric) | !String.IsEmpty(Player.SeekNumeric) + Window.IsVisible(fullscreeninfo)]</visible>
						<include>VisibleFadeAnimation</include>
					</control>

					<!-- Status -->
					<control type="label" id="1">
						<include>VideoFullScreen_coords8</include>
						<font>Font27</font>
						<align>center</align>
						<label>$INFO[Player.SeekStepSize]</label>
						<textcolor>$VAR[TextColor2]</textcolor>
						<visible>!String.IsEmpty(Player.SeekStepSize) + String.IsEmpty(Player.SeekNumeric)</visible>
						<include>VisibleFadeAnimation</include>
					</control>
					
					<!-- Status -->
					<control type="label" id="1">
						<include>VideoFullScreen_coords8</include>
						<font>Font27-bold</font>
						<align>center</align>
						<label>$INFO[Player.SeekNumeric]</label>
						<textcolor>$VAR[TextColor2]</textcolor>
						<visible>!String.IsEmpty(Player.SeekNumeric) + !Window.IsVisible(fullscreeninfo)</visible>
						<include>VisibleFadeAnimation</include>
					</control>

				</control>


				<!-- Timeshift status -->
				<control type="group" id="1">
					<visible>!Window.IsVisible(VideoBookmarks)</visible>
					<visible>Pvr.IsTimeShift</visible>
					<include>VideoFullScreen_coords11</include>
					<animation effect="slide" end="155,0" time="200" condition="player.forwarding | player.rewinding | player.paused | player.istempo | Player.DisplayAfterSeek">Conditional</animation>
					<include>OSDVisibleHiddenAnimation</include>

					<control type="image" id="1">
						<include>VideoFullScreen_coords11</include>
						<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
					</control>
					
					<control type="group" id="1">
						<control type="image" id="1">
							<include>VideoFullScreen_coords12</include>
							<texture>osd/OSDTimeShift.png</texture>
						</control>
						
						<control type="label" id="1">
							<include>VideoFullScreen_coords13</include>
							<font>Font27</font>
							<align>center</align>
							<textcolor>$VAR[TextColor2]</textcolor>
							<label>$INFO[PVR.TimeshiftOffset,[B]-,[/B]] ($LOCALIZE[335]: $INFO[PVR.TimeShiftStart])</label>
						</control>
					</control>
				</control>
				
				<!-- Progress -->
				<control type="group" id="1">
					<include>VideoFullScreen_coords14</include>
					<include>OSDVisibleHiddenAnimation</include>

					<!-- Background -->
					<control type="image" id="1">
						<include>VideoFullScreen_coords15</include>
						<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
						<visible>Pvr.IsPlayingTv + VideoPlayer.HasEpg | !Pvr.IsPlayingTv + Integer.IsGreater(Player.Duration,0)</visible>
						<include>VisibleFadeAnimation</include>
					</control>
					<control type="image" id="1">
						<include>VideoFullScreen_coords16</include>
						<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
						<visible>!Pvr.IsPlayingTv + !Integer.IsGreater(Player.Duration,0) | !VideoPlayer.HasEpg + Pvr.IsPlayingTv</visible>
						<include>VisibleFadeAnimation</include>
					</control>
					<control type="image" id="1">
						<include>VideoFullScreen_coords17</include>
						<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
						<visible>!Pvr.IsPlayingTv + !Integer.IsGreater(Player.Duration,0) | !VideoPlayer.HasEpg + Pvr.IsPlayingTv</visible>
						<include>VisibleFadeAnimation</include>
					</control>

					<!--  Current position/Time remaining -->
					<control type="label" id="1">
						<include>VideoFullScreen_coords18</include>
						<font>Font27</font>
						<textcolor>$VAR[TextColor2]</textcolor>
						<label>$INFO[Player.Time]$INFO[Player.Duration, / ,]</label>
						<visible>!Pvr.IsPlayingTv + Integer.IsGreater(Player.Duration,0)</visible>
						<include>VisibleFadeAnimation</include>
					</control>
					<control type="label" id="1">
						<include>VideoFullScreen_coords19</include>
						<font>Font27</font>
						<align>center</align>
						<textcolor>$VAR[TextColor2]</textcolor>
						<label>$INFO[Player.Time]</label>
						<visible>!Pvr.IsPlayingTv + !Integer.IsGreater(Player.Duration,0) | !VideoPlayer.HasEpg + Pvr.IsPlayingTv</visible>
						<include>VisibleFadeAnimation</include>
					</control>
					
					<!--  PVR current position/Time remaining -->
					<control type="label" id="1">
						<include>VideoFullScreen_coords18</include>
						<font>Font27</font>
						<textcolor>$VAR[TextColor2]</textcolor>
						<label>$INFO[PVR.EpgEventElapsedTime]$INFO[PVR.EpgEventDuration, / ,]</label>
						<visible>Pvr.IsPlayingTv + VideoPlayer.HasEpg</visible>
						<include>VisibleFadeAnimation</include>
					</control>

					<!--  Progress bar -->
					<control type="progress" id="1">
						<include>VideoFullScreen_coords20</include>
						<info>Player.Progress</info>
						<texturebg border="2" colordiffuse="$VAR[DialogColor2]">osd/OSDProgressBack.png</texturebg>
						<lefttexture></lefttexture>
						<midtexture border="2" colordiffuse="$VAR[DialogColor1]">osd/OSDProgressBar.png</midtexture>
						<righttexture></righttexture>
						<overlaytexture></overlaytexture>
						<visible>!Pvr.IsPlayingTv + Integer.IsGreater(Player.Duration,0)</visible>
						<include>VisibleFadeAnimation</include>
					</control>
					
					<!--  PVR progress bar -->
					<control type="progress" id="1">
						<include>VideoFullScreen_coords20</include>
						<info>PVR.EpgEventProgress</info>
						<texturebg border="2" colordiffuse="$VAR[DialogColor2]">osd/OSDProgressBack.png</texturebg>
						<lefttexture></lefttexture>
						<midtexture border="2" colordiffuse="$VAR[DialogColor1]">osd/OSDProgressBar.png</midtexture>
						<righttexture></righttexture>
						<overlaytexture></overlaytexture>
						<visible>Pvr.IsPlayingTv + VideoPlayer.HasEpg</visible>
						<include>VisibleFadeAnimation</include>
					</control>

					<!--  Cache bar -->
					<control type="progress" id="1">
						<include>VideoFullScreen_coords20</include>
						<info>Player.ProgressCache</info>
						<texturebg colordiffuse="$VAR[DialogColor2]" border="2">osd/OSDProgressBack.png</texturebg>
						<lefttexture></lefttexture>
						<midtexture colordiffuse="OSDCache" border="2">osd/OSDProgressBar.png</midtexture>
						<righttexture></righttexture>
						<overlaytexture></overlaytexture>
						<visible>!Pvr.IsTimeShift + Pvr.IsPlayingTv + VideoPlayer.HasEpg | Integer.IsGreater(Player.Duration,0) + !Pvr.IsPlayingTv</visible>
						<include>VisibleFadeAnimation</include>
					</control>

					<!-- Current Time/End Time -->
					<control type="label" id="1">
						<include>VideoFullScreen_coords21</include>
						<align>right</align>
						<font>Font27</font>
						<textcolor>$VAR[TextColor2]</textcolor>
						<label>$INFO[System.Time,$LOCALIZE[142] ,]$INFO[Player.FinishTime, / $LOCALIZE[19081] ,]</label>
						<visible>!Pvr.IsPlayingTv + Integer.IsGreater(Player.Duration,0)</visible>
						<include>VisibleFadeAnimation</include>
					</control>
					<control type="label" id="1">
						<include>VideoFullScreen_coords22</include>
						<align>center</align>
						<font>Font27</font>
						<textcolor>$VAR[TextColor2]</textcolor>
						<label>$INFO[System.Time,$LOCALIZE[142] ,]</label>
						<visible>!Pvr.IsPlayingTv + !Integer.IsGreater(Player.Duration,0) | !VideoPlayer.HasEpg + Pvr.IsPlayingTv</visible>
						<include>VisibleFadeAnimation</include>
					</control>
					
					<!-- PVR current Time/End Time -->
					<control type="label" id="1">
						<include>VideoFullScreen_coords21</include>
						<align>right</align>
						<font>Font27</font>
						<textcolor>$VAR[TextColor2]</textcolor>
						<label>$INFO[System.Time,$LOCALIZE[142] ,]$INFO[PVR.EpgEventFinishTime, / $LOCALIZE[19081] ,]</label>
						<visible>Pvr.IsPlayingTv + VideoPlayer.HasEpg</visible>
						<include>VisibleFadeAnimation</include>
					</control>

				</control>
			</control>
			
			<!-- Info -->
			<control type="group" id="1">
				<include>VideoFullScreen_coords23</include>
				<visible>Window.IsVisible(fullscreeninfo) | Player.ShowInfo | !String.IsEmpty(Window(12005).Property(videoinfostart)) | [!Pvr.IsPlayingTv + [[Integer.IsLessOrEqual(Player.TimeRemaining(secs),20) + [VideoPlayer.Content(movies) + Skin.HasSetting(videoinfoendmovie) | VideoPlayer.Content(episodes) + Skin.HasSetting(videoinfoendtvshow) | VideoPlayer.Content(musicvideos) + Skin.HasSetting(videoinfoendmusicvideo) | VideoPlayer.Content(files) + Skin.HasSetting(videoinfoendfiles)] + Skin.HasSetting(videoinfoend) + String.IsEqual(Skin.String(videoinfoendduration),20s)] | [Integer.IsLessOrEqual(Player.TimeRemaining(secs),15) + [VideoPlayer.Content(movies) + Skin.HasSetting(videoinfoendmovie) | VideoPlayer.Content(episodes) + Skin.HasSetting(videoinfoendtvshow) | VideoPlayer.Content(musicvideos) + Skin.HasSetting(videoinfoendmusicvideo) | VideoPlayer.Content(files) + Skin.HasSetting(videoinfoendfiles)] + Skin.HasSetting(videoinfoend) + String.IsEqual(Skin.String(videoinfoendduration),15s)] | [Integer.IsLessOrEqual(Player.TimeRemaining(secs),10) + [VideoPlayer.Content(movies) + Skin.HasSetting(videoinfoendmovie) | VideoPlayer.Content(episodes) + Skin.HasSetting(videoinfoendtvshow) | VideoPlayer.Content(musicvideos) + Skin.HasSetting(videoinfoendmusicvideo) | VideoPlayer.Content(files) + Skin.HasSetting(videoinfoendfiles)] + Skin.HasSetting(videoinfoend) + String.IsEqual(Skin.String(videoinfoendduration),10s)] | [Integer.IsLessOrEqual(Player.TimeRemaining(secs),5) + [VideoPlayer.Content(movies) + Skin.HasSetting(videoinfoendmovie) | VideoPlayer.Content(episodes) + Skin.HasSetting(videoinfoendtvshow) | VideoPlayer.Content(musicvideos) + Skin.HasSetting(videoinfoendmusicvideo) | VideoPlayer.Content(files) + Skin.HasSetting(videoinfoendfiles)] + Skin.HasSetting(videoinfoend) + String.IsEqual(Skin.String(videoinfoendduration),5s)] | [Integer.IsLessOrEqual(Player.Time(secs),20) + [VideoPlayer.Content(movies) + Skin.HasSetting(videoinfostartmovies) | VideoPlayer.Content(episodes) + Skin.HasSetting(videoinfostarttvshow) | VideoPlayer.Content(musicvideos) + Skin.HasSetting(videoinfostartmusicvideo) | Pvr.IsPlayingTv + Skin.HasSetting(videoinfostartlivetv) | VideoPlayer.Content(files) + Skin.HasSetting(videoinfostartfiles)] + Skin.HasSetting(videoinfostart) + String.IsEqual(Skin.String(videoinfostartduration),20s)] | [Integer.IsLessOrEqual(Player.Time(secs),15) + [VideoPlayer.Content(movies) + Skin.HasSetting(videoinfostartmovies) | VideoPlayer.Content(episodes) + Skin.HasSetting(videoinfostarttvshow) | VideoPlayer.Content(musicvideos) + Skin.HasSetting(videoinfostartmusicvideo) | Pvr.IsPlayingTv + Skin.HasSetting(videoinfostartlivetv) | VideoPlayer.Content(files) + Skin.HasSetting(videoinfostartfiles)] + Skin.HasSetting(videoinfostart) + String.IsEqual(Skin.String(videoinfostartduration),15s)] | [Integer.IsLessOrEqual(Player.Time(secs),10) + [VideoPlayer.Content(movies) + Skin.HasSetting(videoinfostartmovies) | VideoPlayer.Content(episodes) + Skin.HasSetting(videoinfostarttvshow) | VideoPlayer.Content(musicvideos) + Skin.HasSetting(videoinfostartmusicvideo) | Pvr.IsPlayingTv + Skin.HasSetting(videoinfostartlivetv) | VideoPlayer.Content(files) + Skin.HasSetting(videoinfostartfiles)] + Skin.HasSetting(videoinfostart) + String.IsEqual(Skin.String(videoinfostartduration),10s)] | [Integer.IsLessOrEqual(Player.Time(secs),5) + [VideoPlayer.Content(movies) + Skin.HasSetting(videoinfostartmovies) | VideoPlayer.Content(episodes) + Skin.HasSetting(videoinfostarttvshow) | VideoPlayer.Content(musicvideos) + Skin.HasSetting(videoinfostartmusicvideo) | Pvr.IsPlayingTv + Skin.HasSetting(videoinfostartlivetv) | VideoPlayer.Content(files) + Skin.HasSetting(videoinfostartfiles)] + Skin.HasSetting(videoinfostart) + String.IsEqual(Skin.String(videoinfostartduration),5s)]]]</visible>
				<visible>!Window.IsVisible(playerprocessinfo) + !Window.IsVisible(DialogSettings.xml) + !Window.IsVisible(PVRChannelGuide) + !Window.IsVisible(pvrosdchannels) + !Window.IsVisible(teletext) + !Window.IsVisible(DialogSelect.xml) + !Window.IsVisible(DialogPVRInfo.xml) + !Window.IsVisible(shutdownmenu) + !Window.IsVisible(1105) + String.IsEmpty(Window(home).Property(service.upnext.dialog))</visible>
				<include>OSDVisibleHiddenAnimation</include>

				<!-- Background -->
				<control type="image" id="1">
					<include>VideoFullScreen_coords23</include>
					<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
				</control>

				<!-- Title -->
				<control type="fadelabel" id="1">
					<include>VideoFullScreen_coords24</include>
					<font>Font33</font>
					<textcolor>$VAR[TextColor1]</textcolor>
					<label>$VAR[VideoPlayerTitle]</label>
					<visible>!Pvr.IsPlayingTv | !VideoPlayer.HasEpg + Pvr.IsPlayingTv</visible>
					<include>VisibleFadeAnimation</include>
				</control>
				
				<!-- Live TV Title -->
				<control type="fadelabel" id="1">
					<include>VideoFullScreen_coords25</include>
					<font>Font33</font>
					<textcolor>$VAR[TextColor1]</textcolor>
					<label>$VAR[VideoPlayerTitle]</label>
					<visible>Pvr.IsPlayingTv + VideoPlayer.HasEpg</visible>
					<include>VisibleFadeAnimation</include>
				</control>

				<!-- Live TV Channel -->
				<control type="fadelabel" id="1">
					<include>VideoFullScreen_coords26</include>
					<font>Font33-bold</font>
					<align>right</align>
					<textcolor>$VAR[TextColor1]</textcolor>
					<label>$VAR[VideoPlayerChannelNumber]</label>
					<visible>Pvr.IsPlayingTv + VideoPlayer.HasEpg</visible>
					<include>VisibleFadeAnimation</include>
				</control>

				<!-- Plot -->
				<control type="group" id="1">
					<include>VideoFullScreen_coords27</include>
					<visible>!VideoPlayer.Content(musicvideos)</visible>
					
					<control type="textbox" id="1">
						<font>Font27-light</font>
						<label>$VAR[VideoPlayerPlot]</label>
						<textcolor>$VAR[TextColor1]</textcolor>
						<autoscroll delay="8000" time="1800" repeat="10000">true</autoscroll>
						<visible>Skin.String(PlotFont,S) | Skin.String(PlotFont,S light)</visible>
					</control>
					
					<control type="textbox" id="1">
						<font>Font30-light</font>
						<label>$VAR[VideoPlayerPlot]</label>
						<textcolor>$VAR[TextColor1]</textcolor>
						<autoscroll delay="8000" time="1700" repeat="10000">true</autoscroll>
						<visible>Skin.String(PlotFont,M) | Skin.String(PlotFont,M light)</visible>
					</control>
					
					<control type="textbox" id="1">
						<font>Font33-light</font>
						<label>$VAR[VideoPlayerPlot]</label>
						<textcolor>$VAR[TextColor1]</textcolor>
						<autoscroll delay="8000" time="1600" repeat="10000">true</autoscroll>
						<visible>Skin.String(PlotFont,L) | Skin.String(PlotFont,XL) | Skin.String(PlotFont,L light) | Skin.String(PlotFont,XL light)</visible>
					</control>
					
				</control>
				
				<!-- Music video information -->
				<control type="group" id="1">
					<include>VideoFullScreen_coords27</include>
					<visible>VideoPlayer.Content(musicvideos)</visible>
					
					<control type="grouplist" id="1">
						
						<!-- Artist + Album + Year -->
						<control type="fadelabel" id="1">
							<label>$INFO[VideoPlayer.Artist,[LIGHT],: [/LIGHT]]$INFO[VideoPlayer.Album]$INFO[VideoPlayer.Year,[LIGHT] (,)[/LIGHT]]</label>
							<visible>![String.IsEmpty(VideoPlayer.Album) + String.IsEmpty(VideoPlayer.Artist)]</visible>
							<include>VisibleFadeAnimation</include>
						</control>
						
						<!-- Genre -->
						<control type="fadelabel" id="1">
							<label>$INFO[VideoPlayer.Genre,[LIGHT],[/LIGHT]]</label>
							<visible>!String.IsEmpty(VideoPlayer.Genre)</visible>
							<include>VisibleFadeAnimation</include>
						</control>
						
					</control>

				</control>
				
				<!-- Audio/subtitle stream -->
				<control type="label" id="1">
					<include>VideoFullScreen_coords28</include>
					<font>Font27</font>
					<textcolor>$VAR[TextColor1]</textcolor>
					<label>$VAR[VideoPlayerAudioCodec,[LIGHT]$LOCALIZE[460]:[/LIGHT] , ]$VAR[VideoPlayerAudioChannels]$INFO[VideoPlayer.AudioLanguage, [CAPITALIZE](,)[/CAPITALIZE]]$VAR[SubtitleLanguage]</label>
					<visible>!VideoPlayer.Content(musicvideos)</visible>
				</control>
				
				<!-- Audio information -->
				<control type="label" id="1">
					<include>VideoFullScreen_coords28</include>
					<font>Font27</font>
					<textcolor>$VAR[TextColor1]</textcolor>
					<label>$VAR[VideoPlayerAudioCodec,[LIGHT],[/LIGHT]  ]$VAR[VideoPlayerAudioChannels,[LIGHT],[/LIGHT]  ]$INFO[Player.Process(AudioSamplerate),[LIGHT], kHz[/LIGHT]]</label>
					<visible>VideoPlayer.Content(musicvideos)</visible>
				</control>

				<!-- Icon -->
				<control type="image" id="1">
					<include>VideoFullScreen_coords29</include>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture background="true">$VAR[PlayerIcon]</texture>
					<visible>!VideoPlayer.Content(LiveTV)</visible>
				</control>
				<control type="image" id="1">
					<include>VideoFullScreen_coords29</include>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture background="true" fallback="DefaultLiveTV.png">$VAR[PlayerIcon]</texture>
					<visible>VideoPlayer.Content(LiveTV)</visible>
				</control>
				
				<!-- Live TV next information -->
				<control type="group" id="1">
					<include>VideoFullScreen_coords30</include>
					<visible>Pvr.IsPlayingTv + VideoPlayer.HasEpg + Window.IsVisible(fullscreeninfo)</visible>
					<include>OSDVisibleHiddenAnimation</include>
					
					<control type="image" id="1">
						<include>VideoFullScreen_coords31</include>
						<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
					</control>

					<control type="label" id="1">
						<include>VideoFullScreen_coords32</include>
						<label>$VAR[VideoPlayerNext]</label>
						<font>Font25</font>
					</control>

					<control type="label" id="1">
						<include>VideoFullScreen_coords33</include>
						<align>right</align>
						<font>Font33-light</font>
						<label>Press Select for details</label>
						<font>Font25</font>
					</control>

				</control>

			</control>
			
			<!-- PVR channel number input -->
			<control type="group" id="1">
				<include>VideoFullScreen_coords34</include>
				<visible>!String.IsEmpty(PVR.ChannelNumberInput)</visible>
				<include>OSDVisibleHiddenAnimation</include>
				
				<control type="image" id="1">
					<include>VideoFullScreen_coords35</include>
					<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
				</control>
				
				<control type="label" id="1">
					<include>VideoFullScreen_coords35</include>
					<label>$INFO[PVR.ChannelNumberInput]</label>
					<align>center</align>
					<font>Font72</font>
					<textcolor>$VAR[TextColor1]</textcolor>
					<aligny>center</aligny>
				</control>
				
			</control>
			
		</control>

		<!-- Scope masking bars -->
		<control type="image" id="1">
			<include>MaskingBars_coords1</include>
			<texture colordiffuse="FF000000">common/white.png</texture>
			<visible>False</visible>
			<animation effect="slide" end="0,287" time="200" condition="String.IsEqual(Skin.String(MaskingBars),1.78:1) + [!Skin.HasSetting(AutomaticMasking) | Skin.HasSetting(AutomaticMasking) + [!Player.HasVideo | !String.Contains(Player.FileName,-AR178-) + !String.Contains(Player.FileName,-AR178.) + !String.Contains(Player.FileName,-AR178_) + !String.Contains(Player.FileName,.AR178-) + !String.Contains(Player.FileName,.AR178.) + !String.Contains(Player.FileName,.AR178_) + !String.Contains(Player.FileName,_AR178-) + !String.Contains(Player.FileName,_AR178.) + !String.Contains(Player.FileName,_AR178_) + !String.Contains(Player.FileName,-AR200-) + !String.Contains(Player.FileName,-AR200.) + !String.Contains(Player.FileName,-AR200_) + !String.Contains(Player.FileName,.AR200-) + !String.Contains(Player.FileName,.AR200.) + !String.Contains(Player.FileName,.AR200_) + !String.Contains(Player.FileName,_AR200-) + !String.Contains(Player.FileName,_AR200.) + !String.Contains(Player.FileName,_AR200_) + !String.Contains(Player.FileName,-AR233-) + !String.Contains(Player.FileName,-AR233.) + !String.Contains(Player.FileName,-AR233_) + !String.Contains(Player.FileName,.AR233-) + !String.Contains(Player.FileName,.AR233.) + !String.Contains(Player.FileName,.AR233_) + !String.Contains(Player.FileName,_AR233-) + !String.Contains(Player.FileName,_AR233.) + !String.Contains(Player.FileName,_AR233_) + !String.Contains(Player.FileName,-AR235-) + !String.Contains(Player.FileName,-AR235.) + !String.Contains(Player.FileName,-AR235_) + !String.Contains(Player.FileName,.AR235-) + !String.Contains(Player.FileName,.AR235.) + !String.Contains(Player.FileName,.AR235_) + !String.Contains(Player.FileName,_AR235-) + !String.Contains(Player.FileName,_AR235.) + !String.Contains(Player.FileName,_AR235_) + !String.Contains(Player.FileName,-AR240-) + !String.Contains(Player.FileName,-AR240.) + !String.Contains(Player.FileName,-AR240_) + !String.Contains(Player.FileName,.AR240-) + !String.Contains(Player.FileName,.AR240.) + !String.Contains(Player.FileName,.AR240_) + !String.Contains(Player.FileName,_AR240-) + !String.Contains(Player.FileName,_AR240.) + !String.Contains(Player.FileName,_AR240_)]] | Skin.HasSetting(AutomaticMasking) + Player.HasVideo + [String.Contains(Player.FileName,-AR178-) | String.Contains(Player.FileName,-AR178.) | String.Contains(Player.FileName,-AR178_) | String.Contains(Player.FileName,.AR178-) | String.Contains(Player.FileName,.AR178.) | String.Contains(Player.FileName,.AR178_) | String.Contains(Player.FileName,_AR178-) | String.Contains(Player.FileName,_AR178.) | String.Contains(Player.FileName,_AR178_)]">Conditional</animation>
			<animation effect="slide" end="0,12" time="200" condition="String.IsEqual(Skin.String(MaskingBars),2.35:1) + [!Skin.HasSetting(AutomaticMasking) | Skin.HasSetting(AutomaticMasking) + [!Player.HasVideo | !String.Contains(Player.FileName,-AR178-) + !String.Contains(Player.FileName,-AR178.) + !String.Contains(Player.FileName,-AR178_) + !String.Contains(Player.FileName,.AR178-) + !String.Contains(Player.FileName,.AR178.) + !String.Contains(Player.FileName,.AR178_) + !String.Contains(Player.FileName,_AR178-) + !String.Contains(Player.FileName,_AR178.) + !String.Contains(Player.FileName,_AR178_) + !String.Contains(Player.FileName,-AR200-) + !String.Contains(Player.FileName,-AR200.) + !String.Contains(Player.FileName,-AR200_) + !String.Contains(Player.FileName,.AR200-) + !String.Contains(Player.FileName,.AR200.) + !String.Contains(Player.FileName,.AR200_) + !String.Contains(Player.FileName,_AR200-) + !String.Contains(Player.FileName,_AR200.) + !String.Contains(Player.FileName,_AR200_) + !String.Contains(Player.FileName,-AR233-) + !String.Contains(Player.FileName,-AR233.) + !String.Contains(Player.FileName,-AR233_) + !String.Contains(Player.FileName,.AR233-) + !String.Contains(Player.FileName,.AR233.) + !String.Contains(Player.FileName,.AR233_) + !String.Contains(Player.FileName,_AR233-) + !String.Contains(Player.FileName,_AR233.) + !String.Contains(Player.FileName,_AR233_) + !String.Contains(Player.FileName,-AR235-) + !String.Contains(Player.FileName,-AR235.) + !String.Contains(Player.FileName,-AR235_) + !String.Contains(Player.FileName,.AR235-) + !String.Contains(Player.FileName,.AR235.) + !String.Contains(Player.FileName,.AR235_) + !String.Contains(Player.FileName,_AR235-) + !String.Contains(Player.FileName,_AR235.) + !String.Contains(Player.FileName,_AR235_) + !String.Contains(Player.FileName,-AR240-) + !String.Contains(Player.FileName,-AR240.) + !String.Contains(Player.FileName,-AR240_) + !String.Contains(Player.FileName,.AR240-) + !String.Contains(Player.FileName,.AR240.) + !String.Contains(Player.FileName,.AR240_) + !String.Contains(Player.FileName,_AR240-) + !String.Contains(Player.FileName,_AR240.) + !String.Contains(Player.FileName,_AR240_)]] | Skin.HasSetting(AutomaticMasking) + Player.HasVideo + [String.Contains(Player.FileName,-AR235-) | String.Contains(Player.FileName,-AR235.) | String.Contains(Player.FileName,-AR235_) | String.Contains(Player.FileName,.AR235-) | String.Contains(Player.FileName,.AR235.) | String.Contains(Player.FileName,.AR235_) | String.Contains(Player.FileName,_AR235-) | String.Contains(Player.FileName,_AR235.) | String.Contains(Player.FileName,_AR235_)]">Conditional</animation>
			<animation effect="slide" end="0,17" time="200" condition="String.IsEqual(Skin.String(MaskingBars),2.33:1) + [!Skin.HasSetting(AutomaticMasking) | Skin.HasSetting(AutomaticMasking) + [!Player.HasVideo | !String.Contains(Player.FileName,-AR178-) + !String.Contains(Player.FileName,-AR178.) + !String.Contains(Player.FileName,-AR178_) + !String.Contains(Player.FileName,.AR178-) + !String.Contains(Player.FileName,.AR178.) + !String.Contains(Player.FileName,.AR178_) + !String.Contains(Player.FileName,_AR178-) + !String.Contains(Player.FileName,_AR178.) + !String.Contains(Player.FileName,_AR178_) + !String.Contains(Player.FileName,-AR200-) + !String.Contains(Player.FileName,-AR200.) + !String.Contains(Player.FileName,-AR200_) + !String.Contains(Player.FileName,.AR200-) + !String.Contains(Player.FileName,.AR200.) + !String.Contains(Player.FileName,.AR200_) + !String.Contains(Player.FileName,_AR200-) + !String.Contains(Player.FileName,_AR200.) + !String.Contains(Player.FileName,_AR200_) + !String.Contains(Player.FileName,-AR233-) + !String.Contains(Player.FileName,-AR233.) + !String.Contains(Player.FileName,-AR233_) + !String.Contains(Player.FileName,.AR233-) + !String.Contains(Player.FileName,.AR233.) + !String.Contains(Player.FileName,.AR233_) + !String.Contains(Player.FileName,_AR233-) + !String.Contains(Player.FileName,_AR233.) + !String.Contains(Player.FileName,_AR233_) + !String.Contains(Player.FileName,-AR235-) + !String.Contains(Player.FileName,-AR235.) + !String.Contains(Player.FileName,-AR235_) + !String.Contains(Player.FileName,.AR235-) + !String.Contains(Player.FileName,.AR235.) + !String.Contains(Player.FileName,.AR235_) + !String.Contains(Player.FileName,_AR235-) + !String.Contains(Player.FileName,_AR235.) + !String.Contains(Player.FileName,_AR235_) + !String.Contains(Player.FileName,-AR240-) + !String.Contains(Player.FileName,-AR240.) + !String.Contains(Player.FileName,-AR240_) + !String.Contains(Player.FileName,.AR240-) + !String.Contains(Player.FileName,.AR240.) + !String.Contains(Player.FileName,.AR240_) + !String.Contains(Player.FileName,_AR240-) + !String.Contains(Player.FileName,_AR240.) + !String.Contains(Player.FileName,_AR240_)]] | Skin.HasSetting(AutomaticMasking) + Player.HasVideo + [String.Contains(Player.FileName,-AR233-) | String.Contains(Player.FileName,-AR233.) | String.Contains(Player.FileName,-AR233_) | String.Contains(Player.FileName,.AR233-) | String.Contains(Player.FileName,.AR233.) | String.Contains(Player.FileName,.AR233_) | String.Contains(Player.FileName,_AR233-) | String.Contains(Player.FileName,_AR233.) | String.Contains(Player.FileName,_AR233_)]">Conditional</animation>
			<animation effect="slide" end="0,107" time="200" condition="String.IsEqual(Skin.String(MaskingBars),2.00:1) + [!Skin.HasSetting(AutomaticMasking) | Skin.HasSetting(AutomaticMasking) + [!Player.HasVideo | !String.Contains(Player.FileName,-AR178-) + !String.Contains(Player.FileName,-AR178.) + !String.Contains(Player.FileName,-AR178_) + !String.Contains(Player.FileName,.AR178-) + !String.Contains(Player.FileName,.AR178.) + !String.Contains(Player.FileName,.AR178_) + !String.Contains(Player.FileName,_AR178-) + !String.Contains(Player.FileName,_AR178.) + !String.Contains(Player.FileName,_AR178_) + !String.Contains(Player.FileName,-AR200-) + !String.Contains(Player.FileName,-AR200.) + !String.Contains(Player.FileName,-AR200_) + !String.Contains(Player.FileName,.AR200-) + !String.Contains(Player.FileName,.AR200.) + !String.Contains(Player.FileName,.AR200_) + !String.Contains(Player.FileName,_AR200-) + !String.Contains(Player.FileName,_AR200.) + !String.Contains(Player.FileName,_AR200_) + !String.Contains(Player.FileName,-AR233-) + !String.Contains(Player.FileName,-AR233.) + !String.Contains(Player.FileName,-AR233_) + !String.Contains(Player.FileName,.AR233-) + !String.Contains(Player.FileName,.AR233.) + !String.Contains(Player.FileName,.AR233_) + !String.Contains(Player.FileName,_AR233-) + !String.Contains(Player.FileName,_AR233.) + !String.Contains(Player.FileName,_AR233_) + !String.Contains(Player.FileName,-AR235-) + !String.Contains(Player.FileName,-AR235.) + !String.Contains(Player.FileName,-AR235_) + !String.Contains(Player.FileName,.AR235-) + !String.Contains(Player.FileName,.AR235.) + !String.Contains(Player.FileName,.AR235_) + !String.Contains(Player.FileName,_AR235-) + !String.Contains(Player.FileName,_AR235.) + !String.Contains(Player.FileName,_AR235_) + !String.Contains(Player.FileName,-AR240-) + !String.Contains(Player.FileName,-AR240.) + !String.Contains(Player.FileName,-AR240_) + !String.Contains(Player.FileName,.AR240-) + !String.Contains(Player.FileName,.AR240.) + !String.Contains(Player.FileName,.AR240_) + !String.Contains(Player.FileName,_AR240-) + !String.Contains(Player.FileName,_AR240.) + !String.Contains(Player.FileName,_AR240_)]] | Skin.HasSetting(AutomaticMasking) + Player.HasVideo + [String.Contains(Player.FileName,-AR200-) | String.Contains(Player.FileName,-AR200.) | String.Contains(Player.FileName,-AR200_) | String.Contains(Player.FileName,.AR200-) | String.Contains(Player.FileName,.AR200.) | String.Contains(Player.FileName,.AR200_) | String.Contains(Player.FileName,_AR200-) | String.Contains(Player.FileName,_AR200.) | String.Contains(Player.FileName,_AR200_)]">Conditional</animation>
			<include>WindowDepth</include>
		</control>
		<control type="image" id="1">
			<include>MaskingBars_coords2</include>
			<texture colordiffuse="FF000000">common/white.png</texture>
			<visible>False</visible>
			<animation effect="slide" end="0,-287" time="200" condition="String.IsEqual(Skin.String(MaskingBars),1.78:1) + [!Skin.HasSetting(AutomaticMasking) | Skin.HasSetting(AutomaticMasking) + [!Player.HasVideo | !String.Contains(Player.FileName,-AR178-) + !String.Contains(Player.FileName,-AR178.) + !String.Contains(Player.FileName,-AR178_) + !String.Contains(Player.FileName,.AR178-) + !String.Contains(Player.FileName,.AR178.) + !String.Contains(Player.FileName,.AR178_) + !String.Contains(Player.FileName,_AR178-) + !String.Contains(Player.FileName,_AR178.) + !String.Contains(Player.FileName,_AR178_) + !String.Contains(Player.FileName,-AR200-) + !String.Contains(Player.FileName,-AR200.) + !String.Contains(Player.FileName,-AR200_) + !String.Contains(Player.FileName,.AR200-) + !String.Contains(Player.FileName,.AR200.) + !String.Contains(Player.FileName,.AR200_) + !String.Contains(Player.FileName,_AR200-) + !String.Contains(Player.FileName,_AR200.) + !String.Contains(Player.FileName,_AR200_) + !String.Contains(Player.FileName,-AR233-) + !String.Contains(Player.FileName,-AR233.) + !String.Contains(Player.FileName,-AR233_) + !String.Contains(Player.FileName,.AR233-) + !String.Contains(Player.FileName,.AR233.) + !String.Contains(Player.FileName,.AR233_) + !String.Contains(Player.FileName,_AR233-) + !String.Contains(Player.FileName,_AR233.) + !String.Contains(Player.FileName,_AR233_) + !String.Contains(Player.FileName,-AR235-) + !String.Contains(Player.FileName,-AR235.) + !String.Contains(Player.FileName,-AR235_) + !String.Contains(Player.FileName,.AR235-) + !String.Contains(Player.FileName,.AR235.) + !String.Contains(Player.FileName,.AR235_) + !String.Contains(Player.FileName,_AR235-) + !String.Contains(Player.FileName,_AR235.) + !String.Contains(Player.FileName,_AR235_) + !String.Contains(Player.FileName,-AR240-) + !String.Contains(Player.FileName,-AR240.) + !String.Contains(Player.FileName,-AR240_) + !String.Contains(Player.FileName,.AR240-) + !String.Contains(Player.FileName,.AR240.) + !String.Contains(Player.FileName,.AR240_) + !String.Contains(Player.FileName,_AR240-) + !String.Contains(Player.FileName,_AR240.) + !String.Contains(Player.FileName,_AR240_)]] | Skin.HasSetting(AutomaticMasking) + Player.HasVideo + [String.Contains(Player.FileName,-AR178-) | String.Contains(Player.FileName,-AR178.) | String.Contains(Player.FileName,-AR178_) | String.Contains(Player.FileName,.AR178-) | String.Contains(Player.FileName,.AR178.) | String.Contains(Player.FileName,.AR178_) | String.Contains(Player.FileName,_AR178-) | String.Contains(Player.FileName,_AR178.) | String.Contains(Player.FileName,_AR178_)]">Conditional</animation>
			<animation effect="slide" end="0,-12" time="200" condition="String.IsEqual(Skin.String(MaskingBars),2.35:1) + [!Skin.HasSetting(AutomaticMasking) | Skin.HasSetting(AutomaticMasking) + [!Player.HasVideo | !String.Contains(Player.FileName,-AR178-) + !String.Contains(Player.FileName,-AR178.) + !String.Contains(Player.FileName,-AR178_) + !String.Contains(Player.FileName,.AR178-) + !String.Contains(Player.FileName,.AR178.) + !String.Contains(Player.FileName,.AR178_) + !String.Contains(Player.FileName,_AR178-) + !String.Contains(Player.FileName,_AR178.) + !String.Contains(Player.FileName,_AR178_) + !String.Contains(Player.FileName,-AR200-) + !String.Contains(Player.FileName,-AR200.) + !String.Contains(Player.FileName,-AR200_) + !String.Contains(Player.FileName,.AR200-) + !String.Contains(Player.FileName,.AR200.) + !String.Contains(Player.FileName,.AR200_) + !String.Contains(Player.FileName,_AR200-) + !String.Contains(Player.FileName,_AR200.) + !String.Contains(Player.FileName,_AR200_) + !String.Contains(Player.FileName,-AR233-) + !String.Contains(Player.FileName,-AR233.) + !String.Contains(Player.FileName,-AR233_) + !String.Contains(Player.FileName,.AR233-) + !String.Contains(Player.FileName,.AR233.) + !String.Contains(Player.FileName,.AR233_) + !String.Contains(Player.FileName,_AR233-) + !String.Contains(Player.FileName,_AR233.) + !String.Contains(Player.FileName,_AR233_) + !String.Contains(Player.FileName,-AR235-) + !String.Contains(Player.FileName,-AR235.) + !String.Contains(Player.FileName,-AR235_) + !String.Contains(Player.FileName,.AR235-) + !String.Contains(Player.FileName,.AR235.) + !String.Contains(Player.FileName,.AR235_) + !String.Contains(Player.FileName,_AR235-) + !String.Contains(Player.FileName,_AR235.) + !String.Contains(Player.FileName,_AR235_) + !String.Contains(Player.FileName,-AR240-) + !String.Contains(Player.FileName,-AR240.) + !String.Contains(Player.FileName,-AR240_) + !String.Contains(Player.FileName,.AR240-) + !String.Contains(Player.FileName,.AR240.) + !String.Contains(Player.FileName,.AR240_) + !String.Contains(Player.FileName,_AR240-) + !String.Contains(Player.FileName,_AR240.) + !String.Contains(Player.FileName,_AR240_)]] | Skin.HasSetting(AutomaticMasking) + Player.HasVideo + [String.Contains(Player.FileName,-AR235-) | String.Contains(Player.FileName,-AR235.) | String.Contains(Player.FileName,-AR235_) | String.Contains(Player.FileName,.AR235-) | String.Contains(Player.FileName,.AR235.) | String.Contains(Player.FileName,.AR235_) | String.Contains(Player.FileName,_AR235-) | String.Contains(Player.FileName,_AR235.) | String.Contains(Player.FileName,_AR235_)]">Conditional</animation>
			<animation effect="slide" end="0,-17" time="200" condition="String.IsEqual(Skin.String(MaskingBars),2.33:1) + [!Skin.HasSetting(AutomaticMasking) | Skin.HasSetting(AutomaticMasking) + [!Player.HasVideo | !String.Contains(Player.FileName,-AR178-) + !String.Contains(Player.FileName,-AR178.) + !String.Contains(Player.FileName,-AR178_) + !String.Contains(Player.FileName,.AR178-) + !String.Contains(Player.FileName,.AR178.) + !String.Contains(Player.FileName,.AR178_) + !String.Contains(Player.FileName,_AR178-) + !String.Contains(Player.FileName,_AR178.) + !String.Contains(Player.FileName,_AR178_) + !String.Contains(Player.FileName,-AR200-) + !String.Contains(Player.FileName,-AR200.) + !String.Contains(Player.FileName,-AR200_) + !String.Contains(Player.FileName,.AR200-) + !String.Contains(Player.FileName,.AR200.) + !String.Contains(Player.FileName,.AR200_) + !String.Contains(Player.FileName,_AR200-) + !String.Contains(Player.FileName,_AR200.) + !String.Contains(Player.FileName,_AR200_) + !String.Contains(Player.FileName,-AR233-) + !String.Contains(Player.FileName,-AR233.) + !String.Contains(Player.FileName,-AR233_) + !String.Contains(Player.FileName,.AR233-) + !String.Contains(Player.FileName,.AR233.) + !String.Contains(Player.FileName,.AR233_) + !String.Contains(Player.FileName,_AR233-) + !String.Contains(Player.FileName,_AR233.) + !String.Contains(Player.FileName,_AR233_) + !String.Contains(Player.FileName,-AR235-) + !String.Contains(Player.FileName,-AR235.) + !String.Contains(Player.FileName,-AR235_) + !String.Contains(Player.FileName,.AR235-) + !String.Contains(Player.FileName,.AR235.) + !String.Contains(Player.FileName,.AR235_) + !String.Contains(Player.FileName,_AR235-) + !String.Contains(Player.FileName,_AR235.) + !String.Contains(Player.FileName,_AR235_) + !String.Contains(Player.FileName,-AR240-) + !String.Contains(Player.FileName,-AR240.) + !String.Contains(Player.FileName,-AR240_) + !String.Contains(Player.FileName,.AR240-) + !String.Contains(Player.FileName,.AR240.) + !String.Contains(Player.FileName,.AR240_) + !String.Contains(Player.FileName,_AR240-) + !String.Contains(Player.FileName,_AR240.) + !String.Contains(Player.FileName,_AR240_)]] | Skin.HasSetting(AutomaticMasking) + Player.HasVideo + [String.Contains(Player.FileName,-AR233-) | String.Contains(Player.FileName,-AR233.) | String.Contains(Player.FileName,-AR233_) | String.Contains(Player.FileName,.AR233-) | String.Contains(Player.FileName,.AR233.) | String.Contains(Player.FileName,.AR233_) | String.Contains(Player.FileName,_AR233-) | String.Contains(Player.FileName,_AR233.) | String.Contains(Player.FileName,_AR233_)]">Conditional</animation>
			<animation effect="slide" end="0,-107" time="200" condition="String.IsEqual(Skin.String(MaskingBars),2.00:1) + [!Skin.HasSetting(AutomaticMasking) | Skin.HasSetting(AutomaticMasking) + [!Player.HasVideo | !String.Contains(Player.FileName,-AR178-) + !String.Contains(Player.FileName,-AR178.) + !String.Contains(Player.FileName,-AR178_) + !String.Contains(Player.FileName,.AR178-) + !String.Contains(Player.FileName,.AR178.) + !String.Contains(Player.FileName,.AR178_) + !String.Contains(Player.FileName,_AR178-) + !String.Contains(Player.FileName,_AR178.) + !String.Contains(Player.FileName,_AR178_) + !String.Contains(Player.FileName,-AR200-) + !String.Contains(Player.FileName,-AR200.) + !String.Contains(Player.FileName,-AR200_) + !String.Contains(Player.FileName,.AR200-) + !String.Contains(Player.FileName,.AR200.) + !String.Contains(Player.FileName,.AR200_) + !String.Contains(Player.FileName,_AR200-) + !String.Contains(Player.FileName,_AR200.) + !String.Contains(Player.FileName,_AR200_) + !String.Contains(Player.FileName,-AR233-) + !String.Contains(Player.FileName,-AR233.) + !String.Contains(Player.FileName,-AR233_) + !String.Contains(Player.FileName,.AR233-) + !String.Contains(Player.FileName,.AR233.) + !String.Contains(Player.FileName,.AR233_) + !String.Contains(Player.FileName,_AR233-) + !String.Contains(Player.FileName,_AR233.) + !String.Contains(Player.FileName,_AR233_) + !String.Contains(Player.FileName,-AR235-) + !String.Contains(Player.FileName,-AR235.) + !String.Contains(Player.FileName,-AR235_) + !String.Contains(Player.FileName,.AR235-) + !String.Contains(Player.FileName,.AR235.) + !String.Contains(Player.FileName,.AR235_) + !String.Contains(Player.FileName,_AR235-) + !String.Contains(Player.FileName,_AR235.) + !String.Contains(Player.FileName,_AR235_) + !String.Contains(Player.FileName,-AR240-) + !String.Contains(Player.FileName,-AR240.) + !String.Contains(Player.FileName,-AR240_) + !String.Contains(Player.FileName,.AR240-) + !String.Contains(Player.FileName,.AR240.) + !String.Contains(Player.FileName,.AR240_) + !String.Contains(Player.FileName,_AR240-) + !String.Contains(Player.FileName,_AR240.) + !String.Contains(Player.FileName,_AR240_)]] | Skin.HasSetting(AutomaticMasking) + Player.HasVideo + [String.Contains(Player.FileName,-AR200-) | String.Contains(Player.FileName,-AR200.) | String.Contains(Player.FileName,-AR200_) | String.Contains(Player.FileName,.AR200-) | String.Contains(Player.FileName,.AR200.) | String.Contains(Player.FileName,.AR200_) | String.Contains(Player.FileName,_AR200-) | String.Contains(Player.FileName,_AR200.) | String.Contains(Player.FileName,_AR200_)]">Conditional</animation>
			<include>WindowDepth</include>
		</control>

	</controls>

</window>