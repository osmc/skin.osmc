<?xml version="1.0" encoding="UTF-8"?>
<includes>
	
	<!-- Animations -->
	
	<!-- Window animation -->
	<include name="WindowFadeAnimation">
		<animation effect="fade" start="0" end="100" time="200">WindowOpen</animation>
		<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
	</include>

	<!-- Visible animation -->
	<include name="VisibleFadeAnimation">
		<animation effect="fade" start="0" end="100" time="200">VisibleChange</animation>
	</include>
	
	<!-- Dialog animation -->
	<include name="DialogZoomAnimation">
		<animation type="WindowOpen">
			<effect type="zoom" start="70" end="100" center="auto" tween="back" easing="inout" time="300" />
			<effect type="fade" start="0" end="100" time="300" />
		</animation>
		<animation type="WindowClose">
			<effect type="zoom" start="100" end="70" center="auto" time="300" />
			<effect type="fade" start="100" end="0" time="300" />
		</animation>
	</include>

	<!-- Options animation -->
	<include name="OptionsAnimation">
		<animation type="Visible">
			<effect type="zoom" start="70" end="100" center="auto" tween="back" easing="inout" time="300" />
			<effect type="fade" start="0" end="100" time="150" delay="150" />
		</animation>
		<animation type="Hidden">
			<effect type="zoom" start="100" end="70" center="auto" time="300" />
			<effect type="fade" start="100" end="0" time="150" delay="150" />
		</animation>
	</include>

	<!-- OSD animations -->
	<include name="OSDOpenCloseAnimation">
		<animation type="WindowOpen">
			<effect type="zoom" start="90" end="100" center="auto" tween="back" easing="out" time="200" />
			<effect type="fade" start="0" end="100" time="200" />
		</animation>
		<animation type="WindowClose">
			<effect type="zoom" start="100" end="90" center="auto" easing="in" time="200" />
			<effect type="fade" start="100" end="0" time="200" />
		</animation>
	</include>
	
	<include name="OSDVisibleHiddenAnimation">
		<animation type="Visible">
			<effect type="zoom" start="90" end="100" center="auto" tween="back" easing="out" time="200" />
			<effect type="fade" start="0" end="100" time="200" />
		</animation>
		<animation type="Hidden">
			<effect type="zoom" start="100" end="90" center="auto" easing="in" time="200" />
			<effect type="fade" start="100" end="0" time="200" />
		</animation>
	</include>
	
	<!-- Nonfocus focused control animation -->
	<include name="NonFocusFadeAnimation">
		<animation effect="fade" start="100" end="50" time="200" tween="cubic" easing="out" reversible="false" condition="!Control.HasFocus($PARAM[id])">Conditional</animation>
	</include>
	
	<include name="NonFocusImageFadeAnimation">
		<animation effect="fade" start="100" end="50" condition="true">Conditional</animation>
	</include>
	
	<!-- Backgrounds -->

	<!-- Window background image -->
	<include name="WindowBackgroundImage">
		<!-- Black background image -->
		<control type="image">
			<include>FullscreenOverlayDimensions</include>
			<texture background="true">common/white.png</texture>
			<colordiffuse>FF000000</colordiffuse>
			<aspectratio>scale</aspectratio>
			<include>BackgroundDepth</include>
		</control>
		<!-- Background video -->
		<control type="videowindow">
			<include>FullscreenDimensions</include>
			<visible>Player.HasVideo + Skin.HasSetting(BackgroundVideo)</visible>
			<include>BackgroundDepth</include>
		</control>

		<!-- Color -->
		<control type="image">
			<include>FullscreenOverlayDimensions</include>
			<texture background="true">common/white.png</texture>
			<colordiffuse>$VAR[SolidBackgroundColor]</colordiffuse>
			<visible>![Player.HasVideo + Skin.HasSetting(BackgroundVideo)]</visible>
			<visible>String.IsEqual(Skin.String(BackgroundDefaultImage),no) + String.IsEqual(Skin.String(BackgroundSingleImage),solid)</visible>
			<aspectratio>scale</aspectratio>
			<animation effect="fade" start="0" end="100" time="200" delay="70">Visible</animation>
			<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
			<include>BackgroundDepth</include>
		</control>
		<!-- Single background image -->
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">$VAR[OSMCBackgroundImage]</texture>
			<visible>![Player.HasVideo + Skin.HasSetting(BackgroundVideo)]</visible>
			<visible>![Player.HasAudio + [!String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.ArtworkReady)) | !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image))] + [Skin.HasSetting(EnableArtistFanart) | Window.IsVisible(visualisation)]]</visible>
			<visible>[String.IsEqual(Skin.String(BackgroundDefaultImage),yes) | String.IsEqual(Skin.String(BackgroundSingleImage),yes) | String.IsEqual(Skin.String(BackgroundSingleImage),no) + String.IsEmpty(Skin.String(CustomBackgroundFolder))] + String.IsEmpty(Container(9000).ListItem.Property(background))</visible>
			<aspectratio>scale</aspectratio>
			<animation effect="fade" start="0" end="100" time="200" delay="70">Visible</animation>
			<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
			<include>BackgroundDepth</include>
		</control>
		<!-- Multiple background images -->
		<control type="multiimage">
			<include>FullscreenDimensions</include>
			<imagepath background="true">$VAR[OSMCBackgroundImage]</imagepath>
			<visible>![Player.HasVideo + Skin.HasSetting(BackgroundVideo)]</visible>
			<visible>![Player.HasAudio + [!String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.ArtworkReady)) | !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image))] + [Skin.HasSetting(EnableArtistFanart) | Window.IsVisible(visualisation)]]</visible>
			<visible>String.IsEqual(Skin.String(BackgroundSingleImage),no) + !String.IsEmpty(Skin.String(CustomBackgroundFolder)) + String.IsEmpty(Container(9000).ListItem.Property(background))</visible>
			<aspectratio>scale</aspectratio>
			<include>CustomBackgroundFolderDuration</include>
			<fadetime>2000</fadetime>
			<randomize>true</randomize>
			<loop>yes</loop>
			<animation effect="fade" start="0" end="100" time="200" delay="70">Visible</animation>
			<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
			<include>WindowFadeAnimation</include>
			<include>BackgroundDepth</include>
		</control>
		
		<!-- Single individual background image -->
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">$INFO[Container(9000).ListItem.Property(background)]</texture>
			<visible>![Player.HasVideo + Skin.HasSetting(BackgroundVideo)]</visible>
			<visible>![Player.HasAudio + [!String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.ArtworkReady)) | !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image))] + [Skin.HasSetting(EnableArtistFanart) | Window.IsVisible(visualisation)]]</visible>
			<visible>!String.IsEmpty(Container(9000).ListItem.Property(background)) + ![String.EndsWith(Container(9000).ListItem.Property(background),\) | String.EndsWith(Container(9000).ListItem.Property(background),/)] + Window.IsVisible(Home)</visible>
			<aspectratio>scale</aspectratio>
			<animation effect="fade" start="0" end="100" time="200" delay="70">Visible</animation>
			<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
			<include>WindowFadeAnimation</include>
			<include>BackgroundDepth</include>
		</control>
		<!-- Multiple individual background images -->
		<control type="multiimage">
			<include>FullscreenDimensions</include>
			<imagepath background="true">$INFO[Container(9000).ListItem.Property(background)]</imagepath>
			<visible>![Player.HasVideo + Skin.HasSetting(BackgroundVideo)]</visible>
			<visible>![Player.HasAudio + [!String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.ArtworkReady)) | !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image))] + [Skin.HasSetting(EnableArtistFanart) | Window.IsVisible(visualisation)]]</visible>
			<visible>!String.IsEmpty(Container(9000).ListItem.Property(background)) + [String.EndsWith(Container(9000).ListItem.Property(background),\) | String.EndsWith(Container(9000).ListItem.Property(background),/)] + Window.IsVisible(Home)</visible>
			<aspectratio>scale</aspectratio>
			<include>IndividualBackgroundFolderDuration</include>
			<fadetime>2000</fadetime>
			<randomize>true</randomize>
			<loop>yes</loop>
			<animation effect="fade" start="0" end="100" time="200" delay="70">Visible</animation>
			<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
			<include>WindowFadeAnimation</include>
			<include>BackgroundDepth</include>
		</control>
		
		<!-- Artists Slideshow -->
		<control type="image">
			<include>FullscreenDimensions</include>
			<aspectratio>scale</aspectratio>
			<fadetime>400</fadetime>
			<texture background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow.Image)]</texture>
			<visible>Player.HasAudio + !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image)) + [Skin.HasSetting(EnableArtistFanart) | Window.IsVisible(visualisation)]</visible>
			<animation effect="fade" start="0" end="100" time="200" delay="70">Visible</animation>
			<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
			<include>WindowFadeAnimation</include>
			<include>BackgroundDepth</include>
		</control>
		<control type="multiimage">
			<include>FullscreenDimensions</include>
			<imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
			<aspectratio>scale</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>400</fadetime>
			<randomize>true</randomize>
			<loop>yes</loop>
			<visible>Player.HasAudio + !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.ArtworkReady)) + [Skin.HasSetting(EnableArtistFanart) | Window.IsVisible(visualisation)]</visible>
			<animation effect="fade" start="0" end="100" time="200" delay="70">Visible</animation>
			<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
			<include>WindowFadeAnimation</include>
			<include>BackgroundDepth</include>
		</control>
		
		<!-- Fanart -->
		<control type="image" id="10000">
			<include>FullscreenDimensions</include>
			<texture background="true" fallback="transparent.png">$VAR[widgetBackground]</texture>
			<aspectratio>scale</aspectratio>
			<fadetime>400</fadetime>
			<visible>![Player.HasVideo + Skin.HasSetting(BackgroundVideo)]</visible>
			<visible>![Player.HasAudio + !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.Image)) + [Skin.HasSetting(EnableArtistFanart) | Window.IsVisible(visualisation)]]</visible>
			<visible>![Player.HasAudio + !String.IsEmpty(Window(Visualisation).Property(ArtistSlideshow.ArtworkReady)) + [Skin.HasSetting(EnableArtistFanart) | Window.IsVisible(visualisation)]]</visible>
			<visible>!Skin.HasSetting(HideFanart)</visible>
			<animation effect="fade" start="0" end="100" time="200" delay="70">Visible</animation>
			<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
			<include>WindowFadeAnimation</include>
			<include>BackgroundDepth</include>
		</control>

		<!-- Visualisation -->
		<control type="visualisation">
			<include>FullscreenDimensions</include>
			<visible>Player.HasAudio + [Skin.HasSetting(BackgroundVisualisation) | Window.IsVisible(visualisation)]</visible>
			<animation effect="fade" start="0" end="100" time="200" delay="70">Visible</animation>
			<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
			<include>WindowFadeAnimation</include>
			<include>BackgroundDepth</include>
		</control>

		<!-- Overlay -->
		<control type="image">
			<include>FullscreenOverlayDimensions</include>
			<texture background="true">$INFO[Skin.String(OSMCBackgroundOverlay),overlays/,.png]</texture>
			<aspectratio>scale</aspectratio>
			<colordiffuse>$VAR[BackgroundColor]</colordiffuse>
			<visible>!Window.Is(visualisation) | [Window.Is(visualisation) + [[Player.ShowInfo + !Skin.HasSetting(MusicOSD) | Skin.HasSetting(MusicOSD)] | Window.IsActive(musicosd)]]</visible>
			<include>WindowDepth</include>
		</control>
	</include>
	
	<!-- Dialog fanart -->
	<include name="DialogFanart">
		<!-- Black background image -->
		<control type="image">
			<include>FullscreenOverlayDimensions</include>
			<texture background="true">common/white.png</texture>
			<colordiffuse>FF000000</colordiffuse>
			<aspectratio>scale</aspectratio>
			<include>DialogZoomAnimation</include>
			<include>DialogBackgroundDepth</include>
		</control>
		<!-- Color -->
		<control type="image">
			<include>FullscreenOverlayDimensions</include>
			<texture background="true">common/white.png</texture>
			<colordiffuse>$VAR[SolidBackgroundColor]</colordiffuse>
			<visible>String.IsEqual(Skin.String(BackgroundDefaultImage),no) | String.IsEqual(Skin.String(BackgroundSingleImage),solid)</visible>
			<aspectratio>scale</aspectratio>
			<include>DialogZoomAnimation</include>
			<include>DialogBackgroundDepth</include>
		</control>
		<!-- Single background image -->
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">$VAR[OSMCBackgroundImage]</texture>
			<visible>[String.IsEqual(Skin.String(BackgroundDefaultImage),yes) | String.IsEqual(Skin.String(BackgroundSingleImage),yes) | String.IsEqual(Skin.String(BackgroundSingleImage),no) + String.IsEmpty(Skin.String(CustomBackgroundFolder))] + String.IsEmpty(Container(9000).ListItem.Property(background)) + String.IsEmpty(ListItem.Art(fanart))</visible>
			<aspectratio>scale</aspectratio>
			<include>DialogZoomAnimation</include>
			<include>DialogBackgroundDepth</include>
		</control>
		<!-- Multiple background images -->
		<control type="multiimage">
			<include>FullscreenDimensions</include>
			<imagepath background="true">$VAR[OSMCBackgroundImage]</imagepath>
			<visible>String.IsEqual(Skin.String(BackgroundSingleImage),no) + !String.IsEmpty(Skin.String(CustomBackgroundFolder)) + String.IsEmpty(Container(9000).ListItem.Property(background)) + String.IsEmpty(ListItem.Art(fanart))</visible>
			<aspectratio>scale</aspectratio>
			<include>CustomBackgroundFolderDuration</include>
			<fadetime>2000</fadetime>
			<randomize>true</randomize>
			<loop>yes</loop>
			<include>DialogZoomAnimation</include>
			<include>DialogBackgroundDepth</include>
		</control>
		<!-- Fanart -->
		<control type="image" id="10000">
			<include>FullscreenDimensions</include>
			<texture background="true" fallback="transparent.png">$INFO[ListItem.Art(fanart)]</texture>
			<aspectratio>scale</aspectratio>
			<fadetime>400</fadetime>
			<visible>!Skin.HasSetting(HideFanart)</visible>
			<include>DialogZoomAnimation</include>
			<include>DialogBackgroundDepth</include>
		</control>
		<!-- Overlay -->
		<control type="image">
			<include>FullscreenOverlayDimensions</include>
			<texture background="true">$INFO[Skin.String(OSMCBackgroundOverlay),overlays/,.png]</texture>
			<aspectratio>scale</aspectratio>
			<colordiffuse>$VAR[BackgroundColor]</colordiffuse>
			<animation type="WindowOpen">
				<effect type="zoom" start="70" end="100" center="auto" tween="back" easing="inout" time="300" />
				<effect type="fade" start="0" end="100" time="300" tween="quadratic" easing="out" />
			</animation>
			<animation type="WindowClose">
				<effect type="zoom" start="100" end="70" center="auto" time="300" />
				<effect type="fade" start="100" end="0" time="300" tween="quadratic" easing="in" />
			</animation>
			<include>DialogBackgroundDepth</include>
		</control>
	</include>

	<!-- Dialog fade background image -->
	<include name="DialogFadeBackgroundImage">
		<control type="image">
			<include>FullscreenOverlayDimensions</include>
			<texture colordiffuse="$VAR[DarkenColor]">dialogs/DialogTextBackground.png</texture>
			<animation effect="fade" start="0" end="100" time="200">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
			<include>BackgroundDepth</include>
		</control>
	</include>

	<!-- Options background image -->
	<include name="OptionsBackgroundImage">
		<control type="image">
			<include>FullscreenOverlayDimensions</include>
			<texture border="20">dialogs/OptionsBackground.png</texture>
		</control>
	</include>
	
	<!-- Multi image individual background duration -->
	<include name="IndividualBackgroundFolderDuration">
		<include condition="String.IsEqual(Skin.String(IndividualBackgroundFolderDuration),5s)">IndividualBackgroundFolderDuration5</include>
		<include condition="String.IsEqual(Skin.String(IndividualBackgroundFolderDuration),6s)">IndividualBackgroundFolderDuration6</include>
		<include condition="String.IsEqual(Skin.String(IndividualBackgroundFolderDuration),8s)">IndividualBackgroundFolderDuration8</include>
		<include condition="String.IsEqual(Skin.String(IndividualBackgroundFolderDuration),10s)">IndividualBackgroundFolderDuration10</include>
		<include condition="String.IsEqual(Skin.String(IndividualBackgroundFolderDuration),15s)">IndividualBackgroundFolderDuration15</include>
		<include condition="String.IsEqual(Skin.String(IndividualBackgroundFolderDuration),20s)">IndividualBackgroundFolderDuration20</include>
		<include condition="String.IsEqual(Skin.String(IndividualBackgroundFolderDuration),30s)">IndividualBackgroundFolderDuration30</include>
		<include condition="String.IsEqual(Skin.String(IndividualBackgroundFolderDuration),1 min)">IndividualBackgroundFolderDuration60</include>
    </include>
	
	<include name="IndividualBackgroundFolderDuration5">
		<timeperimage>5000</timeperimage>
    </include>
    <include name="IndividualBackgroundFolderDuration6">
		<timeperimage>6000</timeperimage>
    </include>
    <include name="IndividualBackgroundFolderDuration8">
		<timeperimage>8000</timeperimage>
    </include>
    <include name="IndividualBackgroundFolderDuration10">
		<timeperimage>10000</timeperimage>
    </include>
    <include name="IndividualBackgroundFolderDuration15">
		<timeperimage>15000</timeperimage>
    </include>
    <include name="IndividualBackgroundFolderDuration20">
		<timeperimage>20000</timeperimage>
    </include>
    <include name="IndividualBackgroundFolderDuration30">
		<timeperimage>30000</timeperimage>
    </include>
    <include name="IndividualBackgroundFolderDuration60">
		<timeperimage>60000</timeperimage>
    </include>
	
	<!-- Multi image custom background duration -->
	<include name="CustomBackgroundFolderDuration">
		<include condition="String.IsEqual(Skin.String(CustomBackgroundFolderDuration),5s)">CustomBackgroundFolderDuration5</include>
		<include condition="String.IsEqual(Skin.String(CustomBackgroundFolderDuration),6s)">CustomBackgroundFolderDuration6</include>
		<include condition="String.IsEqual(Skin.String(CustomBackgroundFolderDuration),8s)">CustomBackgroundFolderDuration8</include>
		<include condition="String.IsEqual(Skin.String(CustomBackgroundFolderDuration),10s)">CustomBackgroundFolderDuration10</include>
		<include condition="String.IsEqual(Skin.String(CustomBackgroundFolderDuration),15s)">CustomBackgroundFolderDuration15</include>
		<include condition="String.IsEqual(Skin.String(CustomBackgroundFolderDuration),20s)">CustomBackgroundFolderDuration20</include>
		<include condition="String.IsEqual(Skin.String(CustomBackgroundFolderDuration),30s)">CustomBackgroundFolderDuration30</include>
		<include condition="String.IsEqual(Skin.String(CustomBackgroundFolderDuration),1 min)">CustomBackgroundFolderDuration60</include>
    </include>
	
	<include name="CustomBackgroundFolderDuration5">
		<timeperimage>5000</timeperimage>
    </include>
    <include name="CustomBackgroundFolderDuration6">
		<timeperimage>6000</timeperimage>
    </include>
    <include name="CustomBackgroundFolderDuration8">
		<timeperimage>8000</timeperimage>
    </include>
    <include name="CustomBackgroundFolderDuration10">
		<timeperimage>10000</timeperimage>
    </include>
    <include name="CustomBackgroundFolderDuration15">
		<timeperimage>15000</timeperimage>
    </include>
    <include name="CustomBackgroundFolderDuration20">
		<timeperimage>20000</timeperimage>
    </include>
    <include name="CustomBackgroundFolderDuration30">
		<timeperimage>30000</timeperimage>
    </include>
    <include name="CustomBackgroundFolderDuration60">
		<timeperimage>60000</timeperimage>
    </include>
	
	<!-- 3D depth -->
	
	<!-- Background depth -->
	<include name="BackgroundDepth">
		<depth>-0.25</depth>
	</include>
	
	<!-- Window depth -->
	<include name="WindowDepth">
		<depth>0</depth>
	</include>
	
	<!-- Dialog background -->
	<include name="DialogBackgroundDepth">
		<depth>0.1</depth>
	</include>
	
	<!-- Dialog depth -->
	<include name="DialogDepth">
		<depth>0.35</depth>
	</include>
	
	<!-- Side/context menu and notification depth depth -->
	<include name="NotificationDepth">
		<depth>0.45</depth>
	</include>
	
	<!-- Busy dialog depth depth -->
	<include name="BusyDepth">
		<depth>0.55</depth>
	</include>
	
	<!-- Dialog button background -->
	<include name="dialogButtonBackground">
		<definition>
			<control type="image">
				<include>dialogButtonBackground_coords1</include>
				<texture colordiffuse="$VAR[TextColor1]">common/white.png</texture>
				<visible>ControlGroup($PARAM[id]).HasFocus</visible>
				<include>VisibleFadeAnimation</include>
			</control>
			<control type="image">
				<include>dialogButtonBackground_coords1</include>
				<texture colordiffuse="$VAR[TextColor2]">common/white.png</texture>
				<visible>!ControlGroup($PARAM[id]).HasFocus</visible>
				<include>VisibleFadeAnimation</include>
			</control>
			<control type="image">
				<include>dialogButtonBackground_coords2</include>
				<texture colordiffuse="$VAR[TextColor1]">common/white.png</texture>
				<visible>ControlGroup($PARAM[id]).HasFocus</visible>
				<include>VisibleFadeAnimation</include>
			</control>
			<control type="image">
				<include>dialogButtonBackground_coords2</include>
				<texture colordiffuse="$VAR[TextColor2]">common/white.png</texture>
				<visible>!ControlGroup($PARAM[id]).HasFocus</visible>
				<include>VisibleFadeAnimation</include>
			</control>
			<control type="image">
				<include>dialogButtonBackground_coords3</include>
				<texture colordiffuse="$VAR[DarkenColor]">dialogs/DialogTextBackground.png</texture>
				<visible>ControlGroup($PARAM[id]).HasFocus</visible>
				<include>VisibleFadeAnimation</include>
			</control>
		</definition>
	</include>
	
	<!-- Dialog button indicator -->
	<include name="dialogButtonIndicator">
		<definition>
			<control type="group">
				<visible>$PARAM[visibility]</visible>
				<include>VisibleFadeAnimation</include>
				<animation effect="slide" time="200" start="-200,0" end="0,0" delay="300">WindowOpen</animation>
				<animation effect="slide" time="200" start="0,0" end="-200,0" delay="300">WindowClose</animation>
				<control type="image">
					<left>10</left>
					<centertop>50%</centertop>
					<width>30</width>
					<height>30</height>
					<texture colordiffuse="$VAR[DialogColor2]">sub-menu-left.png</texture>
				</control>
			</control>
			
			<control type="group">
				<visible>$PARAM[visibility]</visible>
				<include>VisibleFadeAnimation</include>
				<animation effect="slide" time="200" start="200,0" end="0,0" delay="300">WindowOpen</animation>
				<animation effect="slide" time="200" start="0,0" end="200,0" delay="300">WindowClose</animation>
				<control type="image">
					<right>10</right>
					<centertop>50%</centertop>
					<width>30</width>
					<height>30</height>
					<texture colordiffuse="$VAR[DialogColor2]">sub-menu-right.png</texture>
				</control>
			</control>
		</definition>
	</include>

</includes>