<?xml version="1.0" encoding="UTF-8"?>
<window>
	<!-- videolibrary -->
	<backgroundcolor>0</backgroundcolor>
	<defaultcontrol always="true">10</defaultcontrol>
	<views>10</views>

	<!-- Sidemenu menucontrol -->
	<include content="SidemenuMenucontrol">
		<param name="id">3000</param>
	</include>

	<controls>

		<!-- Background -->
		<include>WindowBackgroundImage</include>

		<!-- Main group -->
		<control type="group">
			<include>WindowFadeAnimation</include>

			<control type="group">
				<include>VisibleFadeAnimation</include>
				<visible>Control.IsVisible(10)</visible>

				<!-- Scrollbar (list) -->
				<control type="scrollbar" id="60">
					<include>MyPVRGuide_coords1</include>
					<onleft condition="!Skin.HasSetting(KioskMode)">3000</onleft>
					<onright>10</onright>
					<showonepage>false</showonepage>
					<orientation>vertical</orientation>
					<colordiffuse>$VAR[OverlayColorNF]</colordiffuse>
					<texturesliderbackground border="11,1,1,1">common/ScrollBackground.png</texturesliderbackground>
					<texturesliderbar border="11,1,1,1">common/ScrollbarGripNF.png</texturesliderbar>
					<texturesliderbarfocus border="11,1,1,1" colordiffuse="$VAR[DialogColor1]">common/ScrollbarGripFO.png</texturesliderbarfocus>
					<textureslidernib></textureslidernib>
					<textureslidernibfocus></textureslidernibfocus>
					<visible>!Skin.HasSetting(Scrollbars)</visible>
				</control>
				
				<!-- EPG Grid -->
				<control type="epggrid" id="10">
					<include>MyPVRGuide_coords2</include>
					<onup>10</onup>
					<ondown>10</ondown>
					<onleft>10</onleft>
					<onright>10</onright>
					<onback condition="Control.IsVisible(60)">60</onback>
					<onback condition="!Control.IsVisible(60)">3000</onback>
					<rulerunit>12</rulerunit>
					<timeblocks>54</timeblocks>
					<pagecontrol>60</pagecontrol>
					<viewtype label="19032">list</viewtype>
					<progresstexture border="4,61,4,4">pvr/ProgressTimeline.png</progresstexture>
					<scrolltime tween="sine" easing="out">240</scrolltime>

					<include>MyPVRGuide_coords3</include>

					<include>MyPVRGuide_coords4</include>

					<include>MyPVRGuide_coords5</include>

					<include>MyPVRGuide_coords6</include>

					<include>MyPVRGuide_coords7</include>

				</control>

				<!-- Program preview & info -->
				<control type="group">
					<include>MyPVRGuide_coords8</include>
					<visible>!String.IsEmpty(ListItem.Label)</visible>
					<include>VisibleFadeAnimation</include>

					<control type="image">
						<include>MyPVRGuide_coords9</include>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<fadetime>200</fadetime>
						<texture background="true" fallback="DefaultLiveTV.png">$VAR[PVRChannelIcon]</texture>
						<visible>Window.IsVisible(TVGuide)</visible>
					</control>
					
					<control type="image">
						<include>MyPVRGuide_coords9</include>
						<aspectratio align="center" aligny="center">keep</aspectratio>
						<fadetime>200</fadetime>
						<texture background="true" fallback="DefaultRadio.png">$VAR[PVRChannelIcon]</texture>
						<visible>Window.IsVisible(RadioGuide)</visible>
					</control>

					<control type="fadelabel">
						<include>MyPVRGuide_coords10</include>
						<font>Font33-bold</font>
						<label>$INFO[ListItem.Label]</label>
						<textcolor>$VAR[TextColor1]</textcolor>
					</control>

					<control type="fadelabel">
						<include>MyPVRGuide_coords11</include>
						<label>$INFO[ListItem.EpisodeName]</label>
						<textcolor>$VAR[TextColor1]</textcolor>
						<visible>!String.IsEmpty(ListItem.EpisodeName)</visible>
					</control>
					
					<control type="fadelabel">
						<include>MyPVRGuide_coords12</include>
						<font>Font33-light</font>
						<label>$INFO[ListItem.Genre]</label>
						<textcolor>$VAR[TextColor1]</textcolor>
						<visible>!String.IsEmpty(ListItem.EpisodeName) + !String.IsEmpty(ListItem.Genre)</visible>
					</control>
					
					<control type="label">
						<include>MyPVRGuide_coords13</include>
						<label>$INFO[ListItem.StartTime]$INFO[ListItem.EndTime, - ]</label>
						<textcolor>$VAR[TextColor1]</textcolor>
						<visible>!String.IsEmpty(ListItem.EpisodeName) + !String.IsEmpty(ListItem.Genre)</visible>
					</control>
					
					<control type="fadelabel">
						<include>MyPVRGuide_coords11</include>
						<font>Font33-light</font>
						<label>$INFO[ListItem.Genre]</label>
						<textcolor>$VAR[TextColor1]</textcolor>
						<visible>String.IsEmpty(ListItem.EpisodeName) + !String.IsEmpty(ListItem.Genre)</visible>
					</control>
					
					<control type="label">
						<include>MyPVRGuide_coords12</include>
						<label>$INFO[ListItem.StartTime]$INFO[ListItem.EndTime, - ]</label>
						<textcolor>$VAR[TextColor1]</textcolor>
						<visible>String.IsEmpty(ListItem.EpisodeName) | String.IsEmpty(ListItem.Genre)</visible>
					</control>
					
					<control type="fadelabel">
						<include>MyPVRGuide_coords11</include>
						<label>$INFO[ListItem.StartTime]$INFO[ListItem.EndTime, - ]</label>
						<textcolor>$VAR[TextColor1]</textcolor>
						<visible>String.IsEmpty(ListItem.EpisodeName) + String.IsEmpty(ListItem.Genre)</visible>
					</control>

					<!-- Plot -->
					<control type="group">
						<include>MyPVRGuide_coords14</include>
						<control type="textbox">
							<font>Font27</font>
							<align>left</align>
							<label fallback="161">$INFO[ListItem.Plot]</label>
							<textcolor>$VAR[TextColor1]</textcolor>
							<autoscroll delay="8000" time="1800" repeat="10000">true</autoscroll>
							<visible>Skin.String(PlotFont,S) | Skin.String(PlotFont,S light)</visible>
						</control>
						<control type="textbox">
							<font>Font30</font>
							<align>left</align>
							<label fallback="161">$INFO[ListItem.Plot]</label>
							<textcolor>$VAR[TextColor1]</textcolor>
							<autoscroll delay="8000" time="1700" repeat="10000">true</autoscroll>
							<visible>Skin.String(PlotFont,M) | Skin.String(PlotFont,M light)</visible>
						</control>
						<control type="textbox">
							<font>Font33</font>
							<align>left</align>
							<label fallback="161">$INFO[ListItem.Plot]</label>
							<textcolor>$VAR[TextColor1]</textcolor>
							<autoscroll delay="8000" time="1600" repeat="10000">true</autoscroll>
							<visible>Skin.String(PlotFont,L) | Skin.String(PlotFont,XL) | Skin.String(PlotFont,L light) | Skin.String(PlotFont,XL light)</visible>
						</control>
					</control>

				</control>

			</control>

		</control>

		<!-- Time -->
		<include>Time</include>
		
		<!-- Submenu indicator -->
		<control type="group">
			<visible>!Window.IsVisible(contextmenu) + Control.HasFocus(10)</visible>
			<include>VisibleFadeAnimation</include>
			<animation effect="slide" time="200" start="-200,0" end="0,0">WindowOpen</animation>
			<animation effect="slide" time="200" start="0,0" end="-200,0">WindowClose</animation>
			<control type="image">
				<left>10</left>
				<centertop>50%</centertop>
				<width>30</width>
				<height>30</height>
				<texture colordiffuse="$VAR[DialogColor2]">sub-menu-return.png</texture>
			</control>
		</control>
		<control type="group">
			<visible>!Window.IsVisible(contextmenu) + !Skin.HasSetting(KioskMode) + Control.HasFocus(60)</visible>
			<include>VisibleFadeAnimation</include>
			<animation effect="slide" time="200" start="-200,0" end="0,0">WindowOpen</animation>
			<animation effect="slide" time="200" start="0,0" end="-200,0">WindowClose</animation>
			<control type="image">
				<left>10</left>
				<centertop>50%</centertop>
				<width>30</width>
				<height>30</height>
				<texture colordiffuse="$VAR[DialogColor2]">sub-menu-left.png</texture>
			</control>
		</control>

		<!-- Options -->
		<control type="group" id="9002">
			<include>NotificationDepth</include>
			<visible>!Skin.HasSetting(KioskMode)</visible>
			<control type="image">
				<include>FullscreenOverlayDimensions</include>
				<texture colordiffuse="$VAR[DarkenColor]">dialogs/DialogTextBackground.png</texture>
				<include>VisibleFadeAnimation</include>
				<visible>ControlGroup(9002).HasFocus</visible>
				<include>BackgroundDepth</include>
			</control>
			<control type="group">
				<left>-460</left>
				<top>0</top>
				<animation effect="slide" start="0,0" end="460,0" time="200" condition="ControlGroup(9002).HasFocus">Conditional</animation>
				<control type="image">
					<include>OptionsSideMenu1</include>
					<texture colordiffuse="$VAR[OverlayColor]">dialogs/Background.png</texture>
				</control>
				<control type="button">
					<include>OptionsSideMenu1</include>
					<texturefocus>noop</texturefocus>
				</control>

				<!-- Look controls -->
				<control type="grouplist" id="3000">
					<include>OptionsSideMenu2</include>
					<onleft>10</onleft>
					<onright>10</onright>
					<onback>10</onback>
					<scrolltime>200</scrolltime>
					<orientation>vertical</orientation>
					<itemgap>0</itemgap>
					<defaultcontrol always="true">28</defaultcontrol>

					<include content="SideMenuAnimation">
						<param name="containerID">3000</param>
					</include>

					<!-- Channel Groups -->
					<control type="button" id="28">
						<height>52</height>
						<label></label>
						<visible>Control.IsEnabled(28)</visible>
					</control>
					<!-- Group recording items by folder structure -->
					<control type="radiobutton" id="5">
						<height>52</height>
						<label>19270</label>
						<visible>Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings)</visible>
					</control>
					
					
					<control type="image" id="80">
						<left>0</left>
						<top>0</top>
						<width>410</width>
						<height>10</height>
						<texture>transparent.png</texture>
					</control>
					

					<!-- Channels -->
					<control type="button" id="100">
						<height>52</height>
						<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVChannels)</onclick>
						<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioChannels)</onclick>
						<onclick>SetFocus(10)</onclick>
						<label>19019</label>
						<visible>Window.IsActive(TVGuide) | Window.IsActive(RadioGuide) | Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings) | Window.IsActive(TVTimers) | Window.IsActive(RadioTimers) | Window.IsActive(TVTimerRules) | Window.IsActive(RadioTimerRules) | Window.IsActive(TVSearch) | Window.IsActive(RadioSearch)</visible>
					</control>
					<!-- Guide -->
					<control type="button" id="102">
						<height>52</height>
						<label>22020</label>
						<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVGuide)</onclick>
						<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioGuide)</onclick>
						<onclick>SetFocus(10)</onclick>
						<visible>Window.IsActive(TVChannels) | Window.IsActive(RadioChannels) | Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings) | Window.IsActive(TVTimers) | Window.IsActive(RadioTimers) | Window.IsActive(TVTimerRules) | Window.IsActive(RadioTimerRules) | Window.IsActive(TVSearch) | Window.IsActive(RadioSearch)</visible>
					</control>
					<!-- Recordings -->
					<control type="button" id="103">
						<height>52</height>
						<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVRecordings)</onclick>
						<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioRecordings)</onclick>
						<onclick>SetFocus(10)</onclick>
						<label>19163</label>
						<visible>Window.IsActive(TVChannels) | Window.IsActive(RadioChannels) | Window.IsActive(TVGuide) | Window.IsActive(RadioGuide) | Window.IsActive(TVTimers) | Window.IsActive(RadioTimers) | Window.IsActive(TVTimerRules) | Window.IsActive(RadioTimerRules) | Window.IsActive(TVSearch) | Window.IsActive(RadioSearch)</visible>
					</control>
					<!-- Timers -->
					<control type="button" id="35">
						<height>52</height>
						<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVTimers)</onclick>
						<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioTimers)</onclick>
						<onclick>SetFocus(50)</onclick>
						<label>19040</label>
						<visible>Window.IsActive(TVChannels) | Window.IsActive(RadioChannels) | Window.IsActive(TVGuide) | Window.IsActive(RadioGuide) | Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings) | Window.IsActive(TVTimerRules) | Window.IsActive(RadioTimerRules) | Window.IsActive(TVSearch) | Window.IsActive(RadioSearch)</visible>
					</control>
					<!-- Rules -->
					<control type="button" id="36">
						<height>52</height>
						<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVTimerRules)</onclick>
						<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioTimerRules)</onclick>
						<onclick>SetFocus(50)</onclick>
						<label>$LOCALIZE[31022]</label>
						<visible>Window.IsActive(TVChannels) | Window.IsActive(RadioChannels) | Window.IsActive(TVGuide) | Window.IsActive(RadioGuide) | Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings) | Window.IsActive(TVTimers) | Window.IsActive(RadioTimers) | Window.IsActive(TVSearch) | Window.IsActive(RadioSearch)</visible>
					</control>
					<!-- Search -->
					<control type="button" id="37">
						<height>52</height>
						<onclick condition="String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(TVSearch)</onclick>
						<onclick condition="!String.IsEmpty(Window.Property(IsRadio))">ActivateWindow(RadioSearch)</onclick>
						<onclick>SetFocus(50)</onclick>
						<label>137</label>
						<visible>Window.IsActive(TVChannels) | Window.IsActive(RadioChannels) | Window.IsActive(TVGuide) | Window.IsActive(RadioGuide) | Window.IsActive(TVRecordings) | Window.IsActive(RadioRecordings) | Window.IsActive(TVTimers) | Window.IsActive(RadioTimers) | Window.IsActive(TVTimerRules) | Window.IsActive(RadioTimerRules)</visible>
					</control>
					
					<include>SideMenuControls</include>
					
				</control>
			</control>
		</control>
		
		<control type="label" id="30">
			<left>-10000</left>
			<top>-10000</top>
			<width>1620</width>
			<height>72</height>
			<font>Font72</font>
			<textcolor>$VAR[TextColor1]</textcolor>
			<label></label>
		</control>

		<include>MaskingBars</include>

	</controls>

</window>